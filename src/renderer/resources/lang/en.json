{
    "category": { "name": "en" },
    "type": "en",
    "fallbackType": "en",
    "ko": "한국어",
    "en": "English",
    "jp": "日本語",
    "vn": "tiếng Việt",
    "Command": {
        "1": "장면 추가하기",
        "2": "장면 삭제하기",
        "3": "장면 이름 수정",
        "4": "장면 순서 변경",
        "5": "장면 선택",
        "101": "블록 쓰레드 추가하기",
        "102": "블록 쓰레드 삭제하기",
        "103": "블록 삭제하기",
        "104": "블록 복구하기",
        "105": "블록 끼워넣기",
        "106": "블록 분리하기",
        "107": "블록 이동하기",
        "108": "블록 복제하기",
        "109": "블록 복제 취소하기",
        "110": "스크롤",
        "111": "블록 필드값 수정",
        "117": "블록 쓰레드 추가하기",
        "118": "블록 끼워넣기",
        "119": "블록 이동하기",
        "120": "블록 분리하기",
        "121": "블록 이동하기",
        "122": "블록 끼워넣기",
        "123": "블록 끼워넣기",
        "201": "오브젝트 선택하기",
        "202": "오브젝트 수정 버튼 클릭",
        "203": "오브젝트 그림 추가",
        "204": "오브젝트 그림 삭제",
        "205": "오브젝트 소리 추가",
        "206": "오브젝트 소리 삭제",
        "207": "오브젝트 이름 수정",
        "208": "오브젝트 추가",
        "209": "오브젝트 삭제",
        "210": "오브젝트 추가 버튼 클릭",
        "211": "오브젝트 x 수정",
        "212": "오브젝트 y 수정",
        "213": "오브젝트 size 수정",
        "214": "오브젝트 방향 수정",
        "215": "오브젝트 이동 방향 수정",
        "216": "오브젝트 회전방식 수정",
        "217": "엔터티 모델 동기화",
        "301": "do",
        "302": "undo",
        "303": "redo",
        "401": "그림 수정하기",
        "402": "그림 수정 취소하기",
        "403": "그림 수정하기",
        "404": "그림 수정 취소하기",
        "405": "글상자 수정",
        "501": "시작하기",
        "502": "정지하기",
        "601": "컨테이너 오브젝트 선택하기",
        "701": "모드 바꾸기",
        "702": "모양 추가 버튼 클릭",
        "703": "소리 추가 버튼 클릭",
        "801": "속성 필터 선택하기",
        "802": "변수 추가하기 버튼 클릭",
        "803": "변수 추가하기",
        "804": "변수 삭제하기",
        "805": "변수 이름 설정",
        "806": "신호 이름 설정",
        "807": "신호 추가",
        "808": "신호 삭제",
        "809": "변수 스코프 정하기",
        "810": "변수 글로벌 체크",
        "811": "변수 보이기 체크",
        "812": "변수 기본값 설정",
        "813": "변수 슬라이드로 체크",
        "814": "변수 최솟값 정하기",
        "815": "변수 최댓값 정하기",
        "816": "리스트 추가 버튼 클릭",
        "817": "리스트 추가",
        "818": "리스트 삭제",
        "819": "리스트 이름 정하기",
        "820": "리스트 스코프 정하기",
        "821": "리스트 글로벌 체크",
        "822": "리스트 보이기 체크",
        "823": "리스트 길이 변경",
        "824": "리스트 기본값 설정",
        "825": "메세지 수정 enable",
        "826": "변수 수정 enable",
        "827": "리스트 수정 enable",
        "828": "변수 이름 정하기",
        "829": "리스트 이름 정하기",
        "900": "모달 닫기",
        "1001": "함수 생성 시작",
        "1002": "함수 수정 시작",
        "1003": "함수 수정 취소",
        "1004": "함수 생성",
        "1005": "함수 업데이트"
    },
    "CommandTooltip": {
        "101": "블록 쓰레드 추가하기",
        "102": "블록 쓰레드 삭제하기",
        "103": "블록 삭제하기",
        "104": "블록 복구하기",
        "105": "코드 분리하기$$코드 연결하기@@이 코드의 가장 위에 있는 블록을 잡고 분리하여 끌어옵니다.$$이 곳에 코드를 연결합니다.$$이 곳에 블록의 왼쪽 끝을 끼워 넣습니다.",
        "106": "블록 분리하기",
        "107": "블록 이동하기",
        "108": "블록 복제하기",
        "109": "블록 복제 취소하기",
        "110": "스크롤",
        "111": "블록 필드값 수정@@값을 입력하기 위해 이곳을 클릭합니다.$$선택지를 클릭합니다.$$선택지를 클릭합니다.$$&value&을 입력합니다.$$&value&를 선택합니다.$$키보드 &value&를 누릅니다.",
        "117": "블록 쓰레드 추가하기",
        "118": "블록 연결하기@@이 곳에 블록을 연결합니다.$$이 곳에 블록의 왼쪽 끝을 끼워 넣습니다.",
        "119": "블록 가져오기@@빈 곳에 블록을 끌어다 놓습니다.",
        "120": "블록 분리하기$$블록 삭제하기@@필요 없는 코드를 <b>휴지통</b>으로 끌어옵니다.$$이 곳에 코드를 버립니다.",
        "121": "블록 이동하기$$블록 삭제하기@@필요 없는 코드를 <b>휴지통</b>으로 끌어옵니다.$$이 곳에 코드를 버립니다.",
        "122": "블록 연결하기@@이 곳에 블록을 연결합니다.$$이 곳에 블록의 왼쪽 끝을 끼워 넣습니다.",
        "123": "코드 분리하기$$코드 연결하기@@이 코드의 가장 위에 있는 블록을 잡고 분리하여 끌어옵니다.$$이 곳에 코드를 연결합니다.$$이 곳에 블록의 왼쪽 끝을 끼워 넣습니다.",
        "201": "오브젝트 선택하기",
        "301": "do",
        "302": "undo",
        "303": "redo",
        "401": "그림 수정하기",
        "402": "그림 수정 취소하기",
        "403": "그림 수정하기",
        "404": "그림 수정 취소하기",
        "501": "실행하기@@<b>[시작하기]</b>를 누릅니다.",
        "502": "정지하기@@<b>[정지하기]</b>를 누릅니다.",
        "601": "컨테이너 오브젝트 선택하기",
        "701": "모드 바꾸기",
        "702": "모양 추가하기@@<b>모양추가</b>를 클릭합니다.",
        "703": "소리 추가하기@@<b>소리추가</b>를 클릭합니다.",
        "801": "변수 속성창 필터 선택하기",
        "802": "변수 추가하기@@<b>[변수 추가]</b>를 클릭합니다.",
        "803": "변수 추가하기@@<b>[확인]</b>을 클릭합니다.",
        "804": "변수 삭제하기@@이 버튼을 눌러 변수를 삭제합니다.",
        "805": "변수 이름 설정",
        "1101": "확장 블록 추가하기@@<b>확장 블록 블러오기</b>를 클릭합니다."
    },
    "Blocks": {
        "download_guide": "• Download Guide",
        "dictionary": "dictionary",
        "ai_utilize": "AI",
        "date_yesterday": "yesterday",
        "date_today": "today",
        "date_tomorrow": "tomorrow",
        "date_after_2_days": "After 2 days",
        "date_after_3_days": "After 3 days",
        "date_after_4_days": "After 4 days",
        "date_after_5_days": "After 5 days",
        "date_after_6_days": "After 6 days",
        "location_busan": "Busan",
        "location_busan_buk_gu": "Buk-gu",
        "location_busan_busanjin_gu": "Busanjin-gu",
        "location_busan_dong_gu": "Dong-gu",
        "location_busan_dongnae_gu": "Dongnae-gu",
        "location_busan_gangseo_gu": "Gangseo-gu",
        "location_busan_geumjeong_gu": "Geumjeong-gu",
        "location_busan_gijang": "Gijang-gun",
        "location_busan_haeundae_gu": "Haeundae-gu",
        "location_busan_jung_gu": "Jung-gu",
        "location_busan_nam_gu": "Nam-gu",
        "location_busan_saha_gu": "Saha-gu",
        "location_busan_sasang_gu": "Sasang-gu",
        "location_busan_seo_gu": "Seo-gu",
        "location_busan_suyeong_gu": "Suyoung-gu",
        "location_busan_yeongdo_gu": "Yeongdo-gu",
        "location_busan_yeonje": "Yeonje-gu",
        "location_chungcheongbuk": "Chungcheongbuk-do",
        "location_chungcheongbuk_boeun": "Boeun-gun",
        "location_chungcheongbuk_cheongju": "Cheongju-si",
        "location_chungcheongbuk_chungju": "Chungju-si",
        "location_chungcheongbuk_danyang": "Danyang-gun",
        "location_chungcheongbuk_eumseong": "Eumseong-gun",
        "location_chungcheongbuk_goesan": "Goesan-gun",
        "location_chungcheongbuk_jecheon": "Jecheon-si",
        "location_chungcheongbuk_jeungpyeong": "Jeungpyeong-gun",
        "location_chungcheongbuk_jincheon": "Jincheon-gun",
        "location_chungcheongbuk_okcheon": "Okcheon-gun",
        "location_chungcheongbuk_yeongdong": "Yeongdong-gun",
        "location_chungcheongnam": "Chungcheongnam-do",
        "location_chungcheongnam_asan": "Asan-si",
        "location_chungcheongnam_boryeong": "Boryeong-si",
        "location_chungcheongnam_buyeo": "Buyeo-gun",
        "location_chungcheongnam_cheonan": "Cheonan-si",
        "location_chungcheongnam_cheongyang": "Cheongyang-gun",
        "location_chungcheongnam_dangjin": "Dangjin-si",
        "location_chungcheongnam_geumsan": "Geumsan-gun",
        "location_chungcheongnam_gongju": "Gongju-si",
        "location_chungcheongnam_gyeryong": "Gyeryong-si",
        "location_chungcheongnam_hongseong": "Hongseong-gun",
        "location_chungcheongnam_nonsan": "Nonsan-si",
        "location_chungcheongnam_seocheon": "Seocheon-gun",
        "location_chungcheongnam_seosan": "Seosan-si",
        "location_chungcheongnam_taean": "Taean-gun",
        "location_chungcheongnam_yesan": "Yesan-gun",
        "location_daegu": "Daegu",
        "location_daegu_buk_gu": "Buk-gu",
        "location_daegu_dalseo_gu": "Dalseo-gu",
        "location_daegu_dalseong": "Dalseong-gun",
        "location_daegu_dong_gu": "Dong-gu",
        "location_daegu_gunwi": "Gunwi-gun",
        "location_daegu_jung_gu": "Jung-gu",
        "location_daegu_nam_gu": "Nam-gu",
        "location_daegu_seo_gu": "Seo-gu",
        "location_daegu_suseong_gu": "Suseong-gu",
        "location_daejeon": "Daejeon",
        "location_daejeon_daedeok_gu": "Daedeok-gu",
        "location_daejeon_dong_gu": "Dong-gu",
        "location_daejeon_jung_gu": "Jung-gu",
        "location_daejeon_seo_gu": "Seo-gu",
        "location_daejeon_yuseong_gu": "Yuseong-gu",
        "location_entire": "all",
        "location_gangwon": "Gangwon-do",
        "location_gangwon_cheolwon": "Cheorwon-gun",
        "location_gangwon_chuncheon": "Chuncheon-si",
        "location_gangwon_donghae": "Donghae-si",
        "location_gangwon_gangneung_si": "Gangneung-si",
        "location_gangwon_goseong": "Goseong-gun",
        "location_gangwon_hoengseong_gun": "Hoengseong-gun",
        "location_gangwon_hongcheon": "Hongcheon-gun",
        "location_gangwon_hwacheon": "Hwacheon-gun",
        "location_gangwon_inje": "Inje-gun",
        "location_gangwon_jeongseon": "Jeongseon-gun",
        "location_gangwon_pyeongchang": "Pyeongchang-gun",
        "location_gangwon_samcheok_si": "Samcheok-si",
        "location_gangwon_sokcho": "Sokcho-si",
        "location_gangwon_taebaek_si": "Taebaek-si",
        "location_gangwon_wonju": "Wonju-si",
        "location_gangwon_yanggu": "Yanggu-gun",
        "location_gangwon_yangyang": "Yangyang-gun",
        "location_gangwon_yeongwol_gun": "Yeongwol-gun",
        "location_gwangju": "Gwangju",
        "location_gwangju_buk_gu": "Buk-gu",
        "location_gwangju_dong_gu": "Dong-gu",
        "location_gwangju_gwangsan_gu": "Gwangsan-gu",
        "location_gwangju_nam_gu": "Nam-gu",
        "location_gwangju_seo_gu": "Seo-gu",
        "location_gyeonggi": "Gyeonggi-do",
        "location_gyeonggi_ansan_si": "Ansan-si",
        "location_gyeonggi_anseong_si": "Anseong-si",
        "location_gyeonggi_anyang_si": "Anyang-si",
        "location_gyeonggi_bucheon_si": "Bucheon-si",
        "location_gyeonggi_dongducheon_si": "Dongducheon-si",
        "location_gyeonggi_gapyeong_gun": "Gapyeong-gun",
        "location_gyeonggi_gimpo": "Gimpo-si",
        "location_gyeonggi_goyang_si": "Goyang-si",
        "location_gyeonggi_gunpo_si": "Gunpo-si",
        "location_gyeonggi_guri": "Guri-si",
        "location_gyeonggi_gwacheon_si": "Gwacheon-si",
        "location_gyeonggi_gwangju": "Guangju-si",
        "location_gyeonggi_gwangmyeong_si": "Gwangmyeong-si",
        "location_gyeonggi_hanam": "Hanam-si",
        "location_gyeonggi_hwaseong_si": "Hwaseong-si",
        "location_gyeonggi_icheon": "Icheon-si",
        "location_gyeonggi_namyangju_si": "Namyangju-si",
        "location_gyeonggi_osan": "Osan-si",
        "location_gyeonggi_paju": "Paju-si",
        "location_gyeonggi_pocheon": "Pocheon-si",
        "location_gyeonggi_pyeongtaek_si": "Pyeongtaek-si",
        "location_gyeonggi_seongnam": "Seongnam-si",
        "location_gyeonggi_siheung": "Siheung-si",
        "location_gyeonggi_suwon_si": "Suwon-si",
        "location_gyeonggi_uijeongbu": "Uijeongbu-si",
        "location_gyeonggi_uiwang_si": "Uiwang-si",
        "location_gyeonggi_yangju_si": "Yangju-si",
        "location_gyeonggi_yangpyeong": "Yangpyeong-gun",
        "location_gyeonggi_yeoju": "Yeoju-si",
        "location_gyeonggi_yeoncheon_gun": "Yeoncheon-gun",
        "location_gyeonggi_yongin_si": "Yongin-si",
        "location_gyeongsangbuk": "Gyeongsangbuk-do",
        "location_gyeongsangbuk_andong_si": "Andong-si",
        "location_gyeongsangbuk_bonghwa": "Bonghwa-gun",
        "location_gyeongsangbuk_cheongdo": "Cheongdo-gun",
        "location_gyeongsangbuk_cheongsong": "Cheongsong-gun",
        "location_gyeongsangbuk_chilgok": "Chilgok-gun",
        "location_gyeongsangbuk_gimcheon_si": "Gimcheon-si",
        "location_gyeongsangbuk_golyeong": "Goryeong-gun",
        "location_gyeongsangbuk_goryong": "Yeongyang-gun",
        "location_gyeongsangbuk_gumi_si": "Gumi-si",
        "location_gyeongsangbuk_gyeongju_si": "Gyeongju-si",
        "location_gyeongsangbuk_gyeongsan_si": "Gyeongsan-si",
        "location_gyeongsangbuk_mungyeong_si": "Mungyeong-si",
        "location_gyeongsangbuk_pohang_si": "Pohang-si",
        "location_gyeongsangbuk_sangju_si": "Sangju-si",
        "location_gyeongsangbuk_seongju": "Seongju-gun",
        "location_gyeongsangbuk_uiseong": "Uiseong-gun",
        "location_gyeongsangbuk_uljin": "Uljin-gun",
        "location_gyeongsangbuk_ulleung": "Ulleung-gun",
        "location_gyeongsangbuk_yecheon": "Yecheon-gun",
        "location_gyeongsangbuk_yeongcheon_si": "Yeongcheon-si",
        "location_gyeongsangbuk_yeongdeok": "Yeongdeok-gun",
        "location_gyeongsangbuk_yeongju_si": "Yeongju-si",
        "location_gyeongsangnam": "Gyeongsangnam-do",
        "location_gyeongsangnam_changnyeong": "Changnyeong-gun",
        "location_gyeongsangnam_changwon_si": "Changwon-si",
        "location_gyeongsangnam_geochang": "Geochang-gun",
        "location_gyeongsangnam_geoje_si": "Geoje-si",
        "location_gyeongsangnam_gimhae_si": "Gimhae-si",
        "location_gyeongsangnam_goseong": "Goseong-gun",
        "location_gyeongsangnam_hadong": "Hadong-gun",
        "location_gyeongsangnam_haman": "Haman-gun",
        "location_gyeongsangnam_hamyang": "Hamyang-gun",
        "location_gyeongsangnam_hapcheon": "Hapcheon-gun",
        "location_gyeongsangnam_jinju": "Jinju-si",
        "location_gyeongsangnam_miryang_si": "Miryang-si",
        "location_gyeongsangnam_namhae": "Namhae-gun",
        "location_gyeongsangnam_sacheon_si": "Sacheon-si",
        "location_gyeongsangnam_sancheong": "Sancheong-gun",
        "location_gyeongsangnam_tongyeong_si": "Tongyeong-si",
        "location_gyeongsangnam_uiryeong": "Uiryeong-gun",
        "location_gyeongsangnam_yangsan_si": "Yangsan-si",
        "location_incheon": "Incheon",
        "location_incheon_bupyeong_gu": "Bupyeong-gu",
        "location_incheon_dong_gu": "Dong-gu",
        "location_incheon_ganghwa": "Ganghwa-gun",
        "location_incheon_gyeyang_gu": "Gyeyang-gu",
        "location_incheon_jung_gu": "Jung-gu",
        "location_incheon_nam_gu": "Michuhol-gu",
        "location_incheon_namdong_gu": "Namdong-gu",
        "location_incheon_ongjin_gun": "Ongjin-gun",
        "location_incheon_seo_gu": "Seo-gu",
        "location_incheon_yeonsu_gu": "Yeonsu-gu",
        "location_jeju": "Jeju-do",
        "location_jeju_jeju_si": "Jeju-si",
        "location_jeju_seogwipo": "Seogwipo-si",
        "location_jeollabuk": "Jeonbuk-do",
        "location_jeollabuk_buan": "Buan-gun",
        "location_jeollabuk_gimje_si": "Gimje-si",
        "location_jeollabuk_gochang": "Gochang-gun",
        "location_jeollabuk_gunsan_si": "Gunsan-si",
        "location_jeollabuk_iksan": "Iksan-si",
        "location_jeollabuk_imsil": "Imsil-gun",
        "location_jeollabuk_jangsu": "Jangsu-gun",
        "location_jeollabuk_jeongeup": "Jeongeup-si",
        "location_jeollabuk_jeonju": "Jeonju-si",
        "location_jeollabuk_jinan": "Jinan-gun",
        "location_jeollabuk_muju": "Muju-gun",
        "location_jeollabuk_namwon": "Namwon-si",
        "location_jeollabuk_sunchang": "Sunchang-gun",
        "location_jeollabuk_wanju": "Wanju-gun",
        "location_jeollanam": "Jeollanam-do",
        "location_jeollanam_boseong": "Boseong-gun",
        "location_jeollanam_damyang": "Damyang-gun",
        "location_jeollanam_gangjin": "Gangjin-gun",
        "location_jeollanam_goheung": "Goheung-gun",
        "location_jeollanam_gokseong": "Gokseong-gun",
        "location_jeollanam_gurye": "Gurye-gun",
        "location_jeollanam_gwangyang_si": "Gwangyang-si",
        "location_jeollanam_haenam": "Haenam-gun",
        "location_jeollanam_hampyeong": "Yeonggwang-gun",
        "location_jeollanam_hwasun": "Hwasun-gun",
        "location_jeollanam_jangheung": "Jangheung-gun",
        "location_jeollanam_jangseong": "Wando-gun",
        "location_jeollanam_jindo": "Muan-gun",
        "location_jeollanam_mokpo": "Mokpo-si",
        "location_jeollanam_muan": "Hampyeong-gun",
        "location_jeollanam_naju": "Naju-si",
        "location_jeollanam_sinan": "Shinan-gun",
        "location_jeollanam_suncheon_si": "Suncheon-si",
        "location_jeollanam_wando": "Jindo-gun",
        "location_jeollanam_yeongam": "Yeongam-gun",
        "location_jeollanam_yeonggwang": "Jangseong-gun",
        "location_jeollanam_yosu": "Yeosu-si",
        "location_sejong": "Sejong-si",
        "location_seoul": "Seoul",
        "location_seoul_dobong_gu": "Dobong-gu",
        "location_seoul_dongdaemun_gu": "Dongdaemun-gu",
        "location_seoul_dongjak_gu": "Dongjak-gu",
        "location_seoul_eunpyeong_gu": "Eunpyeong-gu",
        "location_seoul_gangbuk_gu": "Gangbuk-gu",
        "location_seoul_gangdong_gu": "Gangdong-gu",
        "location_seoul_gangnam_gu": "Gangnam-gu",
        "location_seoul_gangseo_gu": "Gangseo-gu",
        "location_seoul_geumcheon_gu": "Geumcheon-gu",
        "location_seoul_guro_gu": "Guro-gu",
        "location_seoul_gwanak_gu": "Gwanak-gu",
        "location_seoul_gwangjin_gu": "Gwangjin-gu",
        "location_seoul_jongno_gu": "Jongno-gu",
        "location_seoul_jung_gu": "Jung-gu",
        "location_seoul_jungnang_gu": "Jungrang-gu",
        "location_seoul_mapo_gu": "Mapo-gu",
        "location_seoul_nowon_gu": "Nowon-gu",
        "location_seoul_seocho_gu": "Seocho-gu",
        "location_seoul_seodaemun_gu": "Seodaemun-gu",
        "location_seoul_seongbuk_gu": "Seongbuk-gu",
        "location_seoul_seongdong_gu": "Seongdong-gu",
        "location_seoul_songpa_gu": "Songpa-gu",
        "location_seoul_yangcheon_gu": "Yangcheon-gu",
        "location_seoul_yeongdeungpo_gu": "Yeongdeungpo-gu",
        "location_seoul_yongsan_gu": "Yongsan-gu",
        "location_ulsan": "Ulsan",
        "location_ulsan_buk_gu": "Buk-gu",
        "location_ulsan_dong_gu": "Dong-gu",
        "location_ulsan_jung_gu": "Jung-gu",
        "location_ulsan_nam_gu": "Nam-gu",
        "location_ulsan_ulju": "Ulju-gun",
        "EXPANSION_WEATHER_sunny": "sunny",
        "EXPANSION_WEATHER_partly_cloudy": "partly cloudy",
        "EXPANSION_WEATHER_mostly_cloudy": "mostly cloudy",
        "EXPANSION_WEATHER_cloudy": "cloudy",
        "EXPANSION_WEATHER_rainy": "rainy",
        "EXPANSION_WEATHER_sleet": "sleet",
        "EXPANSION_WEATHER_snowy": "snowy",
        "EXPANSION_WEATHER_finedust_good": "good",
        "EXPANSION_WEATHER_finedust_normal": "normal",
        "EXPANSION_WEATHER_finedust_bad": "bad",
        "EXPANSION_WEATHER_finedust_very_bad": "very bad",
        "EXPANSION_WEATHER_lowest_temperature": "the lowest temperature(℃)",
        "EXPANSION_WEATHER_highest_temperature": "the highest temperature(℃)",
        "EXPANSION_WEATHER_humidity": "humidity(%)",
        "EXPANSION_WEATHER_precipitation": "precipitation(mm)",
        "EXPANSION_WEATHER_precipitation_probability": "precipitation probability(%)",
        "EXPANSION_WEATHER_wind_speed": "wind speed(m/s)",
        "EXPANSION_WEATHER_temperature": "temperature(℃)",
        "EXPANSION_WEATHER_finedust": "concentration of fine dust(㎍)",
        "EXPANSION_FESTIVAL_title": "Title",
        "EXPANSION_FESTIVAL_area": "area",
        "EXPANSION_FESTIVAL_start_date": "start date",
        "EXPANSION_FESTIVAL_end_date": "end date",
        "EXPANSION_FESTIVAL_address": "address",
        "EXPANSION_FESTIVAL_coordinate": "coordinate",
        "EXPANSION_FESTIVAL_overview": "overview",
        "EXPANSION_FESTIVAL_homepage": "homepage",
        "learn_type_image": "이미지",
        "learn_type_sound": "사운드",
        "learn_type_text": "글자",
        "learn_popup_title": "Input Data",
        "learn_no_result": "인식된 결과가 없습니다.",
        "no_data": "No Information",
        "no_sentence": "No sentence",
        "sentence_over_20_charactor": "Only 20 characters can be entered.",
        "sentence_over_3000_charactor": "Only 3000 characters can be entered.",
        "sentence_over_2500_charactor": "Only 2500 characters can be entered.",
        "unknown_sentence": "Unknown sentence",
        "auto": "auto",
        "korean": "Korean",
        "english": "English",
        "spanish": "Spanish",
        "french": "French",
        "german": "German",
        "russian": "Russian",
        "portuguese": "Portuguese",
        "hindi": "Hindi",
        "japan": "japan",
        "thai": "Thai",
        "vietnamese": "Vietnamese",
        "indonesian": "Indonesian",
        "chinese_simplified": "Simplified Chinese",
        "chinese_traditional": "Traditional Chinese",
        "italian": "Italian",
        "behaviorConduct01001": "Typhoon",
        "behaviorConduct01002": "Flood",
        "behaviorConduct01003": "Heavy rain",
        "behaviorConduct01004": "Gale",
        "behaviorConduct01005": "Heavy snow",
        "behaviorConduct01006": "Cold wave",
        "behaviorConduct01007": "Storm",
        "behaviorConduct01008": "Dust storm",
        "behaviorConduct01009": "Heatwave",
        "behaviorConduct01010": "Drought",
        "behaviorConduct01011": "Earthquake",
        "behaviorConduct01013": "Tsunami",
        "behaviorConduct01014": "Landslide",
        "behaviorConduct03002": "First aid",
        "behaviorConduct03003": "CPR",
        "behaviorConduct03004": "Fire extinguishers use",
        "behaviorConduct03016": "Fireplug use",
        "behaviorConduct03005": "Food poisoning",
        "behaviorConduct03006": "Climbing safety",
        "behaviorConduct03008": "Kidnapping·Missing",
        "behaviorConduct03009": "SAE",
        "behaviorConduct03010": "School violence",
        "behaviorConduct03011": "Domestic Violence",
        "behaviorConduct03012": "Detention and abduction",
        "behaviorConduct03013": "Traffic Accident",
        "behaviorConduct03014": "Elevator accident",
        "behaviorConduct03015": "Fine dust",
        "behaviorConduct01001001": "Before the typhoon comes",
        "behaviorConduct01001002": "When the typhoon warning occurs",
        "behaviorConduct01001003": "After the typhoon has passed",
        "behaviorConduct01002002": "When the flood forecast occurs",
        "behaviorConduct01002003": "When the water is pushed",
        "behaviorConduct01002004": "After the water ir removed",
        "behaviorConduct01003002": "When the heavy rain forecast occurs",
        "behaviorConduct01003003": "When the heavy rain warning occurs",
        "behaviorConduct01003004": "After the heavy rain has passed",
        "behaviorConduct01004001": "Before the gale comes",
        "behaviorConduct01004002": "When the gale occurs",
        "behaviorConduct01005002": "Before the heavy snow comes",
        "behaviorConduct01005003": "When the heavy snow occurs",
        "behaviorConduct01005004": "After the heavy snow has passed",
        "behaviorConduct01006001": "Before the cold wave comes",
        "behaviorConduct01006002": "When the cold wave occurs",
        "behaviorConduct01007001": "When the storm warning occurs",
        "behaviorConduct01007002": "Before the storm comes",
        "behaviorConduct01008001": "When the dust storm forecast occurs",
        "behaviorConduct01008002": "When the dust storm occurs",
        "behaviorConduct01008003": "After the dust storm has passed",
        "behaviorConduct01009001": "Before the heatwave comes",
        "behaviorConduct01009002": "When the heatwave watch occurs",
        "behaviorConduct01010001": "When the drought occurs",
        "behaviorConduct01011009": "Before the earthquakes comes",
        "behaviorConduct01011010": "When the earthquake occurs",
        "behaviorConduct01011012": "After the earthquake evacuation",
        "behaviorConduct01013002": "Before the tsunami comes",
        "behaviorConduct01013003": "When the tsunami occurs",
        "behaviorConduct01014001": "When the landslide watch occurs",
        "behaviorConduct03002002": "treat burns",
        "behaviorConduct03002003": "prevate fever",
        "behaviorConduct03002004": "treat when bitten by a snake",
        "behaviorConduct03002005": "treat when shot by bee",
        "behaviorConduct03002006": "do first aid hyperventilation syndrome",
        "behaviorConduct03003001": "do adult CPR",
        "behaviorConduct03003002": "do infant CPR",
        "behaviorConduct03003003": "use an automatic defibrillator",
        "behaviorConduct03004001": "use a powder fire extinguisher",
        "behaviorConduct03016001": "use a indoor fire hydrants",
        "emergencyActionGuidelines01001": "typhoon",
        "emergencyActionGuidelines01001001": "태풍 예보 시",
        "emergencyActionGuidelines01001002": "태풍 특보 시",
        "emergencyActionGuidelines01001003": "태풍 이후",
        "emergencyActionGuidelines01002": "flood",
        "emergencyActionGuidelines01002001": "홍수 예·경보 시",
        "emergencyActionGuidelines01002002": "홍수 우려 때",
        "emergencyActionGuidelines01002003": "물이 밀려들 때",
        "emergencyActionGuidelines01002004": "물이 빠진 후에",
        "emergencyActionGuidelines01003": "heavy rain",
        "emergencyActionGuidelines01003001": "호우 대비",
        "emergencyActionGuidelines01003002": "호우 예보 시",
        "emergencyActionGuidelines01003003": "호우 특보 중",
        "emergencyActionGuidelines01003004": "호우 이후",
        "emergencyActionGuidelines01004": "strong wind",
        "emergencyActionGuidelines01004001": "강풍 대비",
        "emergencyActionGuidelines01004002": "강풍 발생 시",
        "emergencyActionGuidelines01004003": "강풍 관련",
        "emergencyActionGuidelines01005": "heavy snow",
        "emergencyActionGuidelines01005001": "대설 대비",
        "emergencyActionGuidelines01005002": "대설 예보 시",
        "emergencyActionGuidelines01005003": "대설 특보 시",
        "emergencyActionGuidelines01005004": "대설 이후",
        "emergencyActionGuidelines01006": "cold wave",
        "emergencyActionGuidelines01006001": "한파 대비",
        "emergencyActionGuidelines01006002": "한파 발생 시",
        "emergencyActionGuidelines01007": "rough seas",
        "emergencyActionGuidelines01007001": "풍랑 특보 시",
        "emergencyActionGuidelines01008": "yellow dust",
        "emergencyActionGuidelines01008001": "황사 대비",
        "emergencyActionGuidelines01008002": "황사 발생 시",
        "emergencyActionGuidelines01008003": "황사 이후",
        "emergencyActionGuidelines01008003": "황사 관련",
        "emergencyActionGuidelines01009": "heat wave",
        "emergencyActionGuidelines01009001": "폭염 대비",
        "emergencyActionGuidelines01009002": "폭염 발생 시",
        "emergencyActionGuidelines01009003": "폭염 관련",
        "emergencyActionGuidelines01010": "drought",
        "emergencyActionGuidelines01010001": "가뭄 시 생활",
        "emergencyActionGuidelines01010002": "가뭄 시 농촌",
        "emergencyActionGuidelines01011": "earthquake",
        "emergencyActionGuidelines01011007": "지진 발생 시 상황별",
        "emergencyActionGuidelines01011008": "지진 발생 시 장소별",
        "emergencyActionGuidelines01011009": "지진 대비",
        "emergencyActionGuidelines01011010": "지진 발생 시",
        "emergencyActionGuidelines01011011": "지진 장소별",
        "emergencyActionGuidelines01011012": "지진 대피 후",
        "emergencyActionGuidelines01012": "tsunami",
        "emergencyActionGuidelines01012005": "발생 시 (선박 위)",
        "emergencyActionGuidelines01012006": "발생 시 (지상 대피)",
        "emergencyActionGuidelines01013": "tidal wave",
        "emergencyActionGuidelines01013001": "해일 대비",
        "emergencyActionGuidelines01013002": "해일 때",
        "emergencyActionGuidelines01013003": "해일 발생 때",
        "emergencyActionGuidelines01013004": "미쳐 대피 못한 때",
        "emergencyActionGuidelines01013005": "폭풍해일",
        "emergencyActionGuidelines01014": "landslide",
        "emergencyActionGuidelines01014001": "산사태 취약 지역 (주의보)",
        "emergencyActionGuidelines01014002": "산사태 취약 지역 (경보)",
        "emergencyActionGuidelines01014003": "일반 지역 (주의보)",
        "emergencyActionGuidelines01014004": "일반 지역 (경보)",
        "emergencyActionGuidelines01015": "volcanic eruption",
        "emergencyActionGuidelines01015001": "화산재 낙하 대비",
        "emergencyActionGuidelines01015002": "화산재 낙하 시",
        "emergencyActionGuidelines01015003": "화산재 제거 이유",
        "emergencyActionGuidelines02001": "marine pollution",
        "emergencyActionGuidelines02001001": "발생 전",
        "emergencyActionGuidelines02001002": "발생 시",
        "emergencyActionGuidelines02001003": "조치 완료 후",
        "emergencyActionGuidelines02002": "large-scale water pollution",
        "emergencyActionGuidelines02002001": "사고 시",
        "emergencyActionGuidelines02002002": "구별 방법",
        "emergencyActionGuidelines02003": "water shortage",
        "emergencyActionGuidelines02003001": "급수중단 발령 시",
        "emergencyActionGuidelines02003002": "Ⅰ급상황 발생 시",
        "emergencyActionGuidelines02003002": "Ⅱ급상황 발생 시",
        "emergencyActionGuidelines02004": "utility tunnel disaster",
        "emergencyActionGuidelines02004001": "발생 우려 시",
        "emergencyActionGuidelines02004002": "발생 시",
        "emergencyActionGuidelines02005": "livestock disease",
        "emergencyActionGuidelines02005001": "구제역 발생 시",
        "emergencyActionGuidelines02005002": "조류인플루엔자(AI) 발생 시",
        "emergencyActionGuidelines02005003": "발생 방지 대책",
        "emergencyActionGuidelines02005004": "발생 의심 시",
        "emergencyActionGuidelines02005005": "발생 확인 시",
        "emergencyActionGuidelines02006": "infectious disease",
        "emergencyActionGuidelines02006001": "예방 대책",
        "emergencyActionGuidelines02006002": "증상이 나타날 때",
        "emergencyActionGuidelines02006003": "중동호흡기증후군(MERS)",
        "emergencyActionGuidelines02007": "railway and subway",
        "emergencyActionGuidelines02007001": "지하철 화재 발생 시",
        "emergencyActionGuidelines02007002": "고속철도 화재 발생 시",
        "emergencyActionGuidelines02007003": "사고 및 테러(독가스) 발생 시",
        "emergencyActionGuidelines02008": "financial IT system",
        "emergencyActionGuidelines02008001": "보이스피싱 피해금 지급 정지",
        "emergencyActionGuidelines02008002": "보이스피싱 피해 예방",
        "emergencyActionGuidelines02009": "nuclear power plant accident",
        "emergencyActionGuidelines02009001": "국민보호조치 발표 시",
        "emergencyActionGuidelines02009002": "방사능구름 통과 시",
        "emergencyActionGuidelines02009003": "옥내 대피 및 소개 시",
        "emergencyActionGuidelines02010": "chemical accident",
        "emergencyActionGuidelines02010001": "화학물질 유출 시",
        "emergencyActionGuidelines02010002": "니트로글리세린 누출 시",
        "emergencyActionGuidelines02010003": "트리니트로톨루엔 누출 시",
        "emergencyActionGuidelines02010004": "화학유해물질(독성가스) 누출 시",
        "emergencyActionGuidelines02011": "fire",
        "emergencyActionGuidelines02011001": "일반",
        "emergencyActionGuidelines02011002": "예방 대책",
        "emergencyActionGuidelines02011003": "화재 발생 후",
        "emergencyActionGuidelines02011004": "화재 시",
        "emergencyActionGuidelines02011005": "화재 시 긴급 대피",
        "emergencyActionGuidelines02011006": "화재 시 피해 복구",
        "emergencyActionGuidelines02011007": "가정에서의 안전",
        "emergencyActionGuidelines02011008": "연기 관련 정보",
        "emergencyActionGuidelines02011009": "아파트 화재 시",
        "emergencyActionGuidelines02011010": "아파트 화재 대비",
        "emergencyActionGuidelines02011011": "도로 터널 화재",
        "emergencyActionGuidelines02011012": "대형 화재",
        "emergencyActionGuidelines02011013": "고층 건물 화재",
        "emergencyActionGuidelines02011014": "지하상가 화재 안전수칙",
        "emergencyActionGuidelines02011015": "지하철 화재 발생 시",
        "emergencyActionGuidelines02012": "wildfire",
        "emergencyActionGuidelines02012001": "주택가 산불 확산 시",
        "emergencyActionGuidelines02012002": "산불 방지",
        "emergencyActionGuidelines02012003": "봄철 산불 관련",
        "emergencyActionGuidelines02012004": "산불 예방",
        "emergencyActionGuidelines02012005": "산불 발생 후",
        "emergencyActionGuidelines02012006": "산불 대피",
        "emergencyActionGuidelines02012007": "산불 피해 지역 가축 관리",
        "emergencyActionGuidelines02013": "building collapse",
        "emergencyActionGuidelines02013001": "사고 발생 시",
        "emergencyActionGuidelines02013002": "징조를 느낄 때",
        "emergencyActionGuidelines02013003": "건물 내부에 있을 때",
        "emergencyActionGuidelines02013004": "건물 외부에 있을 때",
        "emergencyActionGuidelines02013005": "붕괴, 매몰된 경우",
        "emergencyActionGuidelines02013007": "도로 공사장 붕괴",
        "emergencyActionGuidelines02013008": "상수도 공사장 붕괴",
        "emergencyActionGuidelines02013008": "아파트 공사장 붕괴",
        "emergencyActionGuidelines02013008": "지하철 공사장 붕괴",
        "emergencyActionGuidelines02014": "dam collapse",
        "emergencyActionGuidelines02014001": "붕괴 우려 시",
        "emergencyActionGuidelines02014002": "붕괴 발생 시",
        "emergencyActionGuidelines02014003": "물이 빠진 후",
        "emergencyActionGuidelines02015": "explosion",
        "emergencyActionGuidelines02015001": "가스 폭발 시",
        "emergencyActionGuidelines02015004": "폭발 현장",
        "emergencyActionGuidelines02016": "aircraft accident",
        "emergencyActionGuidelines02016001": "항공기 사고 예방",
        "emergencyActionGuidelines02017": "CBRN incident",
        "emergencyActionGuidelines02017001": "사고 발생 시",
        "emergencyActionGuidelines02018": "power outage",
        "emergencyActionGuidelines02018001": "정전 시",
        "emergencyActionGuidelines02018002": "정전 발생 시",
        "emergencyActionGuidelines02018003": "정전 상황별",
        "emergencyActionGuidelines02019": "electricity·gas",
        "emergencyActionGuidelines02019001": "전기사고 예방",
        "emergencyActionGuidelines02019002": "침수지역 감전 사고 예방",
        "emergencyActionGuidelines02019003": "대피 명령 시 전기설비 조치",
        "emergencyActionGuidelines02019004": "정전 발생 시 조치",
        "emergencyActionGuidelines02019005": "야외 주의 사항",
        "emergencyActionGuidelines02019006": "가스사고 예방",
        "emergencyActionGuidelines02019007": "가스사고 발생 시",
        "emergencyActionGuidelines02019008": "LPG 응급조치",
        "emergencyActionGuidelines02019009": "도시가스(LNG) 응급조치",
        "emergencyActionGuidelines02019010": "이동식 부탄가스 안전점검",
        "emergencyActionGuidelines02019011": "가스 사용 시 안전점검",
        "emergencyActionGuidelines02019012": "가스 누출 발생 시 대피",
        "emergencyActionGuidelines02019013": "배관 등에서 대량 누출 시",
        "emergencyActionGuidelines02019014": "기타 사항",
        "emergencyActionGuidelines02019016": "염소가스 누출 시",
        "emergencyActionGuidelines02020": "passenger ship",
        "emergencyActionGuidelines02020001": "이용객 금지 행위",
        "emergencyActionGuidelines02020002": "사고 발생 시",
        "emergencyActionGuidelines02021": "water accident",
        "emergencyActionGuidelines02021001": "하천이나 계곡물",
        "emergencyActionGuidelines02021002": "무릎 이상의 깊은 급류",
        "emergencyActionGuidelines02021003": "물에 빠졌을 때",
        "emergencyActionGuidelines02021004": "파도가 높아져 위험할 때",
        "emergencyActionGuidelines02021005": "수초에 감겼을 때",
        "emergencyActionGuidelines02021006": "의식 없는 사고자를 구했을 때",
        "emergencyActionGuidelines02021007": "고립 지역",
        "emergencyActionGuidelines02021008": "계곡에서 야영지를 선택 시",
        "emergencyActionGuidelines02021009": "보트 전복 등에 따른 대처",
        "emergencyActionGuidelines02021010": "갯바위 등 바다낚시 사고 예방",
        "emergencyActionGuidelines02021011": "갯벌 해루질 사고 예방",
        "emergencyActionGuidelines02022": "terrorism",
        "emergencyActionGuidelines02022007": "신고 요령",
        "emergencyActionGuidelines02022008": "대형, 고층건물 재난 시",
        "emergencyActionGuidelines02022009": "폭발물 발견 시",
        "emergencyActionGuidelines02022010": "화학 테러(독가스 등) 발생 시",
        "emergencyActionGuidelines02022011": "생물 테러 발생 시",
        "emergencyActionGuidelines02022012": "방사능 테러 발생 시",
        "emergencyActionGuidelines02022013": "화재 발생 시",
        "emergencyActionGuidelines02022014": "총격 현장",
        "emergencyActionGuidelines02022015": "매몰, 붕괴 시",
        "emergencyActionGuidelines02022016": "억류, 납치 시",
        "emergencyActionGuidelines02022017": "테러범·의심물체 등",
        "emergencyActionGuidelines02023": "power shortage",
        "emergencyActionGuidelines02023001": "단계별",
        "emergencyActionGuidelines03002": "first aid",
        "emergencyActionGuidelines03002001": "일반",
        "emergencyActionGuidelines03002002": "화상",
        "emergencyActionGuidelines03002003": "온열질환",
        "emergencyActionGuidelines03002004": "뱀에 물렸을 때",
        "emergencyActionGuidelines03002005": "벌에 쏘였을 때",
        "emergencyActionGuidelines03002006": "과호흡증후군",
        "emergencyActionGuidelines03002007": "상비약",
        "emergencyActionGuidelines03003": "CPR",
        "emergencyActionGuidelines03003001": "성인",
        "emergencyActionGuidelines03003002": "영유아",
        "emergencyActionGuidelines03003003": "자동제세동기",
        "emergencyActionGuidelines03004": "fire extinguisher",
        "emergencyActionGuidelines03004001": "분말 소화기",
        "emergencyActionGuidelines03004002": "투척용 소화기",
        "emergencyActionGuidelines03004003": "설치/취급 및 사용법",
        "emergencyActionGuidelines03004004": "소화기의 종류",
        "emergencyActionGuidelines03005": "food poisoning",
        "emergencyActionGuidelines03005001": "일반",
        "emergencyActionGuidelines03005002": "음식점/급식소 운영자",
        "emergencyActionGuidelines03006": "hiking",
        "emergencyActionGuidelines03006001": "위급 상황 시",
        "emergencyActionGuidelines03006002": "구조 요청 시",
        "emergencyActionGuidelines03006003": "응급조치",
        "emergencyActionGuidelines03007": "children's playground",
        "emergencyActionGuidelines03007001": "탑승 대기",
        "emergencyActionGuidelines03007002": "안전 이용",
        "emergencyActionGuidelines03007003": "탑승 제한",
        "emergencyActionGuidelines03007004": "어린이 탑승",
        "emergencyActionGuidelines03007005": "탑승 시 주의",
        "emergencyActionGuidelines03007006": "운행 중 자세",
        "emergencyActionGuidelines03007007": "탑승 완료 후 퇴장",
        "emergencyActionGuidelines03008": "missing·kidnapping",
        "emergencyActionGuidelines03008001": "예방 방법",
        "emergencyActionGuidelines03009": "sexual violence",
        "emergencyActionGuidelines03009001": "예방 방법",
        "emergencyActionGuidelines03010": "school violence",
        "emergencyActionGuidelines03010001": "예방 방법",
        "emergencyActionGuidelines03011": "domestic violence",
        "emergencyActionGuidelines03011001": "예방 방법",
        "emergencyActionGuidelines03012": "detention·abduction",
        "emergencyActionGuidelines03012001": "대처 요령",
        "emergencyActionGuidelines03013": "traffic accident",
        "emergencyActionGuidelines03013001": "사고 예방",
        "emergencyActionGuidelines03013002": "발생 시",
        "emergencyActionGuidelines03013003": "상황 판단",
        "emergencyActionGuidelines03013004": "구출",
        "emergencyActionGuidelines03013005": "차량에서의 구조",
        "emergencyActionGuidelines03014": "elevator",
        "emergencyActionGuidelines03014001": "안전 이용",
        "emergencyActionGuidelines03014002": "안전 문화",
        "emergencyActionGuidelines03014003": "고장 시 안전 구조",
        "emergencyActionGuidelines03014004": "에스컬레이터 안전 수칙",
        "emergencyActionGuidelines03014005": "엘리베이터 사고 예방",
        "emergencyActionGuidelines03014006": "에스컬레이터 및 무빙워크 사고 예방",
        "emergencyActionGuidelines03015": "fine dust",
        "emergencyActionGuidelines03015001": "특성",
        "emergencyActionGuidelines03015002": "미세먼지 예보 등급별",
        "emergencyActionGuidelines03015003": "부문별 생활 수칙",
        "emergencyActionGuidelines03015004": "인체에 미치는 영향",
        "emergencyActionGuidelines03015005": "미세먼지 정보",
        "emergencyActionGuidelines03015006": "미세먼지 발생 시",
        "emergencyActionGuidelines03015007": "미세먼지 많은 날",
        "emergencyActionGuidelines03016": "fire hydrant",
        "emergencyActionGuidelines03016001": "옥내소화전 사용법",
        "emergencyActionGuidelines03016002": "경보 설비",
        "emergencyActionGuidelines03017": "home safety inspection",
        "emergencyActionGuidelines03017001": "안전점검의 날 준비",
        "emergencyActionGuidelines03017002": "계절별 대비",
        "disasterAlertTypeAll": "all",
        "disasterAlertTypeInfo": "safety information",
        "disasterAlertTypeExigency": "emergency disaster",
        "disasterAlertTypeUrgency": "urgent disaster",
        "disasterAlertContents": "content",
        "disasterAlertRegeion": "area of reception",
        "disasterAlertStep": "emergency level",
        "disasterAlertDisaster": "type of disaster",
        "disasterAlertRegisterDate": "date and time",
        "behaviorConduct03005001": "treat food poisoning",
        "behaviorConduct03006004": "climb the mountain safely",
        "behaviorConduct03006005": "In the mountain safe camping",
        "behaviorConduct03006002": "notify information on a rescue request",
        "behaviorConduct03006003": "do first aid in mountain accident",
        "behaviorConduct03008001": "prevate kidnapping∙missing",
        "behaviorConduct03009001": "prevate harassment",
        "behaviorConduct03010001": "prevate school violence",
        "behaviorConduct03011001": "prevate domestic violence",
        "behaviorConduct03012001": "handle detention∙abduction",
        "behaviorConduct03013002": "handle traffic accidents",
        "behaviorConduct03013005": "rescue from a vehicle",
        "behaviorConduct03014001": "use elevator safely",
        "behaviorConduct03014003": "handle elevator malfunction",
        "behaviorConduct03014004": "use escalator safely",
        "behaviorConduct03015007": "live on fine dusty day",
        "behaviorConduct03015003": "live by sector",
        "tts_female": "female",
        "tts_male": "male",
        "tts_kind": "kind",
        "tts_sweet": "sweet",
        "tts_echo": "echo",
        "tts_mischievous": "mischievous",
        "tts_dainty": "dainty",
        "tts_veryslow": "very slow",
        "tts_slow": "slow",
        "tts_normal": "normal",
        "tts_fast": "fast",
        "tts_veryfast": "very fast",
        "tts_verylow": "very low",
        "tts_low": "low",
        "tts_high": "high",
        "tts_veryhigh": "very high",
        "ARDUINO": "Hardware",
        "ARDUINO_download_connector": "• Download Connector",
        "ARDUINO_open_connector": "Open Connector",
        "ARDUINO_download_source": "• Entry Arduino code",
        "ARDUINO_reconnect": "Connect Hardware",
        "ROBOT_reconnect": "Connect Robot",
        "ARDUINO_program": "Run the program",
        "ARDUINO_cloud_pc_connector": "Connect to Cloud PC",
        "ARDUINO_connected": "Hardware connected",
        "ARDUINO_connect": "* Connect hardware",
        "hardware_connect_helper": "Help (Korean Only)",
        "hardware_noti_installed": "When using connection program",
        "hardware_noti_not_installed": "When using web browser",
        "hardware_program_download": "Download program",
        "hardware_device_name_title": "Name:",
        "hardware_device_name_title_robot": "Name:",
        "hardware_device_name_content": "None",
        "hardware_connected_noti": "Please check connection program.",
        "arduino_lite_connect": "Connect through web",
        "arduino_lite_connected_noti": "Please save the project\nwith the device selected.",
        "arduino_lite_disconnect": "Cancel",
        "arduino_lite_download_driver": "Download driver",
        "arduino_lite_download_firmware": "Download firmware",
        "arduino_lite_reconnect": "Retry",
        "arduino_lite_guide": "• connection guide",
        "arduino_noti_text": "",
        "robot_noti_text": "",
        "ARDUINO_arduino_get_number_1": "number result of signal",
        "ARDUINO_arduino_get_number_2": "",
        "ARDUINO_arduino_get_sensor_number_0": "0",
        "ARDUINO_arduino_get_sensor_number_1": "1",
        "ARDUINO_arduino_get_sensor_number_2": "2",
        "ARDUINO_arduino_get_sensor_number_3": "3",
        "ARDUINO_arduino_get_sensor_number_4": "4",
        "ARDUINO_arduino_get_sensor_number_5": "5",
        "blacksmith_toggle_on": "on",
        "blacksmith_toggle_off": "off",
        "blacksmith_lcd_first_line": "first",
        "blacksmith_lcd_seconds_line": "seconds",
        "BITBRICK_light": "light",
        "BITBRICK_IR": "IR",
        "BITBRICK_touch": "touch",
        "BITBRICK_potentiometer": "potentiometer",
        "BITBRICK_MIC": "MIC",
        "BITBRICK_UserSensor": "UserSensor",
        "BITBRICK_UserInput": "UserInput",
        "BITBRICK_dc_direction_ccw": "CCW",
        "BITBRICK_dc_direction_cw": "CW",
        "chocopi_control_event_pressed": "pressed",
        "chocopi_control_event_released": "released",
        "chocopi_joystick_X": "joystick X",
        "chocopi_joystick_Y": "joystick Y",
        "chocopi_motion_photogate_event_blocked": "blocked",
        "chocopi_motion_photogate_event_unblocked": "unblocked",
        "chocopi_motion_photogate_time_blocked": "blocked",
        "chocopi_motion_photogate_time_unblocked": "unblocked",
        "chocopi_port": "P",
        "chocopi_pot": "potentiometer",
        "chocopi_touch_event_touch": "touched",
        "chocopi_touch_event_untouch": "untouched",
        "CODEino_get_sensor_number_0": "0",
        "CODEino_get_sensor_number_1": "1",
        "CODEino_get_sensor_number_2": "2",
        "CODEino_get_sensor_number_3": "3",
        "CODEino_get_sensor_number_4": "4",
        "CODEino_get_sensor_number_5": "5",
        "CODEino_get_sensor_number_6": "6",
        "CODEino_sensor_name_0": "Sound",
        "CODEino_sensor_name_1": "Light",
        "CODEino_sensor_name_2": "Slider",
        "CODEino_sensor_name_3": "resistance-A",
        "CODEino_sensor_name_4": "resistance-B",
        "CODEino_sensor_name_5": "resistance-C",
        "CODEino_sensor_name_6": "resistance-D",
        "CODEino_string_1": " Sensor value ",
        "CODEino_string_2": " Operation ",
        "CODEino_string_3": "Push button",
        "CODEino_string_4": "Connected A",
        "CODEino_string_5": "Connected B",
        "CODEino_string_6": "Connected C",
        "CODEino_string_7": "Connected D",
        "CODEino_string_8": " 3-AXIS Accelerometer ",
        "CODEino_string_9": "-axis value ",
        "CODEino_string_10": "Sound is ",
        "CODEino_string_11": "Great",
        "CODEino_string_12": "Small",
        "CODEino_string_13": "Light is ",
        "CODEino_string_14": "Bright",
        "CODEino_string_15": "Dark",
        "CODEino_string_16": "Left tilt",
        "CODEino_string_17": "Right tilt",
        "CODEino_string_18": "Front tilt",
        "CODEino_string_19": "Rear tilt",
        "CODEino_string_20": "Reverse",
        "CODEino_accelerometer_X": "X",
        "CODEino_accelerometer_Y": "Y",
        "CODEino_accelerometer_Z": "Z",
        "CODEino_led_red": "Red",
        "CODEino_led_green": "Green",
        "CODEino_led_blue": "Blue",
        "iboard_analog_number_0": "A0",
        "iboard_analog_number_1": "A1",
        "iboard_analog_number_2": "A2",
        "iboard_analog_number_3": "A3",
        "iboard_analog_number_4": "A4",
        "iboard_analog_number_5": "A5",
        "iboard_light": "Light sensor is ",
        "iboard_num_pin_1": "LED status",
        "iboard_num_pin_2": "switch",
        "iboard_num_pin_3": "analogue",
        "iboard_num_pin_4": " ",
        "iboard_num_pin_5": "sensor value",
        "iboard_string_1": "on",
        "iboard_string_2": "off",
        "iboard_string_3": "bright",
        "iboard_string_4": "dark",
        "iboard_string_5": "pressed",
        "iboard_string_6": "opened",
        "iboard_switch": "switch ",
        "iboard_tilt": "Slope sensor status is",
        "dplay_switch": "스위치 ",
        "dplay_light": "Light sensor is ",
        "dplay_tilt": "Slope sensor status is",
        "dplay_string_1": "켜짐",
        "dplay_string_2": "꺼짐",
        "dplay_string_3": "bright",
        "dplay_string_4": "dark",
        "dplay_string_5": "pressed",
        "dplay_string_6": "opened",
        "dplay_num_pin_1": "LED status",
        "dplay_num_pin_2": "switch",
        "dplay_num_pin_3": "analogue",
        "dplay_num_pin_4": "번 ",
        "dplay_num_pin_5": "sensor value",
        "dplay_analog_number_0": "A0",
        "dplay_analog_number_1": "A1",
        "dplay_analog_number_2": "A2",
        "dplay_analog_number_3": "A3",
        "dplay_analog_number_4": "A4",
        "dplay_analog_number_5": "A5",
        "ARDUINO_arduino_get_string_1": "string result of signal",
        "ARDUINO_arduino_get_string_2": "",
        "ARDUINO_arduino_send_1": "Send signal",
        "ARDUINO_arduino_send_2": "",
        "ARDUINO_num_sensor_value_1": "Analog",
        "ARDUINO_num_sensor_value_2": "Sensor value",
        "ARDUINO_get_digital_value_1": "Digital",
        "ARDUINO_num_pin_1": "Digital",
        "ARDUINO_num_pin_2": "Pin",
        "ARDUINO_toggle_pwm_1": "Digital",
        "ARDUINO_toggle_pwm_2": "Pin",
        "ARDUINO_toggle_pwm_3": "",
        "ARDUINO_on": "On",
        "ARDUINO_convert_scale_1": "Map Value",
        "ARDUINO_convert_scale_2": "",
        "ARDUINO_convert_scale_3": "~",
        "ARDUINO_convert_scale_4": "to",
        "ARDUINO_convert_scale_5": "~",
        "ARDUINO_convert_scale_6": "",
        "ARDUINO_off": "Off",
        "EXPANSION": "Extension",
        "brightness": "Brightness",
        "BRUSH": "Brush",
        "BRUSH_brush_erase_all": "Erase all brush",
        "BRUSH_change_opacity_1": "Change opacity by",
        "BRUSH_change_opacity_2": "%",
        "BRUSH_change_thickness_1": "Change thickness by",
        "BRUSH_change_thickness_2": "",
        "BRUSH_set_color_1": "Set brush color to",
        "BRUSH_set_color_2": "",
        "BRUSH_set_opacity_1": "Set opacity to",
        "BRUSH_set_opacity_2": "%",
        "BRUSH_set_random_color": "Set brush color to random",
        "BRUSH_set_thickness_1": "Set thickness to",
        "BRUSH_set_thickness_2": "",
        "BRUSH_stamp": "Stamp",
        "BRUSH_start_drawing": "Start drawing",
        "BRUSH_stop_drawing": "Stop drawing",
        "CALC": "Calculate",
        "CALC_calc_mod_1": "Rest of",
        "CALC_calc_mod_2": "",
        "CALC_calc_mod_3": "",
        "CALC_calc_operation_of_1": "",
        "CALC_calc_operation_of_2": "'s",
        "CALC_calc_operation_root": "Root",
        "CALC_calc_operation_square": "Square",
        "CALC_calc_rand_1": "Random number between",
        "CALC_calc_rand_2": "and",
        "CALC_calc_rand_3": "",
        "CALC_calc_share_1": "Quotient of",
        "CALC_calc_share_2": "",
        "CALC_calc_share_3": "",
        "CALC_coordinate_mouse_1": "Mouse",
        "CALC_coordinate_mouse_2": "Coordinate",
        "CALC_coordinate_object_1": "",
        "CALC_coordinate_object_2": "'s",
        "CALC_coordinate_object_3": "Coordinate",
        "CALC_distance_something_1": "Distance to",
        "CALC_distance_something_2": "",
        "CALC_get_angle": "Angle value",
        "CALC_get_date_1": "Current",
        "CALC_get_date_2": "",
        "CALC_get_date_day": "Day",
        "CALC_get_date_hour": "Time(Hour)",
        "CALC_get_date_minute": "Time(Minutes)",
        "CALC_get_date_month": "Month",
        "CALC_get_date_second": "Time(Seconds)",
        "CALC_get_date_day_of_week": "Day of Week",
        "CALC_get_date_year": "Year",
        "CALC_get_sound_duration_1": "Length of",
        "CALC_get_sound_duration_2": "sound",
        "CALC_get_timer_value": "Timer value",
        "CALC_get_x_coordinate": "X Coordinate",
        "CALC_get_y_coordinate": "Y Coordinate",
        "CALC_timer_reset": "Start timer",
        "CALC_timer_visible_1": "",
        "CALC_timer_visible_2": "Timer",
        "CALC_timer_visible_show": "Show",
        "CALC_timer_visible_hide": "Hide",
        "color": "Color",
        "FLOW": "Flow",
        "FLOW__if_1": "If",
        "FLOW__if_2": "then",
        "FLOW_create_clone_1": "Create",
        "FLOW_create_clone_2": "'s clone",
        "FLOW_delete_clone": "Remove this clone",
        "FLOW_delete_clone_all": "Remove all clone",
        "FLOW_if_else_1": "If",
        "FLOW_if_else_2": "then",
        "FLOW_if_else_3": "else",
        "FLOW_repeat_basic_1": "Repeat  ",
        "FLOW_repeat_basic_2": "times",
        "FLOW_repeat_basic_errorMsg": "Repeat count must greater than 0 or equal.",
        "FLOW_repeat_inf": "Repeat infinitely",
        "FLOW_restart": "Restart Project",
        "FLOW_stop_object_1": "Stop",
        "FLOW_stop_object_2": "",
        "FLOW_stop_object_all": "All objects",
        "FLOW_stop_object_this_object": "This",
        "FLOW_stop_object_this_thread": "This code",
        "FLOW_stop_object_other_thread": "Other block of this object",
        "FLOW_stop_object_other_objects": "Other object",
        "FLOW_stop_repeat": "Stop repeat",
        "FLOW_stop_run": "Exit program",
        "FLOW_wait_second_1": "Wait",
        "FLOW_wait_second_2": "seconds",
        "FLOW_wait_until_true_1": "Wait until",
        "FLOW_wait_until_true_2": "",
        "FLOW_when_clone_start": "When clone is created",
        "FUNC": "Function",
        "ANALYSIS": "Data analysis",
        "AI": "A.I",
        "JUDGEMENT": "Decision",
        "JUDGEMENT_boolean_and": "AND",
        "JUDGEMENT_boolean_not_1": "Is Not",
        "JUDGEMENT_boolean_not_2": "",
        "JUDGEMENT_boolean_or": "OR",
        "JUDGEMENT_false": "False",
        "JUDGEMENT_is_clicked": "Mouse down?",
        "JUDGEMENT_is_press_some_key_1": "Key",
        "JUDGEMENT_is_press_some_key_2": " pressed?",
        "JUDGEMENT_is_object_clicked": "Object clicked?",
        "JUDGEMENT_is_type_1": "is",
        "JUDGEMENT_is_type_2": "?",
        "is_type_number": "number",
        "JUDGEMENT_reach_something_1": "touching",
        "JUDGEMENT_reach_something_2": "?",
        "JUDGEMENT_is_boost_mode": "Is boost mode?",
        "JUDGEMENT_true": "True",
        "LOOKS": "Looks",
        "LOOKS_change_scale_percent_1": "Change scale by",
        "LOOKS_change_scale_percent_2": "",
        "LOOKS_change_to_next_shape": "Change to next",
        "LOOKS_change_to_nth_shape_1": "Change shape to",
        "LOOKS_change_to_nth_shape_2": "",
        "LOOKS_change_shape_prev": "previous",
        "LOOKS_change_shape_next": "next",
        "LOOKS_change_to_near_shape_1": "Change to",
        "LOOKS_change_to_near_shape_2": "shape",
        "LOOKS_dialog_1": "Say",
        "LOOKS_dialog_2": "",
        "LOOKS_dialog_3": "",
        "LOOKS_dialog_time_1": "Say",
        "LOOKS_dialog_time_2": "for",
        "LOOKS_dialog_time_3": "secs",
        "LOOKS_dialog_time_4": "",
        "LOOKS_erase_all_effects": "Erase all effects",
        "LOOKS_flip_x": "Flip vertically",
        "LOOKS_flip_y": "Flip horizontally",
        "LOOKS_hide": "hide",
        "LOOKS_remove_dialog": "Remove speech",
        "LOOKS_set_effect_1": "Set",
        "LOOKS_set_effect_2": "effect to",
        "LOOKS_set_effect_3": "",
        "LOOKS_set_effect_volume_1": "Change",
        "LOOKS_set_effect_volume_2": "effect by",
        "LOOKS_set_effect_volume_3": "",
        "LOOKS_set_object_order_1": "go to",
        "LOOKS_set_object_order_2": "th layer",
        "LOOKS_set_scale_percent_1": "Set scale to",
        "LOOKS_set_scale_percent_2": "",
        "LOOKS_show": "show",
        "mouse_pointer": "Mouse Pointer",
        "MOVING": "Moving",
        "MOVING_bounce_wall": "if on edge, bounce",
        "MOVING_bounce_when_1": "Bounce if reach to the",
        "MOVING_bounce_when_2": "",
        "MOVING_flip_arrow_horizontal": "Flip horizontally by arrow direction",
        "MOVING_flip_arrow_vertical": "Flip vertically by arrow direction",
        "MOVING_locate_1": "Move to",
        "MOVING_locate_2": "",
        "MOVING_locate_time_1": "Moving while",
        "MOVING_locate_time_2": "seconds to the",
        "MOVING_locate_time_3": "",
        "MOVING_locate_x_1": "Move to the X:",
        "MOVING_locate_x_2": "",
        "MOVING_locate_xy_1": "Move to the X:",
        "MOVING_locate_xy_2": "Y:",
        "MOVING_locate_xy_3": "",
        "MOVING_locate_xy_time_1": "Moving while",
        "MOVING_locate_xy_time_2": "seconds to x:",
        "MOVING_locate_xy_time_3": "y:",
        "MOVING_locate_xy_time_4": "",
        "MOVING_locate_y_1": "Move to the Y:",
        "MOVING_locate_y_2": "",
        "MOVING_move_direction_1": "Move",
        "MOVING_move_direction_2": "forward",
        "MOVING_move_direction_angle_1": "Rotate",
        "MOVING_move_direction_angle_2": "and move",
        "MOVING_move_direction_angle_3": "",
        "MOVING_move_x_1": "Change X by",
        "MOVING_move_x_2": "",
        "MOVING_move_xy_time_1": "For",
        "MOVING_move_xy_time_2": "secs move to X:",
        "MOVING_move_xy_time_3": "Y:",
        "MOVING_move_xy_time_4": "",
        "MOVING_move_y_1": "Change Y by",
        "MOVING_move_y_2": "",
        "MOVING_rotate_by_angle_1": "Rotate by",
        "MOVING_rotate_by_angle_2": "degree",
        "MOVING_rotate_by_angle_dropdown_1": "Rotate by",
        "MOVING_rotate_by_angle_dropdown_2": "degree",
        "MOVING_rotate_by_angle_time_1": "Rotate while",
        "MOVING_rotate_by_angle_time_2": "seconds by",
        "MOVING_rotate_by_angle_time_3": "degree",
        "MOVING_rotate_direction_1": "Change direction by ",
        "MOVING_rotate_direction_2": "",
        "MOVING_see_angle_1": "Set direction to",
        "MOVING_see_angle_2": "",
        "MOVING_see_angle_direction_1": "See angle to",
        "MOVING_see_angle_direction_2": "degree",
        "MOVING_see_angle_object_1": "Turn towards",
        "MOVING_see_angle_object_2": "",
        "MOVING_see_direction_1": "Rotate to the",
        "MOVING_see_direction_2": "",
        "MOVING_set_direction_by_angle_1": "Set rotation to",
        "MOVING_set_direction_by_angle_2": "",
        "MOVING_add_direction_by_angle_1": "Rotate",
        "MOVING_add_direction_by_angle_2": "",
        "MOVING_add_direction_by_angle_time_1": "",
        "MOVING_add_direction_by_angle_time_2": "secs rotate",
        "MOVING_add_direction_by_angle_time_3": "",
        "no_target": "No Target",
        "oneself": "Self",
        "opacity": "Opacity",
        "SCENE": "Scene",
        "SOUND": "Sound",
        "SOUND_sound_silent_all": "Stop all sounds",
        "SOUND_sound_something_1": "Play",
        "SOUND_sound_something_2": "Sound",
        "SOUND_sound_something_second_1": "Play",
        "SOUND_sound_something_second_2": "sound for",
        "SOUND_sound_something_second_3": "secs",
        "SOUND_sound_something_second_wait_1": "Play",
        "SOUND_sound_something_second_wait_2": "Sound for",
        "SOUND_sound_something_second_wait_3": "secs and wait",
        "SOUND_sound_something_wait_1": "Play",
        "SOUND_sound_something_wait_2": "Sound and wait",
        "SOUND_sound_volume_change_1": "Change volume by",
        "SOUND_sound_volume_change_2": "%",
        "SOUND_sound_volume_set_1": "Set volume to",
        "SOUND_sound_volume_set_2": "%",
        "speak": "Speak",
        "think": "Think",
        "START": "Start",
        "START_add_message": "Add a message",
        "START_delete_message": "Remove a message",
        "START_message_cast": "Send message",
        "START_message_cast_1": "Send",
        "START_message_cast_2": "message",
        "START_message_cast_wait": "message and wait",
        "START_message_send_wait_1": "Send",
        "START_message_send_wait_2": " message and wait",
        "START_mouse_click_cancled": "When mouse click released",
        "START_mouse_clicked": "When mouse clicked",
        "START_press_some_key_1": "When key",
        "START_press_some_key_2": "pressed",
        "START_press_some_key_down": "Down",
        "START_press_some_key_enter": "Enter",
        "START_press_some_key_left": "Left",
        "START_press_some_key_right": "Right",
        "START_press_some_key_space": "Space",
        "START_press_some_key_up": "Up",
        "START_when_message_cast": "When message received",
        "START_when_message_cast_1": "When",
        "START_when_message_cast_2": "message received",
        "START_when_object_click": "When object clicked",
        "START_when_object_click_canceled": "When object click released",
        "START_when_run_button_click": "When run",
        "START_when_scene_start": "When scene was started",
        "START_when_some_key_click": "When press some key",
        "TEXT": "Text",
        "TEXT_text": "Entry",
        "TEXT_text_append_1": "After writing that",
        "TEXT_text_append_2": "",
        "TEXT_text_flush": "Remove all text",
        "TEXT_text_prepend_1": "Add",
        "TEXT_text_prepend_2": "in front of that",
        "TEXT_text_write_1": "Writing that",
        "TEXT_text_write_2": "",
        "VARIABLE": "Variable",
        "VARIABLE_add_value_to_list": "",
        "VARIABLE_add_value_to_list_1": "add",
        "VARIABLE_add_value_to_list_2": "to the list",
        "VARIABLE_add_value_to_list_3": "",
        "VARIABLE_ask_and_wait_1": "Ask",
        "VARIABLE_ask_and_wait_2": "and wait",
        "VARIABLE_change_value_list_index": "",
        "VARIABLE_change_value_list_index_1": "change",
        "VARIABLE_change_value_list_index_3": "th element to",
        "VARIABLE_change_value_list_index_2": "",
        "VARIABLE_change_value_list_index_4": "",
        "VARIABLE_change_variable": "Adding variable",
        "VARIABLE_change_variable_1": "Plus to",
        "VARIABLE_change_variable_2": "by",
        "VARIABLE_change_variable_3": "",
        "VARIABLE_change_variable_name": "Rename variable",
        "VARIABLE_combine_something_1": "join",
        "VARIABLE_combine_something_2": "",
        "VARIABLE_combine_something_3": "",
        "VARIABLE_get_canvas_input_value": "response",
        "VARIABLE_get_variable": "Value of variable",
        "VARIABLE_get_variable_1": "Value of",
        "VARIABLE_get_variable_2": "",
        "VARIABLE_get_y": "Y Coordinate",
        "VARIABLE_hide_list": "",
        "VARIABLE_hide_list_1": "Hide list",
        "VARIABLE_hide_list_2": "",
        "VARIABLE_hide_variable": "Hide variable",
        "VARIABLE_hide_variable_1": "Hide variable",
        "VARIABLE_hide_variable_2": "value",
        "VARIABLE_insert_value_to_list": "",
        "VARIABLE_insert_value_to_list_1": "insert",
        "VARIABLE_insert_value_to_list_2": "to",
        "VARIABLE_insert_value_to_list_3": "",
        "VARIABLE_insert_value_to_list_4": "th position",
        "VARIABLE_length_of_list": "",
        "VARIABLE_length_of_list_1": "length of",
        "VARIABLE_length_of_list_2": "",
        "VARIABLE_list": "",
        "VARIABLE_make_variable": "Make variable",
        "VARIABLE_list_option_first": "First",
        "VARIABLE_list_option_last": "Last",
        "VARIABLE_list_option_random": "Randomly",
        "VARIABLE_remove_value_from_list": "",
        "VARIABLE_remove_value_from_list_1": "remove",
        "VARIABLE_remove_value_from_list_2": "th element from",
        "VARIABLE_remove_value_from_list_3": "",
        "VARIABLE_remove_variable": "Remove variable",
        "VARIABLE_set_variable": "Set variable",
        "VARIABLE_set_variable_1": "Set",
        "VARIABLE_set_variable_2": "to",
        "VARIABLE_set_variable_3": "",
        "VARIABLE_show_list": "",
        "VARIABLE_show_list_1": "Show list",
        "VARIABLE_show_list_2": "",
        "VARIABLE_show_variable": "Show variable",
        "VARIABLE_show_variable_1": "Show variable",
        "VARIABLE_show_variable_2": "value",
        "VARIABLE_value_of_index_from_list": "",
        "VARIABLE_value_of_index_from_list_1": "value of",
        "VARIABLE_value_of_index_from_list_2": "",
        "VARIABLE_value_of_index_from_list_3": "th element",
        "HAMSTER_hand_found": "hand found?",
        "HAMSTER_sensor_left_proximity": "left proximity",
        "HAMSTER_sensor_right_proximity": "right proximity",
        "HAMSTER_sensor_left_floor": "left floor",
        "HAMSTER_sensor_right_floor": "right floor",
        "HAMSTER_sensor_acceleration_x": "x acceleration",
        "HAMSTER_sensor_acceleration_y": "y acceleration",
        "HAMSTER_sensor_acceleration_z": "z acceleration",
        "HAMSTER_sensor_light": "light",
        "HAMSTER_sensor_temperature": "temperature",
        "HAMSTER_sensor_signal_strength": "signal strength",
        "HAMSTER_sensor_input_a": "input A",
        "HAMSTER_sensor_input_b": "input B",
        "HAMSTER_move_forward_once": "move forward once on board",
        "HAMSTER_turn_once_1": "turn",
        "HAMSTER_turn_once_2": "once on board",
        "HAMSTER_turn_once_left": "left",
        "HAMSTER_turn_right": "right",
        "HAMSTER_move_forward": "move forward",
        "HAMSTER_move_backward": "move backward",
        "HAMSTER_turn_around_1": "turn",
        "HAMSTER_turn_around_2": "",
        "HAMSTER_move_forward_for_secs_1": "move forward for",
        "HAMSTER_move_forward_for_secs_2": "secs",
        "HAMSTER_move_backward_for_secs_1": "move backward",
        "HAMSTER_move_backward_for_secs_2": "secs",
        "HAMSTER_turn_for_secs_1": "turn",
        "HAMSTER_turn_for_secs_2": "for",
        "HAMSTER_turn_for_secs_3": "secs",
        "HAMSTER_change_both_wheels_by_1": "change wheel by left:",
        "HAMSTER_change_both_wheels_by_2": "right:",
        "HAMSTER_change_both_wheels_by_3": "",
        "HAMSTER_set_both_wheels_to_1": "set wheel to left:",
        "HAMSTER_set_both_wheels_to_2": "right:",
        "HAMSTER_set_both_wheels_to_3": "",
        "HAMSTER_change_wheel_by_1": "change",
        "HAMSTER_change_wheel_by_2": "wheel by",
        "HAMSTER_change_wheel_by_3": "",
        "HAMSTER_left_wheel": "left",
        "HAMSTER_right_wheel": "right",
        "HAMSTER_both_wheels": "both",
        "HAMSTER_set_wheel_to_1": "set",
        "HAMSTER_set_wheel_to_2": "wheel to",
        "HAMSTER_set_wheel_to_3": "",
        "HAMSTER_follow_line_using_1": "follow",
        "HAMSTER_follow_line_using_2": "line using",
        "HAMSTER_follow_line_using_3": "floor sensor",
        "HAMSTER_left_floor_sensor": "left",
        "HAMSTER_right_floor_sensor": "right",
        "HAMSTER_both_floor_sensors": "both",
        "HAMSTER_follow_line_until_1": "follow",
        "HAMSTER_follow_line_until_2": "line until",
        "HAMSTER_follow_line_until_3": "intersection",
        "HAMSTER_left_intersection": "left",
        "HAMSTER_right_intersection": "right",
        "HAMSTER_front_intersection": "front",
        "HAMSTER_rear_intersection": "rear",
        "HAMSTER_set_following_speed_to_1": "set following speed to",
        "HAMSTER_set_following_speed_to_2": "",
        "HAMSTER_front": "front",
        "HAMSTER_rear": "rear",
        "HAMSTER_stop": "stop",
        "HAMSTER_set_led_to_1": "set",
        "HAMSTER_set_led_to_2": "led to",
        "HAMSTER_set_led_to_3": "",
        "HAMSTER_left_led": "left",
        "HAMSTER_right_led": "right",
        "HAMSTER_both_leds": "both",
        "HAMSTER_clear_led_1": "clear",
        "HAMSTER_clear_led_2": "led",
        "HAMSTER_color_cyan": "sky blue",
        "HAMSTER_color_magenta": "purple",
        "HAMSTER_color_black": "black",
        "HAMSTER_color_white": "white",
        "HAMSTER_color_red": "red",
        "HAMSTER_color_yellow": "yellow",
        "HAMSTER_color_green": "green",
        "HAMSTER_color_blue": "blue",
        "HAMSTER_beep": "beep",
        "HAMSTER_change_buzzer_by_1": "change buzzer by",
        "HAMSTER_change_buzzer_by_2": "",
        "HAMSTER_set_buzzer_to_1": "set buzzer to",
        "HAMSTER_set_buzzer_to_2": "",
        "HAMSTER_clear_buzzer": "clear buzzer",
        "HAMSTER_play_note_for_1": "play note",
        "HAMSTER_play_note_for_2": "",
        "HAMSTER_play_note_for_3": "for",
        "HAMSTER_play_note_for_4": "beats",
        "HAMSTER_rest_for_1": "rest for",
        "HAMSTER_rest_for_2": "beats",
        "HAMSTER_change_tempo_by_1": "change tempo by",
        "HAMSTER_change_tempo_by_2": "",
        "HAMSTER_set_tempo_to_1": "set tempo to",
        "HAMSTER_set_tempo_to_2": "bpm",
        "HAMSTER_set_port_to_1": "set port",
        "HAMSTER_set_port_to_2": "to",
        "HAMSTER_set_port_to_3": "",
        "HAMSTER_change_output_by_1": "change output",
        "HAMSTER_change_output_by_2": "by",
        "HAMSTER_change_output_by_3": "",
        "HAMSTER_set_output_to_1": "set output",
        "HAMSTER_set_output_to_2": "to",
        "HAMSTER_set_output_to_3": "",
        "HAMSTER_port_a": "A",
        "HAMSTER_port_b": "B",
        "HAMSTER_port_ab": "A and B",
        "HAMSTER_analog_input": "analog input",
        "HAMSTER_digital_input": "digital input",
        "HAMSTER_servo_output": "servo output",
        "HAMSTER_pwm_output": "pwm output",
        "HAMSTER_digital_output": "digital output",
        "ROBOID_acceleration_x": "x acceleration",
        "ROBOID_acceleration_y": "y acceleration",
        "ROBOID_acceleration_z": "z acceleration",
        "ROBOID_back": "back",
        "ROBOID_both": "both",
        "ROBOID_button": "button",
        "ROBOID_buzzer": "buzzer",
        "ROBOID_clicked": "clicked",
        "ROBOID_color_any": "any color",
        "ROBOID_color_black": "black",
        "ROBOID_color_blue": "blue",
        "ROBOID_color_green": "green",
        "ROBOID_color_number": "color number",
        "ROBOID_color_orange": "orange",
        "ROBOID_color_pattern": "color pattern",
        "ROBOID_color_purple": "purple",
        "ROBOID_color_red": "red",
        "ROBOID_color_sky_blue": "sky blue",
        "ROBOID_color_violet": "violet",
        "ROBOID_color_white": "white",
        "ROBOID_color_yellow": "yellow",
        "ROBOID_double_clicked": "double-clicked",
        "ROBOID_floor": "floor",
        "ROBOID_head": "head",
        "ROBOID_head_color": "head color",
        "ROBOID_left": "left",
        "ROBOID_left_wheel": "left wheel",
        "ROBOID_long_pressed": "long-pressed",
        "ROBOID_note": "note",
        "ROBOID_right": "right",
        "ROBOID_right_wheel": "right wheel",
        "ROBOID_sound_beep": "beep",
        "ROBOID_sound_birthday": "birthday",
        "ROBOID_sound_dibidibidip": "dibidibidip",
        "ROBOID_sound_engine": "engine",
        "ROBOID_sound_good_job": "good job",
        "ROBOID_sound_march": "march",
        "ROBOID_sound_random_beep": "random beep",
        "ROBOID_sound_robot": "robot",
        "ROBOID_sound_siren": "siren",
        "ROBOID_tail": "tail",
        "ROBOID_unit_cm": "cm",
        "ROBOID_unit_deg": "degrees",
        "ROBOID_unit_pulse": "pulses",
        "ROBOID_unit_sec": "seconds",
        "ALBERT_hand_found": "hand found?",
        "ALBERT_is_oid_1": "oid is",
        "ALBERT_is_oid_2": "",
        "ALBERT_is_oid_3": "?",
        "ALBERT_front_oid": "front",
        "ALBERT_back_oid": "back",
        "ALBERT_sensor_left_proximity": "left proximity",
        "ALBERT_sensor_right_proximity": "right proximity",
        "ALBERT_sensor_acceleration_x": "x acceleration",
        "ALBERT_sensor_acceleration_y": "y acceleration",
        "ALBERT_sensor_acceleration_z": "z acceleration",
        "ALBERT_sensor_light": "light",
        "ALBERT_sensor_temperature": "temperature",
        "ALBERT_sensor_battery": "battery",
        "ALBERT_sensor_signal_strength": "signal strength",
        "ALBERT_sensor_front_oid": "front oid",
        "ALBERT_sensor_back_oid": "back oid",
        "ALBERT_sensor_position_x": "x position",
        "ALBERT_sensor_position_y": "y position",
        "ALBERT_sensor_orientation": "orientation",
        "ALBERT_move_forward": "move forward",
        "ALBERT_move_backward": "move backward",
        "ALBERT_turn_around_1": "turn",
        "ALBERT_turn_around_2": "",
        "ALBERT_move_forward_for_secs_1": "move forward for",
        "ALBERT_move_forward_for_secs_2": "secs",
        "ALBERT_move_backward_for_secs_1": "move backward for",
        "ALBERT_move_backward_for_secs_2": "secs",
        "ALBERT_turn_for_secs_1": "turn",
        "ALBERT_turn_for_secs_2": "for",
        "ALBERT_turn_for_secs_3": "secs",
        "ALBERT_turn_left": "left",
        "ALBERT_turn_right": "right",
        "ALBERT_change_both_wheels_by_1": "change wheels by left:",
        "ALBERT_change_both_wheels_by_2": "right:",
        "ALBERT_change_both_wheels_by_3": "",
        "ALBERT_left_wheel": "left",
        "ALBERT_right_wheel": "right",
        "ALBERT_both_wheels": "both",
        "ALBERT_set_both_wheels_to_1": "set wheels to left:",
        "ALBERT_set_both_wheels_to_2": "right:",
        "ALBERT_set_both_wheels_to_3": "",
        "ALBERT_change_wheel_by_1": "change",
        "ALBERT_change_wheel_by_2": "wheel by",
        "ALBERT_change_wheel_by_3": "",
        "ALBERT_set_wheel_to_1": "set",
        "ALBERT_set_wheel_to_2": "wheel to",
        "ALBERT_set_wheel_to_3": "",
        "ALBERT_stop": "stop",
        "ALBERT_set_board_size_to_1": "set board size to width:",
        "ALBERT_set_board_size_to_2": "height:",
        "ALBERT_set_board_size_to_3": "",
        "ALBERT_move_to_x_y_1": "move to x:",
        "ALBERT_move_to_x_y_2": "y:",
        "ALBERT_move_to_x_y_3": "on board",
        "ALBERT_set_orientation_to_1": "set orientation to",
        "ALBERT_set_orientation_to_2": "degrees on board",
        "ALBERT_set_eye_to_1": "set",
        "ALBERT_set_eye_to_2": "eye to",
        "ALBERT_set_eye_to_3": "",
        "ALBERT_left_eye": "left",
        "ALBERT_right_eye": "right",
        "ALBERT_both_eyes": "both",
        "ALBERT_clear_eye_1": "clear",
        "ALBERT_clear_eye_2": "eye",
        "ALBERT_body_led_1": "turn",
        "ALBERT_body_led_2": "body led",
        "ALBERT_front_led_1": "turn",
        "ALBERT_front_led_2": "front led",
        "ALBERT_color_cyan": "cyan",
        "ALBERT_color_magenta": "magenta",
        "ALBERT_color_white": "white",
        "ALBERT_color_red": "red",
        "ALBERT_color_yellow": "yellow",
        "ALBERT_color_green": "green",
        "ALBERT_color_blue": "blue",
        "ALBERT_note_c": "C",
        "ALBERT_note_d": "D",
        "ALBERT_note_e": "E",
        "ALBERT_note_f": "F",
        "ALBERT_note_g": "G",
        "ALBERT_note_a": "A",
        "ALBERT_note_b": "B",
        "ALBERT_turn_body_led_1": "turn",
        "ALBERT_turn_body_led_2": "body led",
        "ALBERT_turn_front_led_1": "turn",
        "ALBERT_turn_front_led_2": "front led",
        "ALBERT_turn_on": "on",
        "ALBERT_turn_off": "off",
        "ALBERT_beep": "beep",
        "ALBERT_change_buzzer_by_1": "change buzzer by",
        "ALBERT_change_buzzer_by_2": "",
        "ALBERT_set_buzzer_to_1": "set buzzer to",
        "ALBERT_set_buzzer_to_2": "",
        "ALBERT_clear_buzzer": "clear buzzer",
        "ALBERT_play_note_for_1": "play note",
        "ALBERT_play_note_for_2": "',",
        "ALBERT_play_note_for_3": "for",
        "ALBERT_play_note_for_4": "beats",
        "ALBERT_rest_for_1": "rest for",
        "ALBERT_rest_for_2": "beats",
        "ALBERT_change_tempo_by_1": "change tempo by",
        "ALBERT_change_tempo_by_2": "",
        "ALBERT_set_tempo_to_1": "set tempo to",
        "ALBERT_set_tempo_to_2": "bpm",
        "VARIABLE_variable": "variable",
        "wall": "Wall",
        "robotis_common_case_01": "(을)를",
        "robotis_common_set": "the output value",
        "robotis_common_value": "Value",
        "robotis_common_clockwhise": "Clockwise",
        "robotis_common_counter_clockwhise": "Counterclockwise",
        "robotis_common_wheel_mode": "Wheel mode",
        "robotis_common_joint_mode": "Joint mode",
        "robotis_common_red_color": "Red",
        "robotis_common_green_color": "Green",
        "robotis_common_blue_color": "Blue",
        "robotis_common_on": "Turn on",
        "robotis_common_off": "Turn off",
        "robotis_common_cm": "Controller",
        "robotis_common_port_1": "Port 1",
        "robotis_common_port_2": "Port 2",
        "robotis_common_port_3": "Port 3",
        "robotis_common_port_4": "Port 4",
        "robotis_common_port_5": "Port 5",
        "robotis_common_port_6": "Port 6",
        "robotis_common_play_buzzer": "Play",
        "robotis_common_play_motion": "Play",
        "robotis_common_motion": "Motion",
        "robotis_common_index_number": "Number",
        "robotis_cm_custom": "Custom address",
        "robotis_cm_spring_left": "Left contact sensor",
        "robotis_cm_spring_right": "Right contact sensor",
        "robotis_cm_led_left": "Left LED",
        "robotis_cm_led_right": "Right LED",
        "robotis_cm_led_both": "Both LED",
        "robotis_cm_switch": "Status of the switch",
        "robotis_cm_user_button": "Status of user button",
        "robotis_cm_sound_detected": "Final number of sound detection ",
        "robotis_cm_sound_detecting": "Number of live sound detection ",
        "robotis_cm_ir_left": "Left infrared sensor",
        "robotis_cm_ir_right": "Right infrared sensor",
        "robotis_cm_calibration_left": "Value of the left infrared sensor calibration ",
        "robotis_cm_calibration_right": "Value of the right infrared sensor calibration ",
        "robotis_cm_clear_sound_detected": "Initialize the final number of sound detection",
        "robotis_cm_buzzer_index": "Scale index",
        "robotis_cm_buzzer_melody": "Melody",
        "robotis_cm_led_1": "LED 1",
        "robotis_cm_led_4": "LED 4",
        "robotis_aux_servo_position": "Position of servo motor",
        "robotis_aux_ir": "Infrared sensor",
        "robotis_aux_touch": "Contact sensor",
        "robotis_aux_brightness": "CDS",
        "robotis_aux_hydro_themo_humidity": "Temperature-humidity sensor (humidity)",
        "robotis_aux_hydro_themo_temper": "Temperature-humidity sensor (temperature)",
        "robotis_aux_temperature": "Temperature sensor",
        "robotis_aux_ultrasonic": "Ultrasonic sensor",
        "robotis_aux_magnetic": "Magnetic sensor",
        "robotis_aux_motion_detection": "Motion detector",
        "robotis_aux_color": "Color sensor",
        "robotis_aux_custom": "User device",
        "robotis_carCont_aux_motor_speed_1": "Speed of decelerating motor",
        "robotis_carCont_aux_motor_speed_2": ", the output value",
        "robotis_carCont_calibration_1": "Value of the infrared sensor calibration ",
        "robotis_openCM70_aux_motor_speed_1": "Speed of decelerating motor",
        "robotis_openCM70_aux_motor_speed_2": ", Set as",
        "robotis_openCM70_aux_servo_mode_1": "Servo motor mode",
        "robotis_openCM70_aux_servo_speed_1": "Servo motor speed",
        "robotis_openCM70_aux_servo_speed_2": ", the output value",
        "robotis_openCM70_aux_servo_position_1": "Position of servo motor",
        "robotis_openCM70_aux_led_module_1": "LED module",
        "robotis_openCM70_aux_custom_1": "User device",
        "XBOT_digital": "Digital",
        "XBOT_D2_digitalInput": "D2 Digital Input",
        "XBOT_D3_digitalInput": "D3 Digital Input",
        "XBOT_D11_digitalInput": "D11 Digital Input",
        "XBOT_analog": "Analog",
        "XBOT_CDS": "Light Sensor Value",
        "XBOT_MIC": "Mic Sensor Value",
        "yell": "yell",
        "desktop": "desktop",
        "tablet": "tablet",
        "smartphone": "smartphone",
        "XBOT_analog0": "Analog PIN0 Value",
        "XBOT_analog1": "Analog PIN1 Value",
        "XBOT_analog2": "Analog PIN2 Value",
        "XBOT_analog3": "Analog PIN3 Value",
        "XBOT_Value": "Ouput Value",
        "XBOT_pin_OutputValue": "PIN, Ouput Value",
        "XBOT_High": "HI",
        "XBOT_Low": "LO",
        "XBOT_Servo": "Servo Motor",
        "XBOT_Head": "Head(D8)",
        "XBOT_ArmR": "Right Arm(D9)",
        "XBOT_ArmL": "Left Arm(D10)",
        "XBOT_angle": ", Angle",
        "XBOT_DC": "Wheel(DC) Motor",
        "XBOT_rightWheel": "Right",
        "XBOT_leftWheel": "Left",
        "XBOT_bothWheel": "Both",
        "XBOT_speed": ", Speed",
        "XBOT_rightSpeed": "Wheel(DC) Motor Right(2) Speed:",
        "XBOT_leftSpeed": "Left(1) Speed:",
        "XBOT_RGBLED_R": "RGB LED Color from Red",
        "XBOT_RGBLED_G": "Green",
        "XBOT_RGBLED_B": "Blue",
        "XBOT_RGBLED_color": "RGB LED Color from",
        "XBOT_set": " ",
        "XBOT_c": "C",
        "XBOT_d": "D",
        "XBOT_e": "E",
        "XBOT_f": "F",
        "XBOT_g": "G",
        "XBOT_a": "A",
        "XBOT_b": "B",
        "XBOT_melody_ms": "sec of Melody Playing",
        "XBOT_Line": "th Line",
        "XBOT_outputValue": "Text",
        "roborobo_num_analog_value_1": "Analog",
        "roborobo_num_analog_value_2": "Sensor Value",
        "roborobo_get_digital_value_1": "Digital",
        "roborobo_num_pin_1": "Digital",
        "roborobo_num_pin_2": "Pin",
        "roborobo_on": "On",
        "roborobo_off": "Off",
        "roborobo_motor1": "motor1",
        "roborobo_motor2": "motor2",
        "roborobo_motor_CW": "ClockWise",
        "roborobo_motor_CCW": "CounterClockWise",
        "roborobo_motor_stop": "Stop",
        "roborobo_input_mode": "Input",
        "roborobo_output_mode": "Output",
        "roborobo_pwm_mode": "PWM",
        "roborobo_servo_mode": "Servo",
        "roborobo_color": "Color Sensor ",
        "roborobo_color_red": " Red ",
        "roborobo_color_green": " Green ",
        "roborobo_color_blue": " Blue ",
        "roborobo_color_yellow": " Yellow ",
        "roborobo_color_detected": " Detected ",
        "roborobo_degree": " ˚",
        "robotori_D2_Input": "Digital Pin 2 Input Value",
        "robotori_D3_Input": "Digital Pin 3 Input Value",
        "robotori_A0_Input": "Analog Pin 0 Input Value",
        "robotori_A1_Input": "Analog Pin 1 Input Value",
        "robotori_A2_Input": "Analog Pin 2 Input Value",
        "robotori_A3_Input": "Analog Pin 3 Input Value",
        "robotori_A4_Input": "Analog Pin 4 Input Value",
        "robotori_A5_Input": "Analog Pin 5 Input Value",
        "robotori_digital": "Digital",
        "robotori_D10_Output": "Pin 10",
        "robotori_D11_Output": "Pin 11",
        "robotori_D12_Output": "Pin 12",
        "robotori_D13_Output": "Pin 13",
        "robotori_pin_OutputValue": "Output Value",
        "robotori_On": "On",
        "robotori_Off": "Off",
        "robotori_analog": "Analog",
        "robotori_analog5": "Pin 5 Output Value",
        "robotori_analog6": "Pin 6 Output Value",
        "robotori_analog9": "Pin 9 Output Value",
        "robotori_Servo": "Servo Motor",
        "robotori_DC": "DC Motor",
        "robotori_DC_rightmotor": "Right",
        "robotori_DC_leftmotor": "Left",
        "robotori_DC_STOP": "Stop",
        "robotori_DC_CW": "clockwise",
        "robotori_DC_CCW": "anticlockwise",
        "robotori_DC_select": "direction",
        "CALC_rotation_value": "rotation value",
        "CALC_direction_value": "direction value",
        "VARIABLE_is_included_in_list": "",
        "VARIABLE_is_included_in_list_1": "is included in",
        "VARIABLE_is_included_in_list_2": "value",
        "VARIABLE_is_included_in_list_3": "",
        "SCENE_when_scene_start": "When scene started",
        "SCENE_start_scene_1": "Start",
        "SCENE_start_scene_2": "scene",
        "SCENE_start_neighbor_scene_1": "Start",
        "SCENE_start_neighbor_scene_2": "scene",
        "SCENE_start_scene_pre": "prev",
        "SCENE_start_scene_next": "next",
        "FUNCTION_explanation_1": "name",
        "FUNCTION_character_variable": "string/number",
        "FUNCTION_logical_variable": "logical variable",
        "FUNCTION_function": "function",
        "FUNCTION_define": "Define function",
        "CALC_calc_operation_sin": "sin value",
        "CALC_calc_operation_cos": "cos value",
        "CALC_calc_operation_tan": "tan value",
        "CALC_calc_operation_floor": "floor value",
        "CALC_calc_operation_ceil": "ceil value",
        "CALC_calc_operation_round": "round value",
        "CALC_calc_operation_factorial": "factorial value",
        "CALC_calc_operation_asin": "asin value",
        "CALC_calc_operation_acos": "acos value",
        "CALC_calc_operation_atan": "atan value",
        "CALC_calc_operation_log": "log value",
        "CALC_calc_operation_ln": "natural log value",
        "CALC_calc_operation_natural": "integer value",
        "CALC_calc_operation_unnatural": "decimal value",
        "MOVING_locate_object_time_1": "factorial value",
        "MOVING_locate_object_time_2": "seconds to the",
        "MOVING_locate_object_time_3": "",
        "wall_up": "upper wall",
        "wall_down": "down wall",
        "wall_right": "right wall",
        "wall_left": "left wall",
        "CALC_coordinate_x_value": "coordinate x",
        "CALC_coordinate_y_value": "coordinate y",
        "CALC_coordinate_rotation_value": "rotation",
        "CALC_coordinate_direction_value": "direction",
        "CALC_picture_index": "index of picture",
        "CALC_picture_name": "name of picture",
        "FLOW_repeat_while_true_1": "Repeat",
        "FLOW_repeat_while_true_2": " ",
        "TUT_when_start": "",
        "TUT_move_once": "",
        "TUT_rotate_left": "",
        "TUT_rotate_right": "",
        "TUT_jump_barrier": "",
        "TUT_repeat_tutorial_1": "",
        "TUT_repeat_tutorial_2": "",
        "TUT_if_barrier_1": "",
        "TUT_if_barrier_2": "",
        "TUT_if_conical_1": "",
        "TUT_if_conical_2": "",
        "TUT_repeat_until": "",
        "TUT_repeat_until_gold": "",
        "TUT_declare_function": "",
        "TUT_call_function": "",
        "CALC_calc_operation_abs": "absolute value",
        "CONTEXT_COPY_option": "copy code(s)",
        "Delete_Blocks": "delete code(s)",
        "Duplication_option": "copy & paste",
        "Paste_blocks": "paste code(s)",
        "add_my_storage": "add to my storage",
        "export_object": "Export Object",
        "this_project": "this project",
        "this_object": "this object",
        "right_hand": "Right hand",
        "left_hand": "Left hand",
        "thumb": "thumb",
        "index_finger": "index finger",
        "middle_finger": "middle finger",
        "ring_finger": "ring finger",
        "little_finger": "little finger",
        "wrist": "wrist",
        "tip": "TIP",
        "dip": "DIP",
        "pip": "PIP",
        "none": "NONE",
        "media_pipe_title_text": "Video Detection",
        "pose_landmarker_title_text": "Human Detection",
        "face_landmarker_title_text": "Face Detection",
        "object_detector_title_text": "Object Detection",
        "hand_detection_title_text": "Hand Detection",
        "unknown": "Unknown",
        "Clear_all_blocks": "remove all codes",
        "add_comment": "add a memo",
        "copy_paste_comment": "copy & paste the memo",
        "copy_comment": "copy the memo",
        "delete_comment": "delete the memo",
        "fold_comment": "fold the memo",
        "open_comment": "open the memo",
        "separate_comment": "take the memo off",
        "hide_all_comment": "hide all memos",
        "show_all_comment": "show all memos",
        "transparency": "Transparency",
        "BRUSH_change_brush_transparency_1": "Change transparency by",
        "BRUSH_change_brush_transparency_2": "%",
        "BRUSH_set_brush_transparency_1": "Set transparency to",
        "BRUSH_set_brush_transparency_2": "%",
        "CALC_char_at_1": "letter",
        "CALC_char_at_2": "of",
        "CALC_char_at_3": "",
        "CALC_length_of_string_1": "length of",
        "CALC_length_of_string_2": "",
        "CALC_reverse_of_string_1": "Reverse",
        "CALC_reverse_of_string_2": "",
        "CALC_substring_1": "substring of",
        "CALC_substring_2": "from",
        "CALC_substring_3": "to",
        "length_of_string": "to",
        "CALC_substring_4": "",
        "CALC_count_match_string_1": "count of",
        "CALC_count_match_string_2": "in",
        "CALC_replace_string_1": "replace",
        "CALC_replace_string_2": "in",
        "CALC_replace_string_3": "with",
        "CALC_replace_string_4": "",
        "CALC_change_string_case_1": "",
        "CALC_change_string_case_2": "of",
        "CALC_change_string_case_3": " ",
        "CALC_change_string_case_sub_1": "uppercase",
        "CALC_change_string_case_sub_2": "lowercase",
        "CALC_index_of_string_1": "index of",
        "CALC_index_of_string_2": "in",
        "CALC_index_of_string_3": "",
        "MOVING_add_direction_by_angle_time_explain_1": "For",
        "MOVING_direction_relative_duration_1": "For",
        "MOVING_direction_relative_duration_2": "secs set direction to",
        "MOVING_direction_relative_duration_3": "",
        "CALC_get_sound_volume": "Volume",
        "SOUND_sound_from_to_1": "Play",
        "SOUND_sound_from_to_2": "sound from",
        "SOUND_sound_from_to_3": "to",
        "SOUND_sound_from_to_4": "secs",
        "SOUND_sound_from_to_and_wait_1": "Play",
        "SOUND_sound_from_to_and_wait_2": "sound from",
        "SOUND_sound_from_to_and_wait_3": "to",
        "SOUND_sound_from_to_and_wait_4": "secs and wait",
        "CALC_quotient_and_mod_1": "",
        "CALC_quotient_and_mod_2": "of",
        "CALC_quotient_and_mod_3": "/",
        "CALC_quotient_and_mod_4": " ",
        "CALC_quotient_and_mod_sub_1": "Quotient",
        "CALC_quotient_and_mod_sub_2": "Rest",
        "self": "Self",
        "CALC_coordinate_size_value": "Scale",
        "CALC_choose_project_timer_action_1": "",
        "CALC_choose_project_timer_action_2": "timer",
        "CALC_choose_project_timer_action_sub_1": "Start",
        "CALC_choose_project_timer_action_sub_2": "Stop",
        "CALC_choose_project_timer_action_sub_3": "Reset",
        "LOOKS_change_object_index_1": "bring to",
        "LOOKS_change_object_index_2": "",
        "LOOKS_change_object_index_sub_1": "front",
        "LOOKS_change_object_index_sub_2": "forward",
        "LOOKS_change_object_index_sub_3": "backward",
        "LOOKS_change_object_index_sub_4": "back",
        "FLOW_repeat_while_true_until": "until",
        "FLOW_repeat_while_true_while": "while",
        "copy_block": "copy block(s)",
        "delete_block": "delete block(s)",
        "tidy_up_block": "tidy up the blocks",
        "block_hi": "Hi",
        "entry_bot_name": "Entrybot",
        "hi_entry": "Hello Entry!",
        "hi_entry_en": "Hello Entry!",
        "bark_dog": "dog barking",
        "walking_entryBot": "Walking Entrybot",
        "doggi_bark": "Doggi's Bark",
        "entry": "Entry",
        "hello": "Hello",
        "nice": "nice to meet you",
        "silent": "Silent",
        "do_name": "Do",
        "do_sharp_name": "Do#(Re♭)",
        "re_name": "Re",
        "re_sharp_name": "Re(Mi♭)",
        "mi_name": "Mi",
        "fa_name": "Fa",
        "fa_sharp_name": "Fa#(Sol♭)",
        "sol_name": "Sol",
        "sol_sharp_name": "Sol#(La♭)",
        "la_name": "La",
        "la_sharp_name": "La#(Si♭)",
        "DUMMY": "더미",
        "coconut_stop_motor": "stop motor",
        "coconut_move_motor": "move motor",
        "coconut_turn_motor": "turn",
        "coconut_move_outmotor": "external motor",
        "coconut_turn_left": "left",
        "coconut_turn_right": "right",
        "coconut_move_forward": "forward",
        "coconut_move_backward": "backward",
        "coconut_note_c": "note_c",
        "coconut_note_d": "note_d",
        "coconut_note_e": "note_e",
        "coconut_note_f": "note_f",
        "coconut_note_g": "note_g",
        "coconut_note_a": "note_a",
        "coconut_note_b": "note_b",
        "coconut_move_speed_1": "0",
        "coconut_move_speed_2": "50",
        "coconut_move_speed_3": "100",
        "coconut_move_speed_4": "150",
        "coconut_move_speed_5": "255",
        "coconut_play_buzzer_hn": "Half",
        "coconut_play_buzzer_qn": "Quater",
        "coconut_play_buzzer_en": "Eighth",
        "coconut_play_buzzer_sn": "Sixteenth",
        "coconut_play_buzzer_tn": "Thirty-second",
        "coconut_play_buzzer_wn": "Whole",
        "coconut_play_buzzer_dhn": "Dotted half",
        "coconut_play_buzzer_dqn": "Dotted quarter",
        "coconut_play_buzzer_den": "Dotted eighth",
        "coconut_play_buzzer_dsn": "Dotted sixteenth",
        "coconut_play_buzzer_dtn": "Dotted thirty-second",
        "coconut_rest_buzzer_hr": "Half_rest",
        "coconut_rest_buzzer_qr": "Quater_rest",
        "coconut_rest_buzzer_er": "Eighth_rest",
        "coconut_rest_buzzer_sr": "Sixteenth_rest",
        "coconut_rest_buzzer_tr": "Thirty-second rest",
        "coconut_rest_buzzer_wr": "Whole_rest",
        "coconut_play_midi_1": "Twinkle Twinkle little star",
        "coconut_play_midi_2": "Three bears",
        "coconut_play_midi_3": "Mozart's Lullaby",
        "coconut_play_midi_4": "Do-Re-Mi",
        "coconut_play_midi_5": "Butterfly",
        "coconut_floor_sensing_on": "detect",
        "coconut_floor_sensing_off": "not detect",
        "coconut_dotmatrix_set_on": "on",
        "coconut_dotmatrix_set_off": "off",
        "coconut_dotmatrix_row_0": "all",
        "coconut_dotmatrix_row_1": "1",
        "coconut_dotmatrix_row_2": "2",
        "coconut_dotmatrix_row_3": "3",
        "coconut_dotmatrix_row_4": "4",
        "coconut_dotmatrix_row_5": "5",
        "coconut_dotmatrix_row_6": "6",
        "coconut_dotmatrix_row_7": "7",
        "coconut_dotmatrix_row_8": "8",
        "coconut_dotmatrix_col_0": "all",
        "coconut_dotmatrix_col_1": "1",
        "coconut_dotmatrix_col_2": "2",
        "coconut_dotmatrix_col_3": "3",
        "coconut_dotmatrix_col_4": "4",
        "coconut_dotmatrix_col_5": "5",
        "coconut_dotmatrix_col_6": "6",
        "coconut_dotmatrix_col_7": "7",
        "coconut_dotmatrix_col_8": "8",
        "coconut_sensor_left_proximity": "left IR distance",
        "coconut_sensor_right_proximity": "right IR distance",
        "coconut_sensor_both_proximity": "both IR distance",
        "coconut_sensor_left_floor": "left line tracer",
        "coconut_sensor_right_floor": "right line tracer",
        "coconut_sensor_both_floor": "both line tracer",
        "coconut_sensor_acceleration_x": "X-Axis Accelerometer",
        "coconut_sensor_acceleration_y": "Y-Axis Accelerometer",
        "coconut_sensor_acceleration_z": "Z-Axis Accelerometer",
        "coconut_sensor_light": "light sensor",
        "coconut_sensor_temperature": "temperature",
        "coconut_left_led": "left led",
        "coconut_right_led": "right led",
        "coconut_both_leds": "both led",
        "coconut_color_cyan": "Cyan",
        "coconut_color_magenta": "Magenta",
        "coconut_color_black": "Black",
        "coconut_color_white": "White",
        "coconut_color_red": "Red",
        "coconut_color_yellow": "Yellow",
        "coconut_color_green": "Green",
        "coconut_color_blue": "Blue",
        "coconut_beep": "buzzer on",
        "coconut_clear_buzzer": "buzzer off",
        "coconut_x_axis": "X-Axis",
        "coconut_y_axis": "Y-Axis",
        "coconut_z_axis": "Z-Axis",
        "modi_enviroment_bule": "Blue",
        "modi_enviroment_green": "Green",
        "modi_enviroment_humidity": "Humidity",
        "modi_enviroment_illuminance": "Illuminance",
        "modi_enviroment_red": "Red",
        "modi_enviroment_temperature": "Temparature",
        "modi_gyroscope_xAcceleratior": "X-axis acceleration",
        "modi_gyroscope_yAcceleratior": "Y-axis acceleration",
        "modi_gyroscope_zAcceleratior": "Z-axis acceleration",
        "modi_motor_angle": "Angle",
        "modi_motor_speed": "Speed",
        "modi_motor_torque": "Torque",
        "modi_speaker_F_DO_5": "DO 5",
        "modi_speaker_F_DO_6": "DO 6",
        "modi_speaker_F_DO_7": "DO 7",
        "modi_speaker_F_DO_S_5": "DO #5",
        "modi_speaker_F_DO_S_6": "DO #6",
        "modi_speaker_F_DO_S_7": "DO #7",
        "modi_speaker_F_MI_5": "MI 5",
        "modi_speaker_F_MI_6": "MI 6",
        "modi_speaker_F_MI_7": "MI 7",
        "modi_speaker_F_PA_5": "FA 5",
        "modi_speaker_F_PA_6": "FA 6",
        "modi_speaker_F_PA_7": "FA 7",
        "modi_speaker_F_PA_S_5": "FA #5",
        "modi_speaker_F_PA_S_6": "FA #6",
        "modi_speaker_F_PA_S_7": "FA #7",
        "modi_speaker_F_RA_5": "LA 5",
        "modi_speaker_F_RA_6": "LA 6",
        "modi_speaker_F_RA_7": "LA 7",
        "modi_speaker_F_RA_S_5": "LA #5",
        "modi_speaker_F_RA_S_6": "LA #6",
        "modi_speaker_F_RA_S_7": "LA #7",
        "modi_speaker_F_RE_5": "RE 5",
        "modi_speaker_F_RE_6": "RE 6",
        "modi_speaker_F_RE_7": "RE 7",
        "modi_speaker_F_RE_S_5": "LA #5",
        "modi_speaker_F_RE_S_6": "RE #6",
        "modi_speaker_F_RE_S_7": "RE #7",
        "modi_speaker_F_SOL_5": "SOL 5",
        "modi_speaker_F_SOL_6": "SOL 6",
        "modi_speaker_F_SOL_7": "SOL 7",
        "modi_speaker_F_SOL_S_5": "SOL #5",
        "modi_speaker_F_SOL_S_6": "SOL #6",
        "modi_speaker_F_SOL_S_7": "SOL #7",
        "modi_speaker_F_SO_5": "TI 5",
        "modi_speaker_F_SO_6": "TI 6",
        "modi_speaker_F_SO_7": "TI 7",
        "si_name": "Si",
        "ev3_ccw": "CCW",
        "ev3_cw": "CW",
        "rokoboard_sensor_name_0": "Sound",
        "rokoboard_sensor_name_1": "Light",
        "rokoboard_sensor_name_2": "Slider",
        "rokoboard_sensor_name_3": "resistance-A",
        "rokoboard_sensor_name_4": "resistance-B",
        "rokoboard_sensor_name_5": "resistance-C",
        "rokoboard_sensor_name_6": "resistance-D",
        "rokoboard_string_1": "Button Pressed",
        "HW_MOTOR": "Motor",
        "HW_SENSOR": "Sensor",
        "HW_LED": "Led",
        "HW_MELODY": "Melody",
        "HW_ROBOT": "Robot",
        "ALTINO_ACCX": "Accel-X",
        "ALTINO_ACCY": "Accel-Y",
        "ALTINO_ACCZ": "Accel-Z",
        "ALTINO_BAT": "BAT",
        "ALTINO_CDS": "CDS",
        "ALTINO_GYROX": "Gyro-X",
        "ALTINO_GYROY": "Gyro-Y",
        "ALTINO_GYROZ": "Gyro-Z",
        "ALTINO_IR1": "IR-1",
        "ALTINO_IR2": "IR-2",
        "ALTINO_IR3": "IR-3",
        "ALTINO_IR4": "IR-4",
        "ALTINO_IR5": "IR-5",
        "ALTINO_IR6": "IR-6",
        "ALTINO_Led_Brake_Light": "Brake",
        "ALTINO_Led_Forward_Light": "Forward",
        "ALTINO_Led_Reverse_Light": "Reverse",
        "ALTINO_Led_Turn_Left_Light": "Turn Left",
        "ALTINO_Led_Turn_Right_Light": "Turn Right",
        "ALTINO_Line": "line",
        "ALTINO_MAGX": "Magnet-X",
        "ALTINO_MAGY": "Magnet-Y",
        "ALTINO_MAGZ": "Magnet-Z",
        "ALTINO_REMOTE": "remote control",
        "ALTINO_STTOR": "S-Current",
        "ALTINO_STVAR": "steering potentiometer",
        "ALTINO_Steering_Angle_Center": "Center-0",
        "ALTINO_Steering_Angle_Left10": "Left-10",
        "ALTINO_Steering_Angle_Left15": "Left-15",
        "ALTINO_Steering_Angle_Left20": "Left-20",
        "ALTINO_Steering_Angle_Left5": "Left-5",
        "ALTINO_Steering_Angle_Right10": "Right-10",
        "ALTINO_Steering_Angle_Right15": "Right-15",
        "ALTINO_Steering_Angle_Right20": "Right-20",
        "ALTINO_Steering_Angle_Right5": "Right-5",
        "ALTINO_TEM": "Temperature",
        "ALTINO_TOR1": "M-Current Right",
        "ALTINO_TOR2": "M-Current Left",
        "ALTINO_Value": "output value",
        "ALTINO_a": "A(la)",
        "ALTINO_a2": "A#(la#)",
        "ALTINO_b": "B(si)",
        "ALTINO_c": "C(do)",
        "ALTINO_c2": "C#(do#)",
        "ALTINO_d": "D(re)",
        "ALTINO_d2": "D#(re#)",
        "ALTINO_dot_display_1": "one char",
        "ALTINO_dot_display_2": "display",
        "ALTINO_e": "E(mi)",
        "ALTINO_f": "F(fa)",
        "ALTINO_f2": "F#(fa#)",
        "ALTINO_g": "G(sol)",
        "ALTINO_g2": "G#(sol#)",
        "ALTINO_h": "Off",
        "ALTINO_h2": "On",
        "ALTINO_leftWheel": "left",
        "ALTINO_melody_ms": "play",
        "ALTINO_outputValue": "output",
        "ALTINO_rightWheel": "right",
        "ALTINO_set": " display",
        "ardublock_motor_forward": "Forward",
        "ardublock_motor_backward": "Backward",
        "jdkit_clockwise": "시계방향",
        "jdkit_counterclockwise": "반시계방향",
        "jdkit_gyro_frontrear": "앞뒤",
        "jdkit_gyro_leftright": "좌우",
        "jdkit_joystick_leftleftright": "왼쪽 좌우",
        "jdkit_joystick_lefttopbottom": "왼쪽 상하",
        "jdkit_joystick_rightleftright": "오른쪽 좌우",
        "jdkit_joystick_righttopbottom": "오른쪽 상하",
        "jdkit_led": "LED",
        "jdkit_led_color_green": "초록색",
        "jdkit_led_color_orange": "오랜지색",
        "jdkit_led_turnoff": "끄기",
        "jdkit_led_turnon": "켜기",
        "jdkit_motor_leftbottom": "왼쪽아래",
        "jdkit_motor_lefttop": "왼쪽위",
        "jdkit_motor_rightbottom": "오른쪽아래",
        "jdkit_motor_righttop": "오른쪽위",
        "jdkit_tune_do": "도",
        "jdkit_tune_fa": "파",
        "jdkit_tune_la": "라",
        "jdkit_tune_mi": "미",
        "jdkit_tune_re": "레",
        "jdkit_tune_si": "시",
        "jdkit_tune_sol": "솔",
        "FUNBOARD_bt_down": "yellow(B)",
        "FUNBOARD_bt_left": "green(C)",
        "FUNBOARD_bt_right": "blue(D)",
        "FUNBOARD_bt_up": "red(A)",
        "FUNBOARD_column_tag": "column",
        "FUNBOARD_do_off": "off",
        "FUNBOARD_do_on": "on",
        "FUNBOARD_led_color_all": "all",
        "FUNBOARD_led_color_blue": "blue",
        "FUNBOARD_led_color_green": "green",
        "FUNBOARD_led_color_red": "red",
        "FUNBOARD_led_color_str": "color  ",
        "FUNBOARD_led_color_yellow": "yellow",
        "FUNBOARD_led_off_str": "Turn off the LED",
        "FUNBOARD_led_on_str": "Turn on the LED",
        "FUNBOARD_row_tag": "row",
        "FUNBOARD_scroll_down": "downward",
        "FUNBOARD_scroll_left": "leftward",
        "FUNBOARD_scroll_no": "no",
        "FUNBOARD_scroll_right": "rightward",
        "FUNBOARD_scroll_up": "upwards",
        "FUNBOARD_sensor_cds": "light sensor",
        "FUNBOARD_sensor_mic": "microphone sensor",
        "FUNBOARD_sensor_slide": "potentiometer",
        "FUNBOARD_sensor_state_1": "low",
        "FUNBOARD_sensor_state_2": "high",
        "FUNBOARD_touchbt_down": "B(yellow)",
        "FUNBOARD_touchbt_enter": "F",
        "FUNBOARD_touchbt_escape": "G",
        "FUNBOARD_touchbt_left": "C(green)",
        "FUNBOARD_touchbt_right": "D(blue)",
        "FUNBOARD_touchbt_space": "E",
        "FUNBOARD_touchbt_up": "A(red)",
        "funboard_dotmatrix_set_off": "off",
        "funboard_dotmatrix_set_on": "on",
        "AI_UTILIZE": "AI",
        "video_show_video": "Show",
        "video_hide_video": "Hide",
        "video_brightness": "brightness",
        "video_transparency": "transparency",
        "video_left_right": "horizontally",
        "video_top_bottom": "vertically",
        "video_human": "Human",
        "video_face": "Face",
        "video_object": "object",
        "video_pose_model": "Human model",
        "video_face_model": "Face model",
        "video_object_model": "object model",
        "video_start": "Start",
        "video_end": "Stop",
        "video_gender": "gender",
        "video_age": "age",
        "video_emotion": "emotion",
        "video_motion_onself": "itself",
        "video_motion_onscreen": "screen",
        "video_motion_scale": "Motion",
        "video_motion_direction_horizontal": "X direction",
        "video_motion_direction_vertical": "Y direction",
        "table_row": "row",
        "table_col": "column",
        "table_sum": "sum",
        "table_max": "max",
        "table_min": "min",
        "table_avg": "average",
        "table_stdev": "standard deviation",
        "OnBlock": "On(HIGH, 5V)",
        "OffBlock": "Off(LOW, 0V)",
        "AllOnBlock": "ALL ON",
        "AllOffBlock": "ALL OFF",
        "BacklightOn": "ON",
        "BacklightOff": "OFF",
        "lineForward": "FORWARD",
        "Left": "Left Turn",
        "Right": "Right Turn",
        "LineBack": "BACK",
        "ForwardSpeed": "driving speed",
        "TurnSpeed": "rotational speed",
        "ForwardOverTime": "Intersection Driving Time",
        "Tracer": "Line Tracer",
        "RemotBit": "Remot(bit)",
        "RemotPs2": "Remot(PS2)",
        "RichShield_pulldown": "Pull Down",
        "RichShield_pullup": "Pull Up",
        "chocopi_motion_angle_x": "angle X",
        "chocopi_motion_angle_y": "angle Y",
        "chocopi_motion_angle_z": "angle Z",
        "RichShield_lcd_first_line": "first",
        "RichShield_lcd_seconds_line": "second",
        "RichShield_toggle_on": "on",
        "RichShield_toggle_off": "off",
        "ROBOID_sensor_left_proximity": "left proximity",
        "ROBOID_sensor_right_proximity": "right proximity",
        "ROBOID_sensor_acceleration_x": "x acceleration",
        "ROBOID_sensor_acceleration_y": "y acceleration",
        "ROBOID_sensor_acceleration_z": "z acceleration",
        "ROBOID_sensor_front_oid": "front oid",
        "ROBOID_sensor_rear_oid": "rear oid",
        "ROBOID_sensor_position_x": "x position",
        "ROBOID_sensor_position_y": "y position",
        "ROBOID_sensor_orientation": "orientation",
        "ROBOID_sensor_light": "light",
        "ROBOID_sensor_temperature": "temperature",
        "ROBOID_sensor_signal_strength": "signal strength",
        "ROBOID_front": "front",
        "ROBOID_rear": "rear",
        "ROBOID_forward2": "forward",
        "ROBOID_backward2": "backward",
        "ROBOID_tilt_forward": "tilt forward",
        "ROBOID_tilt_backward": "tilt backward",
        "ROBOID_tilt_left": "tilt left",
        "ROBOID_tilt_right": "tilt right",
        "ROBOID_tilt_flip": "tilt flip",
        "ROBOID_tilt_not": "not tilt",
        "ROBOID_battery_normal": "battery normal",
        "ROBOID_battery_low": "battery low",
        "ROBOID_battery_empty": "battery empty",
        "ROBOID_turn_on": "on",
        "ROBOID_turn_off": "off",
        "ROBOID_note_c": "C",
        "ROBOID_note_c_sharp": "C♯(D♭)",
        "ROBOID_note_d": "D",
        "ROBOID_note_d_sharp": "D♯(E♭)",
        "ROBOID_note_e": "E",
        "ROBOID_note_f": "F",
        "ROBOID_note_f_sharp": "F♯(G♭)",
        "ROBOID_note_g": "G",
        "ROBOID_note_g_sharp": "G♯(A♭)",
        "ROBOID_note_a": "A",
        "ROBOID_note_a_sharp": "A♯(B♭)",
        "ROBOID_note_b": "B",
        "ROBOID_monitor_left_wheel": "left wheel",
        "ROBOID_monitor_right_wheel": "right wheel",
        "ROBOID_monitor_left_eye": "left eye",
        "ROBOID_monitor_right_eye": "right eye",
        "ROBOID_monitor_buzzer": "buzzer",
        "ROBOID_monitor_note": "note",
        "ROBOID_sensor_mic_touch": "mic touch",
        "ROBOID_sensor_volume_up_touch": "volume up touch",
        "ROBOID_sensor_volume_down_touch": "volume down touch",
        "ROBOID_sensor_play_touch": "play touch",
        "ROBOID_sensor_back_touch": "back touch",
        "ROBOID_sensor_oid_mode": "oid mode",
        "ROBOID_sensor_oid": "oid",
        "ROBOID_sensor_lift": "lift",
        "ROBOID_button_mic": "mic",
        "ROBOID_button_volume_up": "volume up",
        "ROBOID_button_volume_down": "volume down",
        "ROBOID_button_play": "play",
        "ROBOID_button_back": "back",
        "ROBOID_button_clicked": "clicked",
        "ROBOID_button_long_pressed": "long-pressed (1.5 secs)",
        "ROBOID_button_long_long_pressed": "long-long-pressed (3 secs)",
        "ROBOID_tap": "tap",
        "ROBOID_lift": "lift",
        "ROBOID_forward": "forward",
        "ROBOID_backward": "backward",
        "ROBOID_sound_noise": "noise",
        "ALTINO_sound_oct": "Oct",
        "ALTINO_stopAll": "All",
        "ALTINO_stopDrive": "Drive",
        "ALTINO_stopSteering": "Steering",
        "ALTINO_stopSound": "Sound",
        "ALTINO_stopLight": "Light",
        "ALTINO_stopDisplay": "Display",
        "ALTINO_dot_line_1": "Line-1",
        "ALTINO_dot_line_2": "Line-2",
        "ALTINO_dot_line_3": "Line-3",
        "ALTINO_dot_line_4": "Line-4",
        "ALTINO_dot_line_5": "Line-5",
        "ALTINO_dot_line_6": "Line-6",
        "ALTINO_dot_line_7": "Line-7",
        "ALTINO_dot_line_8": "Line-8",
        "Action": "Action",
        "Sound": "Sound",
        "Back": "Back",
        "Red": "Red",
        "Green": "Green",
        "Blue": "Blue",
        "Cheer": "Cheer",
        "Glad": "Glad",
        "Dissatisfaction": "Dissatisfaction",
        "Angry": "Angry",
        "Laughter": "Laughter",
        "Praise": "Praise",
        "Praise2": "Praise2",
        "Consolation": "Consolation",
        "Surprised": "Surprised",
        "Warning": "Warning",
        "Fear": "Fear",
        "Forward": "Forward",
        "LightSensorValue": "Light Sensor Value",
        "MicSensorValue": "Mic Sensor Value",
        "IR0Value": "IR 0 Value",
        "IR1Value": "IR 1 Value",
        "IR2Value": "IR 2 Value",
        "IR3Value": "IR 3 Value",
        "Remocon": "Remote control",
        "Head": "Head",
        "LeftArm": "Left",
        "RightArm": "Right",
        "BITBRICK_ultrasonicSensor": "ultrasonicSenso",
        "BITBRICK_vibrationSensor": "vibrationSensor",
        "ROBOID_sensor_color_r": "color r",
        "ROBOID_sensor_color_g": "color g",
        "ROBOID_sensor_color_b": "color b",
        "ROBOID_sensor_floor": "floor",
        "ROBOID_sensor_button": "button",
        "ROBOID_sensor_color_number": "color number",
        "ROBOID_sensor_color_pattern": "color pattern",
        "ROBOID_free_fall": "free fall",
        "ROBOID_sound_chop": "chop",
        "ROBOID_sound_happy": "happy",
        "ROBOID_sound_angry": "angry",
        "ROBOID_sound_sad": "sad",
        "ROBOID_sound_sleep": "sleep",
        "monitor_joystick_left_x": "Left Joystick X",
        "monitor_joystick_left_y": "Left Joystick Y",
        "monitor_joystick_left_direction": "Left Joystick Direction",
        "monitor_joystick_left_event": "Left Joystick Event",
        "monitor_joystick_right_x": "Right Joystick X",
        "monitor_joystick_right_y": "Right Joystick Y",
        "monitor_joystick_right_direction": "Right Joystick Direction",
        "monitor_joystick_right_event": "Right Joystick Event",
        "monitor_button_button": "Button",
        "monitor_button_event": "Button Event",
        "monitor_entryhw_countTransferReserved": "Transfer Buffer",
        "common_light_color_cottoncandy": "cotton candy",
        "common_light_color_emerald": "emerald",
        "common_light_color_lavender": "lavender",
        "common_light_color_muscat": "muscat",
        "common_light_color_strawberrymilk": "strawberry milk",
        "common_light_color_sunset": "sunset",
        "common_light_mode_hold": "hold",
        "common_light_mode_dimming": "dimming",
        "common_light_mode_flicker": "flicker",
        "common_light_mode_flicker_double": "flicker double",
        "common_light_brightness_all": "all",
        "common_light_brightness_b100": "brightness 100%",
        "common_light_brightness_b25": "brightness 25%",
        "common_light_brightness_b50": "brightness 50%",
        "common_light_brightness_b75": "brightness 75%",
        "common_light_color_blue": "blue",
        "common_light_color_cyan": "cyan",
        "common_light_color_green": "green",
        "common_light_color_magenta": "magenta",
        "common_light_brightness_off": "off",
        "common_light_brightness_on": "on",
        "common_light_color_red": "red",
        "common_light_color_white": "white",
        "common_light_color_yellow": "yellow",
        "common_left": "left",
        "common_right": "right",
        "common_roll": "Roll",
        "common_pitch": "Pitch",
        "common_yaw": "Yaw",
        "common_throttle": "Throttle",
        "controller_button": "button",
        "controller_button_event": "button event",
        "controller_button_front_left": "Front left button",
        "controller_button_front_right": "Front right button",
        "controller_button_top_left": "Top left button",
        "controller_button_top_right": "Top right button",
        "controller_button_center_up": "Trim up button",
        "controller_button_center_left": "Trim left button",
        "controller_button_center": "Center button(Power)",
        "controller_button_center_right": "Trim right button",
        "controller_button_center_down": "Trim down button",
        "controller_button_bottom_left": "Bottom left button",
        "controller_button_bottom_right": "Bottom right button",
        "controller_buzzer": "buzzer",
        "controller_buzzer_a": "A",
        "controller_buzzer_as": "A#",
        "controller_buzzer_b": "B",
        "controller_buzzer_c": "C",
        "controller_buzzer_cs": "C#",
        "controller_buzzer_d": "D",
        "controller_buzzer_ds": "D#",
        "controller_buzzer_e": "E",
        "controller_buzzer_f": "F",
        "controller_buzzer_fs": "F#",
        "controller_buzzer_g": "G",
        "controller_buzzer_gs": "G#",
        "controller_buzzer_mute": "mute",
        "controller_joystick_direction_left_up": "Left top",
        "controller_joystick_direction_up": "Top",
        "controller_joystick_direction_right_up": "Right top",
        "controller_joystick_direction_left": "Left",
        "controller_joystick_direction_center": "Center",
        "controller_joystick_direction_right": "Right",
        "controller_joystick_direction_left_down": "Left Bottom",
        "controller_joystick_direction_down": "Bottom",
        "controller_joystick_direction_right_down": "Right Bottom",
        "controller_joystick_left_direction": "left joystick direction",
        "controller_joystick_left_event": "left joystick event",
        "controller_joystick_left_x": "left joystick X",
        "controller_joystick_left_y": "left joystick Y",
        "controller_joystick_right_direction": "right joystick direction",
        "controller_joystick_right_event": "right joystick event",
        "controller_joystick_right_x": "right joystick X",
        "controller_joystick_right_y": "right joystick Y",
        "entryhw_count_transfer_reserved": "Reserved data for transfer",
        "controller_button_front_left_up": "Fromt left top button",
        "controller_button_front_left_down": "Fromt left bottom button",
        "controller_button_front_right_up": "Fromt right top button",
        "controller_button_front_right_down": "Fromt right bottom button",
        "controller_display_align_center": "center",
        "controller_display_align_left": "left",
        "controller_display_align_right": "right",
        "controller_display_flagfill_off": "not fill",
        "controller_display_flagfill_on": "fill",
        "controller_display_font_10x16": "big",
        "controller_display_font_5x8": "small",
        "controller_display_line_dashed": "dashed",
        "controller_display_line_dotted": "dotted",
        "controller_display_line_solid": "solid",
        "controller_display_pixel_black": "black",
        "controller_display_pixel_white": "white",
        "controller_display_pixel_inverse": "inverse",
        "monitor_state_modeFlight": "Flight Mode",
        "monitor_state_modeControlFlight": "Control Flight Mode",
        "monitor_state_modeMovement": "Movement Mode",
        "monitor_state_headless": "Headless",
        "monitor_state_controlSpeed": "Control Speed",
        "monitor_state_sensorOrientation": "Sensor Orientation",
        "monitor_state_battery": "Battery",
        "monitor_motion_accelX": "Accel X",
        "monitor_motion_accelY": "Accel Y",
        "monitor_motion_accelZ": "Accel Z",
        "monitor_motion_gyroRoll": "Gyro Roll",
        "monitor_motion_gyroPitch": "Gyro Pitch",
        "monitor_motion_gyroYaw": "Gyro Yaw",
        "monitor_motion_angleRoll": "Roll",
        "monitor_motion_anglePitch": "Pitch",
        "monitor_motion_angleYaw": "Yaw",
        "monitor_battle_ir_message": "IR Message",
        "monitor_informationAssembledForEntry_positionX": "Position X",
        "monitor_informationAssembledForEntry_positionY": "Position Y",
        "monitor_informationAssembledForEntry_positionZ": "Position Z",
        "monitor_informationAssembledForEntry_altitude": "Altitude",
        "monitor_informationAssembledForEntry_rangeHeight": "Height",
        "drone_accel_x": "Accel x",
        "drone_accel_y": "Accel y",
        "drone_accel_z": "Accel z",
        "drone_gyro_pitch": "Gyro Pitch",
        "drone_gyro_roll": "Gyro Roll",
        "drone_gyro_yaw": "Gyro Yaw",
        "drone_attitude_pitch": "Attitude Pitch",
        "drone_attitude_roll": "Attitude Roll",
        "drone_attitude_yaw": "Attitude Yaw",
        "drone_control_quad_pitch": "Pitch",
        "drone_control_quad_pitch_backward": "Backward",
        "drone_control_quad_pitch_forward": "Forward",
        "drone_control_quad_roll": "Roll",
        "drone_control_quad_roll_left": "Left",
        "drone_control_quad_roll_right": "Right",
        "drone_control_quad_throttle": "Throttle",
        "drone_control_quad_throttle_down": "Down",
        "drone_control_quad_throttle_up": "Up",
        "drone_control_quad_yaw": "Yaw",
        "drone_control_quad_yaw_ccw": "Counterclockwise",
        "drone_control_quad_yaw_cw": "clockwise",
        "drone_headless_normal": "Normal",
        "drone_headless_headless": "Headless",
        "drone_light_color_body": "Body",
        "drone_light_manual_body_blue": "Blue",
        "drone_light_manual_body_green": "Green",
        "drone_light_manual_body_red": "Red",
        "drone_motor_rotation_clockwise": "Clockwise",
        "drone_motor_rotation_counterclockwise": "Counterclockwise",
        "drone_altitude": "Altitude",
        "drone_range_height": "Height",
        "drone_battle_ir_message": "IR Data",
        "drone_state_mode_system": "System Mode",
        "drone_state_mode_flight": "Flight Mode",
        "drone_state_mode_control_flight": "Flight Control Mode",
        "drone_state_mode_movement": "mode movement",
        "drone_state_headless": "Headless",
        "drone_state_control_speed": "Speed",
        "drone_state_battery": "Battery",
        "drone_positionX": "Position X",
        "drone_positionY": "Position Y",
        "drone_positionZ": "Position Z",
        "drone_state_sensor_orientation": "Sensor direction",
        "monitor_range_front": "Range Front",
        "monitor_range_bottom": "Range Bottom",
        "monitor_cardColor_frontHue": "Front Hue",
        "monitor_cardColor_frontSaturation": "Front Saturation",
        "monitor_cardColor_frontValue": "Front Value",
        "monitor_cardColor_frontLightness": "Front Lightness",
        "monitor_cardColor_rearHue": "Rear Hue",
        "monitor_cardColor_rearSaturation": "Rear Saturation",
        "monitor_cardColor_rearValue": "Rear Value",
        "monitor_cardColor_rearLightness": "Rear Lightness",
        "monitor_cardColor_frontColor": "Front Color",
        "monitor_cardColor_rearColor": "Rear Color",
        "monitor_cardColor_card": "Card",
        "drone_range_front": "Distance from front obstacle",
        "drone_cardcolor_front_hue": "Front Hue",
        "drone_cardcolor_front_saturation": "Front Saturation",
        "drone_cardcolor_front_value": "Front Value",
        "drone_cardcolor_front_lightness": "Front Lightness",
        "drone_cardcolor_rear_hue": "Rear Hue",
        "drone_cardcolor_rear_saturation": "Rear Saturation",
        "drone_cardcolor_rear_value": "Rear Value",
        "drone_cardcolor_rear_lightness": "Rear Lightness",
        "drone_cardcolor_front_color": "Front Card Color",
        "drone_cardcolor_rear_color": "Rear Card Color",
        "drone_cardcolor_card": "Card",
        "byrobot_dronefighter_drone_state_mode_system": "system Mode",
        "byrobot_dronefighter_drone_state_mode_vehicle": "vehicle Mode",
        "byrobot_dronefighter_drone_state_mode_flight": "flight Mode",
        "byrobot_dronefighter_drone_state_mode_drive": "drive Mode",
        "byrobot_dronefighter_drone_state_mode_coordinate": "coordinate",
        "byrobot_dronefighter_drone_state_battery": "battery",
        "byrobot_dronefighter_drone_attitude_roll": "attitude - roll",
        "byrobot_dronefighter_drone_attitude_pitch": "attitude - pitch",
        "byrobot_dronefighter_drone_attitude_yaw": "attitude - yaw",
        "byrobot_dronefighter_drone_irmessage": "IR data Received",
        "byrobot_dronefighter_controller_joystick_left_x": "left joystick horizontal",
        "byrobot_dronefighter_controller_joystick_left_y": "left joystick vertical",
        "byrobot_dronefighter_controller_joystick_left_direction": "left joystick direction",
        "byrobot_dronefighter_controller_joystick_left_event": "left joystick event",
        "byrobot_dronefighter_controller_joystick_left_command": "left joystick command",
        "byrobot_dronefighter_controller_joystick_right_x": "right joystick horizontal",
        "byrobot_dronefighter_controller_joystick_right_y": "right joystick vertical",
        "byrobot_dronefighter_controller_joystick_right_direction": "right joystick direction",
        "byrobot_dronefighter_controller_joystick_right_event": "right joystick event",
        "byrobot_dronefighter_controller_joystick_right_command": "right joystick command",
        "byrobot_dronefighter_controller_joystick_direction_left_up": "left up",
        "byrobot_dronefighter_controller_joystick_direction_up": "up",
        "byrobot_dronefighter_controller_joystick_direction_right_up": "right up",
        "byrobot_dronefighter_controller_joystick_direction_left": "left",
        "byrobot_dronefighter_controller_joystick_direction_center": "center",
        "byrobot_dronefighter_controller_joystick_direction_right": "right",
        "byrobot_dronefighter_controller_joystick_direction_left_down": "left down",
        "byrobot_dronefighter_controller_joystick_direction_down": "down",
        "byrobot_dronefighter_controller_joystick_direction_right_down": "right down",
        "byrobot_dronefighter_controller_button_button": "button",
        "byrobot_dronefighter_controller_button_event": "button event",
        "byrobot_dronefighter_controller_button_front_left": "left red button",
        "byrobot_dronefighter_controller_button_front_right": "right red button",
        "byrobot_dronefighter_controller_button_front_left_right": "both red button",
        "byrobot_dronefighter_controller_button_center_up_left": "trim-turn-left button",
        "byrobot_dronefighter_controller_button_center_up_right": "trim-turn-right button",
        "byrobot_dronefighter_controller_button_center_up": "trim-forward button",
        "byrobot_dronefighter_controller_button_center_left": "trim-left button",
        "byrobot_dronefighter_controller_button_center_right": "trim-right button",
        "byrobot_dronefighter_controller_button_center_down": "trim-backward button",
        "byrobot_dronefighter_controller_button_bottom_left": "left round button",
        "byrobot_dronefighter_controller_button_bottom_right": "right round button",
        "byrobot_dronefighter_controller_button_bottom_left_right": "both round button",
        "byrobot_dronefighter_entryhw_count_transfer_reserved": "reserved data blocks",
        "byrobot_dronefighter_common_roll": "roll",
        "byrobot_dronefighter_common_pitch": "pitch",
        "byrobot_dronefighter_common_yaw": "yaw",
        "byrobot_dronefighter_common_throttle": "throttle",
        "byrobot_dronefighter_common_left": "left",
        "byrobot_dronefighter_common_right": "right",
        "byrobot_dronefighter_common_light_manual_on": "on",
        "byrobot_dronefighter_common_light_manual_off": "off",
        "byrobot_dronefighter_common_light_manual_b25": "brightness 25%",
        "byrobot_dronefighter_common_light_manual_b50": "brightness 50%",
        "byrobot_dronefighter_common_light_manual_b75": "brightness 75%",
        "byrobot_dronefighter_common_light_manual_b100": "brightness 100%",
        "byrobot_dronefighter_common_light_manual_all": "all",
        "byrobot_dronefighter_common_light_manual_red": "red",
        "byrobot_dronefighter_common_light_manual_blue": "blue",
        "byrobot_dronefighter_common_light_manual_1": "1",
        "byrobot_dronefighter_common_light_manual_2": "2",
        "byrobot_dronefighter_common_light_manual_3": "3",
        "byrobot_dronefighter_common_light_manual_4": "4",
        "byrobot_dronefighter_common_light_manual_5": "5",
        "byrobot_dronefighter_common_light_manual_6": "6",
        "byrobot_dronefighter_controller_buzzer": "buzzer",
        "byrobot_dronefighter_controller_buzzer_mute": "mute",
        "byrobot_dronefighter_controller_buzzer_c": "C",
        "byrobot_dronefighter_controller_buzzer_cs": "C#",
        "byrobot_dronefighter_controller_buzzer_d": "D",
        "byrobot_dronefighter_controller_buzzer_ds": "D#",
        "byrobot_dronefighter_controller_buzzer_e": "E",
        "byrobot_dronefighter_controller_buzzer_f": "F",
        "byrobot_dronefighter_controller_buzzer_fs": "F#",
        "byrobot_dronefighter_controller_buzzer_g": "G",
        "byrobot_dronefighter_controller_buzzer_gs": "G#",
        "byrobot_dronefighter_controller_buzzer_a": "A",
        "byrobot_dronefighter_controller_buzzer_as": "A#",
        "byrobot_dronefighter_controller_buzzer_b": "B",
        "byrobot_dronefighter_controller_userinterface_preset_clear": "clear",
        "byrobot_dronefighter_controller_userinterface_preset_dronefighter2017": "default",
        "byrobot_dronefighter_controller_userinterface_preset_education": "education",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_frontleft_down": "press left red button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_frontright_down": "press right red button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_midturnleft_down": "press trim-left-turn button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_midturnright_down": "press trim-right-turn button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_midup_down": "press trim-forward button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_midleft_down": "press trim-left button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_midright_down": "press trim-right button",
        "byrobot_dronefighter_controller_userinterface_command_setup_button_middown_down": "press trim-backward button",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_left_up_in": "left joystick move up",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_left_left_in": "left joystick move left",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_left_right_in": "left joystick move right",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_left_down_in": "left joystick move down",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_right_up_in": "right joystick move up",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_right_left_in": "right joystick move left",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_right_right_in": "right joystick move right",
        "byrobot_dronefighter_controller_userinterface_command_setup_joystick_right_down_in": "right joystick move down",
        "byrobot_dronefighter_controller_userinterface_function_joystickcalibration_reset": "reset joystick calibration",
        "byrobot_dronefighter_controller_userinterface_function_change_team_red": "team - red",
        "byrobot_dronefighter_controller_userinterface_function_change_team_blue": "team - blue",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_vehicle_flight": "flight",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_vehicle_flightnoguard": "flight - no guard",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_vehicle_drive": "drive",
        "byrobot_dronefighter_controller_userinterface_function_change_coordinate_local": "coordinate - normal",
        "byrobot_dronefighter_controller_userinterface_function_change_coordinate_world": "coordinate - absolute",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_control_mode1": "control - MODE 1",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_control_mode2": "control - MODE 2",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_control_mode3": "control - MODE 3",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_control_mode4": "control - MODE 4",
        "byrobot_dronefighter_controller_userinterface_function_gyrobias_reset": "reset gyro bias",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_usb_cdc": "USB serial device",
        "byrobot_dronefighter_controller_userinterface_function_change_mode_usb_hid": "USB game controller",
        "byrobot_dronefighter_drone_team": "team",
        "byrobot_dronefighter_drone_team_red": "red",
        "byrobot_dronefighter_drone_team_blue": "blue",
        "byrobot_dronefighter_drone_coordinate_world": "absolute",
        "byrobot_dronefighter_drone_coordinate_local": "normal",
        "byrobot_dronefighter_drone_mode_vehicle_flight": "flight",
        "byrobot_dronefighter_drone_mode_vehicle_drive": "drive",
        "byrobot_dronefighter_drone_control_double_wheel": "direction",
        "byrobot_dronefighter_drone_control_double_wheel_left": "turn left",
        "byrobot_dronefighter_drone_control_double_wheel_right": "turn right",
        "byrobot_dronefighter_drone_control_double_accel_forward": "forward",
        "byrobot_dronefighter_drone_control_double_accel_backward": "backward",
        "byrobot_dronefighter_drone_control_quad_roll": "roll",
        "byrobot_dronefighter_drone_control_quad_pitch": "pitch",
        "byrobot_dronefighter_drone_control_quad_yaw": "yaw",
        "byrobot_dronefighter_drone_control_quad_throttle": "throttle",
        "byrobot_dronefighter_drone_control_quad_roll_left": "left",
        "byrobot_dronefighter_drone_control_quad_roll_right": "right",
        "byrobot_dronefighter_drone_control_quad_pitch_forward": "foward",
        "byrobot_dronefighter_drone_control_quad_pitch_backward": "backward",
        "byrobot_dronefighter_drone_control_quad_yaw_left": "turn Left",
        "byrobot_dronefighter_drone_control_quad_yaw_right": "turn Right",
        "byrobot_dronefighter_drone_control_quad_throttle_up": "up",
        "byrobot_dronefighter_drone_control_quad_throttle_down": "down",
        "byrobot_petrone_v2_common_left": "left",
        "byrobot_petrone_v2_common_light_color_cottoncandy": "cotton candy",
        "byrobot_petrone_v2_common_light_color_emerald": "emerald",
        "byrobot_petrone_v2_common_light_color_lavender": "lavender",
        "byrobot_petrone_v2_common_light_mode_dimming": "dimming",
        "byrobot_petrone_v2_common_light_mode_flicker": "flicker",
        "byrobot_petrone_v2_common_light_mode_flicker_double": "flicker double",
        "byrobot_petrone_v2_common_light_mode_hold": "hold",
        "byrobot_petrone_v2_common_light_color_muscat": "muscat",
        "byrobot_petrone_v2_common_light_color_strawberrymilk": "strawberry milk",
        "byrobot_petrone_v2_common_light_color_sunset": "sunset",
        "byrobot_petrone_v2_common_light_manual_all": "all",
        "byrobot_petrone_v2_common_light_manual_b100": "brightness 100%",
        "byrobot_petrone_v2_common_light_manual_b25": "brightness 25%",
        "byrobot_petrone_v2_common_light_manual_b50": "brightness 50%",
        "byrobot_petrone_v2_common_light_manual_b75": "brightness 75%",
        "byrobot_petrone_v2_common_light_manual_blue": "blue",
        "byrobot_petrone_v2_common_light_manual_cyan": "cyan",
        "byrobot_petrone_v2_common_light_manual_green": "green",
        "byrobot_petrone_v2_common_light_manual_magenta": "magenta",
        "byrobot_petrone_v2_common_light_manual_off": "off",
        "byrobot_petrone_v2_common_light_manual_on": "on",
        "byrobot_petrone_v2_common_light_manual_red": "red",
        "byrobot_petrone_v2_common_light_manual_white": "white",
        "byrobot_petrone_v2_common_light_manual_yellow": "yellow",
        "byrobot_petrone_v2_common_pitch": "pitch",
        "byrobot_petrone_v2_common_right": "right",
        "byrobot_petrone_v2_common_roll": "roll",
        "byrobot_petrone_v2_common_throttle": "throttle",
        "byrobot_petrone_v2_common_yaw": "yaw",
        "byrobot_petrone_v2_controller_button_bottom_left": "left round button",
        "byrobot_petrone_v2_controller_button_bottom_left_right": "both round button",
        "byrobot_petrone_v2_controller_button_bottom_right": "right round button",
        "byrobot_petrone_v2_controller_button_button": "button",
        "byrobot_petrone_v2_controller_button_center_down": "trim-backward button",
        "byrobot_petrone_v2_controller_button_center_left": "trim-left button",
        "byrobot_petrone_v2_controller_button_center_right": "trim-right button",
        "byrobot_petrone_v2_controller_button_center_up": "trim-forward button",
        "byrobot_petrone_v2_controller_button_center_up_left": "trim-turn-left button",
        "byrobot_petrone_v2_controller_button_center_up_right": "trim-turn-right button",
        "byrobot_petrone_v2_controller_button_event": "button event",
        "byrobot_petrone_v2_controller_button_front_left": "left red button",
        "byrobot_petrone_v2_controller_button_front_left_right": "both red button",
        "byrobot_petrone_v2_controller_button_front_right": "right red button",
        "byrobot_petrone_v2_controller_buzzer": "buzzer",
        "byrobot_petrone_v2_controller_buzzer_a": "A",
        "byrobot_petrone_v2_controller_buzzer_as": "A#",
        "byrobot_petrone_v2_controller_buzzer_b": "B",
        "byrobot_petrone_v2_controller_buzzer_c": "C",
        "byrobot_petrone_v2_controller_buzzer_cs": "C#",
        "byrobot_petrone_v2_controller_buzzer_d": "D",
        "byrobot_petrone_v2_controller_buzzer_ds": "D#",
        "byrobot_petrone_v2_controller_buzzer_e": "E",
        "byrobot_petrone_v2_controller_buzzer_f": "F",
        "byrobot_petrone_v2_controller_buzzer_fs": "F#",
        "byrobot_petrone_v2_controller_buzzer_g": "G",
        "byrobot_petrone_v2_controller_buzzer_gs": "G#",
        "byrobot_petrone_v2_controller_buzzer_mute": "mute",
        "byrobot_petrone_v2_controller_display_align_center": "center",
        "byrobot_petrone_v2_controller_display_align_left": "left",
        "byrobot_petrone_v2_controller_display_align_right": "right",
        "byrobot_petrone_v2_controller_display_flagfill_off": "not fill",
        "byrobot_petrone_v2_controller_display_flagfill_on": "fill",
        "byrobot_petrone_v2_controller_display_font_10x16": "big",
        "byrobot_petrone_v2_controller_display_font_5x8": "small",
        "byrobot_petrone_v2_controller_display_line_dashed": "dashed",
        "byrobot_petrone_v2_controller_display_line_dotted": "dotted",
        "byrobot_petrone_v2_controller_display_line_solid": "solid",
        "byrobot_petrone_v2_controller_display_pixel_black": "black",
        "byrobot_petrone_v2_controller_display_pixel_white": "white",
        "byrobot_petrone_v2_controller_joystick_direction_center": "center",
        "byrobot_petrone_v2_controller_joystick_direction_down": "down",
        "byrobot_petrone_v2_controller_joystick_direction_left": "left",
        "byrobot_petrone_v2_controller_joystick_direction_left_down": "left down",
        "byrobot_petrone_v2_controller_joystick_direction_left_up": "left up",
        "byrobot_petrone_v2_controller_joystick_direction_right": "right",
        "byrobot_petrone_v2_controller_joystick_direction_right_down": "right down",
        "byrobot_petrone_v2_controller_joystick_direction_right_up": "right up",
        "byrobot_petrone_v2_controller_joystick_direction_up": "up",
        "byrobot_petrone_v2_controller_joystick_left_direction": "left joystick direction",
        "byrobot_petrone_v2_controller_joystick_left_event": "left joystick event",
        "byrobot_petrone_v2_controller_joystick_left_x": "left joystick horizontal",
        "byrobot_petrone_v2_controller_joystick_left_y": "left joystick vertical",
        "byrobot_petrone_v2_controller_joystick_right_direction": "right joystick direction",
        "byrobot_petrone_v2_controller_joystick_right_event": "right joystick event",
        "byrobot_petrone_v2_controller_joystick_right_x": "right joystick horizontal",
        "byrobot_petrone_v2_controller_joystick_right_y": "right joystick vertical",
        "byrobot_petrone_v2_entryhw_count_transfer_reserved": "reserved data blocks",
        "byrobot_petrone_v2_drone_accel_x": "accel x",
        "byrobot_petrone_v2_drone_accel_y": "accel y",
        "byrobot_petrone_v2_drone_accel_z": "accel z",
        "byrobot_petrone_v2_drone_attitude_pitch": "attitude - pitch",
        "byrobot_petrone_v2_drone_attitude_roll": "attitude - roll",
        "byrobot_petrone_v2_drone_attitude_yaw": "attitude - yaw",
        "byrobot_petrone_v2_drone_control_double_accel_forward": "forward/backward",
        "byrobot_petrone_v2_drone_control_double_wheel": "direction",
        "byrobot_petrone_v2_drone_control_double_wheel_left": "turn left",
        "byrobot_petrone_v2_drone_control_double_wheel_right": "turn right",
        "byrobot_petrone_v2_drone_control_quad_pitch": "pitch",
        "byrobot_petrone_v2_drone_control_quad_pitch_backward": "backward",
        "byrobot_petrone_v2_drone_control_quad_pitch_forward": "foward",
        "byrobot_petrone_v2_drone_control_quad_roll": "roll",
        "byrobot_petrone_v2_drone_control_quad_roll_left": "left",
        "byrobot_petrone_v2_drone_control_quad_roll_right": "right",
        "byrobot_petrone_v2_drone_control_quad_throttle": "throttle",
        "byrobot_petrone_v2_drone_control_quad_throttle_down": "down",
        "byrobot_petrone_v2_drone_control_quad_throttle_up": "up",
        "byrobot_petrone_v2_drone_control_quad_yaw": "yaw",
        "byrobot_petrone_v2_drone_control_quad_yaw_left": "turn Left",
        "byrobot_petrone_v2_drone_control_quad_yaw_right": "turn Right",
        "byrobot_petrone_v2_drone_coordinate_local": "off (hard)",
        "byrobot_petrone_v2_drone_coordinate_world": "on (easy)",
        "byrobot_petrone_v2_drone_gyro_pitch": "angular speed - pitch",
        "byrobot_petrone_v2_drone_gyro_roll": "angular speed - roll",
        "byrobot_petrone_v2_drone_gyro_yaw": "angular speed - yaw",
        "byrobot_petrone_v2_drone_imageflow_positionX": "image flow X",
        "byrobot_petrone_v2_drone_imageflow_positionY": "image flow Y",
        "byrobot_petrone_v2_drone_irmessage": "IR data received",
        "byrobot_petrone_v2_drone_irmessage_direction": "IR received direction",
        "byrobot_petrone_v2_drone_irmessage_direction_front": "front",
        "byrobot_petrone_v2_drone_irmessage_direction_rear": "rear",
        "byrobot_petrone_v2_drone_light_color_arm": "arm",
        "byrobot_petrone_v2_drone_light_color_eye": "eye",
        "byrobot_petrone_v2_drone_light_manual_arm_blue": "arm - blue",
        "byrobot_petrone_v2_drone_light_manual_arm_green": "arm - green",
        "byrobot_petrone_v2_drone_light_manual_arm_red": "arm - red",
        "byrobot_petrone_v2_drone_light_manual_eye_blue": "eye - blue",
        "byrobot_petrone_v2_drone_light_manual_eye_green": "eye - green",
        "byrobot_petrone_v2_drone_light_manual_eye_red": "eye - red",
        "byrobot_petrone_v2_drone_motor_rotation_clockwise": "Clockwise",
        "byrobot_petrone_v2_drone_motor_rotation_counterclockwise": "Counterclockwise",
        "byrobot_petrone_v2_drone_pressure_pressure": "altitude above sea level",
        "byrobot_petrone_v2_drone_pressure_temperature": "temperature",
        "byrobot_petrone_v2_drone_range_bottom": "distance to bottom",
        "byrobot_petrone_v2_drone_state_battery": "battery",
        "byrobot_petrone_v2_drone_state_mode_coordinate": "coordinate",
        "byrobot_petrone_v2_drone_state_mode_drive": "drive Mode",
        "byrobot_petrone_v2_drone_state_mode_flight": "flight Mode",
        "byrobot_petrone_v2_drone_state_mode_system": "system Mode",
        "byrobot_petrone_v2_drone_state_mode_vehicle": "vehicle Mode",
        "byrobot_petrone_v2_drone_team": "team",
        "byrobot_petrone_v2_drone_team_blue": "blue",
        "byrobot_petrone_v2_drone_team_red": "red",
        "byrobot_petrone_v2_drone_vehicle_drive": "drive",
        "byrobot_petrone_v2_drone_vehicle_drive_fpv": "drive(FPV)",
        "byrobot_petrone_v2_drone_vehicle_flight": "drone(with guard)",
        "byrobot_petrone_v2_drone_vehicle_flight_fpv": "drone(FPV)",
        "byrobot_petrone_v2_drone_vehicle_flight_noguard": "drone(without guard)",
        "ROBOID_sensor_signal_strength_dbm": "signal strength (dBm)",
        "ROBOID_sensor_input_sa": "input Sa",
        "ROBOID_sensor_input_sb": "input Sb",
        "ROBOID_sensor_input_sc": "input Sc",
        "ROBOID_sensor_input_la": "input La",
        "ROBOID_sensor_input_lb": "input Lb",
        "ROBOID_sensor_input_lc": "input Lc",
        "ROBOID_sensor_step_count": "step count",
        "ROBOID_monitor_output_sa": "output Sa",
        "ROBOID_monitor_output_sb": "output Sb",
        "ROBOID_monitor_output_sc": "output Sc",
        "ROBOID_monitor_output_la": "output La",
        "ROBOID_monitor_output_lb": "output Lb",
        "ROBOID_monitor_output_lc": "output Lc",
        "ROBOID_monitor_output_mab": "output Mab",
        "ROBOID_monitor_output_mcd": "output Mcd",
        "ROBOID_logo_sky_direction": "logo in sky direction",
        "ROBOID_logo_earth_direction": "logo in earth direction",
        "ROBOID_power_switch_sky_direction": "power switch in sky direction",
        "ROBOID_power_switch_earth_direction": "power switch in earth direction",
        "ROBOID_port_s_sky_direction": "port S in sky direction",
        "ROBOID_port_s_earth_direction": "port S in earth direction",
        "ROBOID_speaker_internal": "internal speaker",
        "ROBOID_speaker_port_mab": "port Mab",
        "ROBOID_io_mode_makey": "makey",
        "ROBOID_io_mode_button": "button",
        "ROBOID_io_mode_digital_pull_up": "digital (pull up)",
        "ROBOID_io_mode_digital_pull_down": "digital (pull down)",
        "ROBOID_io_mode_analog": "analog",
        "ROBOID_io_mode_voltage": "voltage",
        "ROBOID_io_mode_pulse": "pulse",
        "ROBOID_io_mode_pulse_pull_up": "pulse (pull up)",
        "ROBOID_io_mode_pulse_pull_down": "pulse (pull down)",
        "ROBOID_io_mode_normal": "normal",
        "ROBOID_io_mode_power": "power",
        "ROBOID_io_port_high_current_mab": "high current Ma(-)b",
        "ROBOID_io_port_high_current_mcd": "high current Mc(-)d",
        "ROBOID_io_action_stop": "stop",
        "ROBOID_io_action_turn_off": "turn off",
        "ROBOID_range_integer": "without",
        "ROBOID_range_real": "with",
        "ROBOID_led_intensity_dark": "dark",
        "ROBOID_led_intensity_normal": "normal",
        "ROBOID_led_intensity_bright": "bright",
        "ROBOID_led_type_default": "default",
        "ROBOID_led_type_crgb": "-rgb",
        "ROBOID_led_type_crbg": "-rbg",
        "ROBOID_led_type_cgrb": "-grb",
        "ROBOID_led_type_cgbr": "-gbr",
        "ROBOID_led_type_cbrg": "-brg",
        "ROBOID_led_type_cbgr": "-bgr",
        "ROBOID_led_type_argb": "+rgb",
        "ROBOID_led_type_arbg": "+rbg",
        "ROBOID_led_type_agrb": "+grb",
        "ROBOID_led_type_agbr": "+gbr",
        "ROBOID_led_type_abrg": "+brg",
        "ROBOID_led_type_abgr": "+bgr",
        "ROBOID_neopixel_3_colors": "3 colors",
        "ROBOID_neopixel_6_colors": "6 colors",
        "ROBOID_neopixel_12_colors": "12 colors",
        "ROBOID_neopixel_red_green": "red to green",
        "ROBOID_neopixel_red_blue": "red to blue",
        "ROBOID_neopixel_red_white": "red to white",
        "ROBOID_neopixel_green_red": "green to red",
        "ROBOID_neopixel_green_blue": "green to blue",
        "ROBOID_neopixel_green_white": "green to white",
        "ROBOID_neopixel_blue_red": "blue to red",
        "ROBOID_neopixel_blue_green": "blue to green",
        "ROBOID_neopixel_blue_white": "blue to white",
        "ROBOID_neopixel_white_red": "white to red",
        "ROBOID_neopixel_white_green": "white to green",
        "ROBOID_neopixel_white_blue": "white to blue",
        "ROBOID_neopixel_red_black": "red getting darker",
        "ROBOID_neopixel_green_black": "green getting darker",
        "ROBOID_neopixel_blue_black": "blue getting darker",
        "ROBOID_neopixel_white_black": "white getting darker",
        "ROBOID_neopixel_black_red": "red getting brighter",
        "ROBOID_neopixel_black_green": "green getting brighter",
        "ROBOID_neopixel_black_blue": "blue getting brighter",
        "ROBOID_neopixel_black_white": "white getting brighter",
        "ROBOID_serial_string": "string",
        "ROBOID_serial_string_line": "string line",
        "ROBOID_serial_all": "all",
        "ROBOID_serial_until_comma": "until ,(comma)",
        "ROBOID_serial_until_colon": "until :(colon)",
        "ROBOID_serial_until_dollar": "until $",
        "ROBOID_serial_until_sharp": "until #",
        "ROBOID_serial_until_new_line": "until new line",
        "ROBOID_serial_port_wa_rb": "La(write) Lb(read)",
        "ROBOID_serial_port_ra_wb": "La(read) Lb(write)",
        "ROBOID_serial_port_wa": "La(write)",
        "ROBOID_serial_port_ra": "La(read)",
        "ROBOID_pid_10": "PID-10 ultrasonic sensor (HC-SR04+)",
        "ROBOID_pid_11_1": "PID-11-1 humidity/temperature sensor (DHT11)",
        "ROBOID_pid_11_2": "PID-11-2 humidity/temperature sensor (DHT21)",
        "ROBOID_pid_11_3": "PID-11-3 humidity/temperature sensor (DHT22)",
        "ROBOID_pid_12": "PID-12 temperature sensor (DS18B20)",
        "ROBOID_pid_13": "PID-13 joystick and button",
        "ROBOID_pid_14": "PID-14 dual joystick",
        "ROBOID_pid_15": "PID-15 IR transceiver",
        "ROBOID_pid_16": "PID-16 encoder",
        "ROBOID_pid_distance": "distance (cm)",
        "ROBOID_pid_temperature": "temperature (℃)",
        "ROBOID_pid_humidity": "humidity (%RH)",
        "ROBOID_pid_x1": "x1",
        "ROBOID_pid_y1": "y1",
        "ROBOID_pid_x2": "x2",
        "ROBOID_pid_y2": "y2",
        "ROBOID_pid_button1": "button1",
        "ROBOID_pid_button2": "button2",
        "ROBOID_pid_encoder": "encoder",
        "ROBOID_shape_square": "square",
        "ROBOID_shape_triangle": "triangle",
        "ROBOID_shape_diamond": "diamond",
        "ROBOID_shape_circle": "circle",
        "ROBOID_shape_x": "X",
        "ROBOID_shape_like": "like",
        "ROBOID_shape_dislike": "dislike",
        "ROBOID_shape_angry": "angry",
        "ROBOID_shape_open_mouth": "open mouth",
        "ROBOID_shape_close_mouth": "close mouth",
        "ROBOID_shape_walk1": "walk 1",
        "ROBOID_shape_walk2": "walk 2",
        "ROBOID_shape_heart": "heart",
        "ROBOID_shape_star": "star",
        "ROBOID_shape_airplane": "airplane",
        "ROBOID_shape_puppy": "puppy",
        "ROBOID_shape_butterfly": "butterfly",
        "ROBOID_shape_quarter_note": "quarter note",
        "ROBOID_shape_eighth_note": "eighth note",
        "ROBOID_shape_left_arrow": "left arrow",
        "ROBOID_shape_right_arrow": "right arrow",
        "ROBOID_shape_up_arrow": "up arrow",
        "ROBOID_shape_down_arrow": "down arrow",
        "ROBOID_hat_background": "background",
        "ROBOID_hat_all": "all",
        "ROBOID_hat_clear": "clear",
        "ROBOID_hat_show": "show",
        "ROBOID_hat_hide": "hide",
        "ROBOID_hat_clockwise": "clockwise",
        "ROBOID_hat_counterclockwise": "counterclockwise",
        "ROBOID_hat_left_right": "left-right",
        "ROBOID_hat_up_down": "up-down",
        "ROBOID_hat_auto": "auto",
        "ROBOID_hat_manual": "manual",
        "ROBOID_hat_other_sprite": "other sprite",
        "ROBOID_hat_left_wall": "left wall",
        "ROBOID_hat_right_wall": "right wall",
        "ROBOID_hat_top_wall": "top wall",
        "ROBOID_hat_bottom_wall": "bottom wall",
        "ROBOID_hat_any_wall": "any wall",
        "choco_move_step": "step",
        "choco_move_cm": "cm",
        "choco_trun_drgree": "degree",
        "choco_trun_round": "turns",
        "choco_toggle_on": "on",
        "choco_toggle_off": "off",
        "choco_direction_right": "right",
        "choco_direction_left": "left",
        "choco_direction_dual": "all(right,left)",
        "choco_color_off": "off",
        "choco_color_blue": "blue",
        "choco_color_red": "red",
        "choco_color_green": "green",
        "choco_color_yellow": "yellow",
        "choco_color_pink": "pink",
        "choco_color_bluegreen": "bluegreen",
        "choco_color_white": "white",
        "choco_sound_car": "car",
        "choco_sound_robot": "robot",
        "choco_sound_dog": "dog",
        "choco_sound_cat": "cat",
        "choco_sound_chicken": "chicken",
        "choco_sound_tiger": "tiger",
        "choco_sound_lion": "lion",
        "choco_sound_fart": "fart",
        "choco_sound_helicopter": "helicopter",
        "choco_sound_train": "train",
        "choco_sound_frog": "frog",
        "choco_sound_jjajan": "jjajan(effect)",
        "choco_sound_sheep": "sheep",
        "choco_sound_elephant": "elephant",
        "choco_sound_camel": "camel",
        "choco_sound_dolphin": "dolphin",
        "choco_sound_ttiyong": "ttiyong(effect)",
        "choco_sound_hello_parrot": "hello(parrot)",
        "choco_sound_hello_manga": "hello(manga)",
        "choco_sound_hello_man": "hello(man)",
        "choco_sound_ppong": "ppong(effect)",
        "choco_sound_buzzer": "buzzer(effect)",
        "choco_sound_ttalilalan": "ttalilalan(effect)",
        "choco_sound_ttattattatta": "ttattattatta(effect)",
        "choco_sound_laughter": "laughter",
        "choco_sound_magic": "magic(effect)",
        "choco_sound_woodpecker": "woodpecker",
        "choco_sound_bird": "bird",
        "choco_sound_burp": "burp",
        "choco_sound_hiccup": "hiccup",
        "choco_sound_doridori": "doridori",
        "choco_sound_firetruck": "fire truck",
        "choco_sound_police_car": "police car",
        "choco_sound_applause": "applause",
        "choco_sound_kiss": "kiss",
        "choco_sound_missile": "missile",
        "choco_sound_angry_duck": "angry duck",
        "choco_sound_fly": "fly",
        "choco_sound_ufo": "UFO",
        "choco_sound_fanfare": "fanfare",
        "choco_sound_sigh": "sigh",
        "choco_sound_alright": "alright",
        "choco_sound_genius": "genius",
        "choco_sound_no": "no",
        "choco_sound_wow": "wow",
        "choco_sound_yahoo": "yahoo",
        "CBX_LED_ON": "On",
        "CBX_LED_OFF": "Off",
        "CBX_DCM_FORWARD": "Forward",
        "CBX_DCM_BACKWARD": "Backward",
        "CBX_DCM_SPEED_MAX": "MaxSpeed",
        "CBX_DCM_SPEED_STOP": "Stop",
        "cp_moving_set_on": "on",
        "cp_moving_set_off": "off",
        "cp_moving_color_red": "red",
        "cp_moving_color_green": "green",
        "cp_moving_color_blue": "blue",
        "cp_moving_color_teal": "teal",
        "cp_moving_color_pink": "pink",
        "cp_moving_color_yellow": "yellow",
        "cp_moving_color_white": "white",
        "cp_moving_motor_left": "left",
        "cp_moving_motor_right": "right",
        "cp_moving_motor_forward": "forward",
        "cp_moving_motor_reverse": "reverse",
        "cp_moving_move_forward": "forward",
        "cp_moving_move_backward": "backward",
        "cp_moving_move_left": "left",
        "cp_moving_move_right": "right",
        "cp_moving_buzzer_hn": "half note",
        "cp_moving_buzzer_qn": "quarter note",
        "cp_moving_buzzer_en": "eighth note",
        "cp_moving_buzzer_sn": "sixteenth note",
        "cp_moving_buzzer_tn": "thirtysecond note",
        "cp_moving_buzzer_wn": "whole note",
        "cp_moving_joystick_center": "center",
        "cp_moving_joystick_down": "bottom",
        "cp_moving_joystick_left": "left",
        "cp_moving_joystick_left_down": "left bottom",
        "cp_moving_joystick_left_up": "left top",
        "cp_moving_joystick_right": "right",
        "cp_moving_joystick_right_down": "right bottom",
        "cp_moving_joystick_right_up": "right top",
        "cp_moving_joystick_up": "top",
        "cp_moving_button_red": "red",
        "cp_moving_button_blue": "blue",
        "cp_moving_ir_left": "left",
        "cp_moving_ir_right": "right",
        "GreenColor": "Green Color",
        "BlueColor": "Blue Color",
        "YellowColor": "Yellow Color",
        "RedColor": "Red Color",
        "GreenButton": "Green Button",
        "BlueButton": "Blue Button",
        "YellowButton": "Yellow Button",
        "RedButton": "Red Button",
        "hamster_note_c": "C",
        "hamster_note_c_sharp": "C♯(D♭)",
        "hamster_note_d": "D",
        "hamster_note_d_sharp": "D♯(E♭)",
        "hamster_note_e": "E",
        "hamster_note_f": "F",
        "hamster_note_f_sharp": "F♯(G♭)",
        "hamster_note_g": "G",
        "hamster_note_g_sharp": "G♯(A♭)",
        "hamster_note_a": "A",
        "hamster_note_a_sharp": "A♯(B♭)",
        "hamster_note_b": "B",
        "hamster_tilt_forward": "tilt forward",
        "hamster_tilt_backward": "tilt backward",
        "hamster_tilt_left": "tilt left",
        "hamster_tilt_right": "tilt right",
        "hamster_tilt_flip": "tilt flip",
        "hamster_tilt_not": "not tilt",
        "hamster_battery_normal": "battery normal",
        "hamster_battery_low": "battery low",
        "hamster_battery_empty": "battery empty",
        "hamster_open_gripper": "open",
        "hamster_close_gripper": "close",
        "hamster_s_color_black": "black",
        "hamster_s_color_blue": "blue",
        "hamster_s_color_green": "green",
        "hamster_s_color_orange": "orange",
        "hamster_s_color_purple": "purple",
        "hamster_s_color_red": "red",
        "hamster_s_color_sky_blue": "sky blue",
        "hamster_s_color_violet": "violet",
        "hamster_s_color_white": "white",
        "hamster_s_color_yellow": "yellow",
        "hamster_s_left": "left",
        "hamster_s_right": "right",
        "hamster_s_both": "both",
        "hamster_s_note_c": "C",
        "hamster_s_note_c_sharp": "C♯(D♭)",
        "hamster_s_note_d": "D",
        "hamster_s_note_d_sharp": "D♯(E♭)",
        "hamster_s_note_e": "E",
        "hamster_s_note_f": "F",
        "hamster_s_note_f_sharp": "F♯(G♭)",
        "hamster_s_note_g": "G",
        "hamster_s_note_g_sharp": "G♯(A♭)",
        "hamster_s_note_a": "A",
        "hamster_s_note_a_sharp": "A♯(B♭)",
        "hamster_s_note_b": "B",
        "hamster_s_port_a": "A",
        "hamster_s_port_b": "B",
        "hamster_s_port_ab": "A and B",
        "hamster_s_tilt_forward": "tilt forward",
        "hamster_s_tilt_backward": "tilt backward",
        "hamster_s_tilt_left": "tilt left",
        "hamster_s_tilt_right": "tilt right",
        "hamster_s_tilt_flip": "tilt flip",
        "hamster_s_tilt_not": "not tilt",
        "hamster_s_tap": "tap",
        "hamster_s_free_fall": "free fall",
        "hamster_s_battery_normal": "battery normal",
        "hamster_s_battery_low": "battery low",
        "hamster_s_battery_empty": "battery empty",
        "hamster_s_forward": "forward",
        "hamster_s_backward": "backward",
        "hamster_s_front": "front",
        "hamster_s_rear": "rear",
        "hamster_s_left_pen": "left pen",
        "hamster_s_right_pen": "right pen",
        "hamster_s_left_wheel": "left wheel",
        "hamster_s_right_wheel": "right wheel",
        "hamster_s_robot": "robot",
        "hamster_s_gain_default": "default",
        "hamster_s_sensor_acceleration_x": "x acceleration",
        "hamster_s_sensor_acceleration_y": "y acceleration",
        "hamster_s_sensor_acceleration_z": "z acceleration",
        "hamster_s_sensor_input_a": "input A",
        "hamster_s_sensor_input_b": "input B",
        "hamster_s_sensor_left_floor": "left floor",
        "hamster_s_sensor_left_proximity": "left proximity",
        "hamster_s_sensor_light": "light",
        "hamster_s_sensor_right_floor": "right floor",
        "hamster_s_sensor_right_proximity": "right proximity",
        "hamster_s_sensor_signal_strength": "signal strength",
        "hamster_s_sensor_temperature": "temperature",
        "hamster_s_buzzer": "buzzer",
        "hamster_s_left_led": "left LED",
        "hamster_s_note": "note",
        "hamster_s_output_a": "output A",
        "hamster_s_output_b": "output B",
        "hamster_s_right_led": "right LED",
        "hamster_s_sound_angry": "angry",
        "hamster_s_sound_beep": "beep",
        "hamster_s_sound_birthday": "birthday",
        "hamster_s_sound_chop": "chop",
        "hamster_s_sound_dibidibidip": "dibidibidip",
        "hamster_s_sound_engine": "engine",
        "hamster_s_sound_good_job": "good job",
        "hamster_s_sound_happy": "happy",
        "hamster_s_sound_march": "march",
        "hamster_s_sound_noise": "noise",
        "hamster_s_sound_random_beep": "random beep",
        "hamster_s_sound_robot": "robot",
        "hamster_s_sound_sad": "sad",
        "hamster_s_sound_siren": "siren",
        "hamster_s_sound_sleep": "sleep",
        "hamster_s_unit_cm": "cm",
        "hamster_s_unit_deg": "degrees",
        "hamster_s_unit_pulse": "pulses",
        "hamster_s_unit_sec": "seconds",
        "hamster_s_analog_input": "analog input",
        "hamster_s_digital_input": "digital input",
        "hamster_s_digital_input_pull_down": "digital input (pull down)",
        "hamster_s_digital_input_pull_up": "digital input (pull up)",
        "hamster_s_digital_output": "digital output",
        "hamster_s_pwm_output": "pwm output",
        "hamster_s_servo_output": "servo output",
        "hamster_s_voltage_input": "voltage input",
        "hamster_s_open_gripper": "open",
        "hamster_s_close_gripper": "close",
        "hamster_s_serial_string": "string",
        "hamster_s_serial_string_line": "string line",
        "hamster_s_serial_all": "all",
        "hamster_s_serial_until_new_line": "until new line",
        "hamster_s_serial_until_comma": "until ,(comma)",
        "hamster_s_serial_until_colon": "until :(colon)",
        "hamster_s_serial_until_dollar": "until $",
        "hamster_s_serial_until_sharp": "until #",
        "hamster_s_serial_input": "serial input",
        "On_block": "On(HIGH, 5V)",
        "Off_block": "Off(LOW, 0V)",
        "AllOn_block": "ALL ON",
        "AllOff_block": "ALL OFF",
        "RGB_red": "Red",
        "RGB_blue": "Blue",
        "RGB_green": "Green",
        "RGB_white": "White",
        "RGB_skyblue": "Sky blue",
        "RGB_yellow": "Yellow",
        "RGB_purple": "Purple",
        "RGB_off": "Off",
        "kamibot_toggle_on": "on",
        "kamibot_toggle_off": "off",
        "kamibot_color_red": "red",
        "kamibot_color_pink": "pink",
        "kamibot_color_blue": "blue",
        "kamibot_color_sky": "sky",
        "kamibot_color_green": "green",
        "kamibot_color_yellow": "yellow",
        "kamibot_color_white": "white",
        "microbit_ext_acc_xaxis": "x",
        "microbit_ext_acc_yaxis": "y",
        "microbit_ext_acc_zaxis": "z",
        "microbit_ext_acc_strength": "Strength",
        "microbit_ext_tilt_right": "Right",
        "microbit_ext_tilt_left": "Left",
        "microbit_ext_tilt_rear": "Rear",
        "microbit_ext_tilt_front": "Front",
        "microbit_ext_sensor_temperature": "Temperature",
        "microbit_ext_sensor_compass": "Compass",
        "microbit_ext_sensor_light": "Light",
        "microbit_ext_tone_high": "HIGH",
        "microbit_ext_tone_middle": "MIDDLE",
        "microbit_ext_tone_low": "Low",
        "microbit_ext_tone_b": "B",
        "microbit_ext_tone_a_sharp": "A#",
        "microbit_ext_tone_a": "A",
        "microbit_ext_tone_g_sharp": "G#",
        "microbit_ext_tone_g": "G",
        "microbit_ext_tone_f_sharp": "F#",
        "microbit_ext_tone_f": "F",
        "microbit_ext_tone_e": "E",
        "microbit_ext_tone_d_sharp": "D#",
        "microbit_ext_tone_d": "D",
        "microbit_ext_tone_c_sharp": "C#",
        "microbit_ext_tone_c": "C",
        "microbit_ext_image_target": "Target",
        "microbit_ext_image_rake": "Rake",
        "microbit_ext_image_eighth_note": "Eighth note",
        "microbit_ext_image_quarter_note": "Quarter note",
        "microbit_ext_image_ox": "Ox",
        "microbit_ext_image_rabbit": "Rabbit",
        "microbit_ext_image_snake": "Snake",
        "microbit_ext_image_umbrella": "Umbrella",
        "microbit_ext_image_skull": "Skull",
        "microbit_ext_image_giraffe": "Giraffe",
        "microbit_ext_image_sword": "Sword",
        "microbit_ext_image_ghost": "Ghost",
        "microbit_ext_image_stickman": "Stickfigure",
        "microbit_ext_image_butterfly": "Butterfly",
        "microbit_ext_image_turtle": "Turtle",
        "microbit_ext_image_house": "House",
        "microbit_ext_image_duck": "Duck",
        "microbit_ext_image_rollerskate": "Rollerskate",
        "microbit_ext_image_tshirt": "T-shirt",
        "microbit_ext_image_scissors": "Scissors",
        "microbit_ext_image_small_square": "Small Square",
        "microbit_ext_image_square": "Square",
        "microbit_ext_image_small_diamond": "Small Diamond",
        "microbit_ext_image_diamond": "Diamond",
        "microbit_ext_image_chessboard": "Chessboard",
        "microbit_ext_image_left_triangle": "Left Triangle",
        "microbit_ext_image_triangle": "Triangle",
        "microbit_ext_image_no": "Nope",
        "microbit_ext_image_yes": "Yes",
        "microbit_ext_image_not_good": "Not Good",
        "microbit_ext_image_fantastic": "fantastic",
        "microbit_ext_image_fool": "Fool",
        "microbit_ext_image_surprised": "Surpriesd",
        "microbit_ext_image_sleepy": "Sleepy",
        "microbit_ext_image_angry": "Angry",
        "microbit_ext_image_confused": "Confused",
        "microbit_ext_image_sadness": "Sadness",
        "microbit_ext_image_happiness": "Happiness",
        "microbit_ext_image_small_heart": "Small Heart",
        "microbit_ext_image_heart": "Heart",
        "microbit_ext_led_toggle_on": "On",
        "microbit_ext_led_toggle_off": "Off",
        "microbit_ext_led_toggle_toggle": "Reverse",
        "microbit_ext_gesture_shake": "Shake",
        "microbit_ext_gesture_portrait_top": "Portrait Top",
        "microbit_ext_gesture_portrait_bottom": "Portrait Bottom",
        "microbit_ext_gesture_portrait_right": "Portrait Right",
        "microbit_ext_gesture_portrait_left": "Portrait Left",
        "microbit_ext_gesture_horizontal_top": "Horizontal Top",
        "microbit_ext_gesture_horizontal_bottom": "Horizontal Bottom",
        "microbit_ext_gesture_horizontal_right": "Horizontal Right",
        "microbit_ext_gesture_horizontal_left": "Horizontal Left",
        "neobot_port_1": "port1",
        "neobot_port_2": "port2",
        "neobot_port_3": "port3",
        "neobot_port_4": "port4",
        "neobot_port_bat": "battery",
        "neobot_port_remot": "remote",
        "neobot_color_white": "white",
        "neobot_color_red": "red",
        "neobot_color_yellow": "yellow",
        "neobot_color_green": "green",
        "neobot_color_blue": "blue",
        "neobot_direction_forward": "forward",
        "neobot_direction_backward": "backward",
        "neobot_sound_silent": "silent",
        "neobot_sound_do": "Do",
        "neobot_sound_do_shop": "Do#",
        "neobot_sound_re": "Re",
        "neobot_sound_re_shop": "Re#",
        "neobot_sound_mi": "Mi",
        "neobot_sound_fa": "Fa",
        "neobot_sound_fa_shop": "Fa#",
        "neobot_sound_so": "So",
        "neobot_sound_so_shop": "So#",
        "neobot_sound_la": "La",
        "neobot_sound_la_shop": "La#",
        "neobot_sound_ti": "Ti",
        "neobot_sound_half_note": "a half note",
        "neobot_sound_quarter_note": "a quarter note",
        "neobot_sound_eighth_note": "a eighth note",
        "neobot_sound_sixteenth_note": "a sixteenth note",
        "neobot_sensor_infrared": "IR sensor",
        "neobot_sensor_light": "light sensor",
        "neobot_sensor_sound": "sound sensor",
        "neobot_compare_symbol1": "＝",
        "neobot_compare_symbol2": "＞",
        "neobot_compare_symbol3": "＜",
        "neobot_compare_symbol4": "≥",
        "neobot_compare_symbol5": "≤",
        "neobot_remote_btn_a": "A",
        "neobot_remote_btn_b": "B",
        "neobot_remote_btn_c": "C",
        "neobot_remote_btn_d": "D",
        "neobot_remote_btn_1": "1",
        "neobot_remote_btn_2": "2",
        "neobot_remote_btn_3": "3",
        "neobot_remote_btn_4": "4",
        "neobot_remote_btn_up": "▲",
        "neobot_remote_btn_down": "▼",
        "neobot_remote_btn_left": "◀",
        "neobot_remote_btn_right": "▶",
        "neobot_duration_cont": "constantly",
        "neobot_duration_1s": "1 second",
        "neobot_duration_2s": "2 seconds",
        "neobot_duration_3s": "3 seconds",
        "neobot_duration_4s": "4 seconds",
        "neobot_duration_5s": "5 seconds",
        "neobot_duration_6s": "6 seconds",
        "neobot_duration_7s": "7 seconds",
        "neobot_duration_8s": "8 seconds",
        "neobot_duration_9s": "9 seconds",
        "neobot_motor_both": "both",
        "neobot_motor_left": "left",
        "neobot_motor_right": "right",
        "neobot_motor_move_forward": "go forward",
        "neobot_motor_move_backward": "go backward",
        "neobot_motor_move_left": "turn Left",
        "neobot_motor_move_right": "turn Right",
        "neobot_motor_move_stop": "stop",
        "neobot_servo_dir_1": "forward",
        "neobot_servo_dir_2": "backward",
        "neobot_percent_10": "10% speed",
        "neobot_percent_20": "20% speed",
        "neobot_percent_30": "30% speed",
        "neobot_percent_40": "40% speed",
        "neobot_percent_50": "50% speed",
        "neobot_percent_60": "60% speed",
        "neobot_percent_70": "70% speed",
        "neobot_percent_80": "80% speed",
        "neobot_percent_90": "90% speed",
        "neobot_percent_100": "100% speed",
        "neobot_degree_0": "0",
        "neobot_degree_5": "5",
        "neobot_degree_10": "10",
        "neobot_degree_15": "15",
        "neobot_degree_20": "20",
        "neobot_degree_25": "25",
        "neobot_degree_30": "30",
        "neobot_degree_35": "35",
        "neobot_degree_40": "40",
        "neobot_degree_45": "45",
        "neobot_degree_50": "50",
        "neobot_degree_55": "55",
        "neobot_degree_60": "60",
        "neobot_degree_65": "65",
        "neobot_degree_70": "70",
        "neobot_degree_75": "75",
        "neobot_degree_80": "80",
        "neobot_degree_85": "85",
        "neobot_degree_90": "90",
        "neobot_degree_95": "95",
        "neobot_degree_100": "100",
        "neobot_degree_105": "105",
        "neobot_degree_110": "110",
        "neobot_degree_115": "115",
        "neobot_degree_120": "120",
        "neobot_degree_125": "125",
        "neobot_degree_130": "130",
        "neobot_degree_135": "135",
        "neobot_degree_140": "140",
        "neobot_degree_145": "145",
        "neobot_degree_150": "150",
        "neobot_degree_155": "155",
        "neobot_degree_160": "160",
        "neobot_degree_165": "165",
        "neobot_degree_170": "170",
        "neobot_degree_175": "175",
        "neobot_degree_180": "180",
        "neobot_axis_x": "X",
        "neobot_axis_y": "Y",
        "neobot_joystick_move_1": "From back to front",
        "neobot_joystick_move_2": "From bottom up",
        "neobot_joystick_move_3": "Half turn down",
        "neobot_joystick_move_4": "One rotation",
        "neobot_joystick_dir_right": "right",
        "neobot_joystick_dir_left": "left",
        "neobot_joystick_dir_up": "up",
        "neobot_joystick_dir_down": "down",
        "neobot_button_a": "A",
        "neobot_button_b": "B",
        "neobot_button_c": "C",
        "neobot_gyro_dir_left": "left",
        "neobot_gyro_dir_right": "right",
        "neobot_gyro_dir_front": "forward",
        "neobot_gyro_dir_rear": "backward",
        "neobot_joystick_x": "joystick X",
        "neobot_joystick_y": "joystick Y",
        "neobot_gyro_x": "gyro sensor X",
        "neobot_gyro_y": "gyro sensor Y",
        "neobot_compare_left_bigger": ">",
        "neobot_compare_equal": "=",
        "neobot_compare_right_bigger": "<",
        "neobot_joystick": "joystick",
        "neobot_gyro": "gyro sensor",
        "neobot_realtime": "in real time",
        "neobot_from_distance": "relative to distance",
        "neobot_joystick_coord": "joystick position",
        "neobot_gyro_coord": "gyro sensor position",
        "neobot_rb_port_1": "port 1",
        "neobot_rb_port_2": "port 2",
        "neobot_rb_port_3": "port 3",
        "neobot_rb_port_4": "port 4",
        "neobot_rb_port_top": "top port",
        "neobot_rb_port_bottom": "bottom port",
        "neobot_rb_top_face": "top face",
        "neobot_rb_bottom_face": "bottom face",
        "neobot_rb_motor_both": "both",
        "neobot_rb_motor_left": "left",
        "neobot_rb_motor_right": "right",
        "neobot_rb_motor_dir_front": "forward",
        "neobot_rb_motor_dir_rear": "backward",
        "neobot_rb_motor_dir_left": "left",
        "neobot_rb_motor_dir_right": "right",
        "neobot_rb_motor_dir_stand_left": "left in place",
        "neobot_rb_motor_dir_stand_right": "right in place",
        "neobot_rb_motor_move_forward": "go forward",
        "neobot_rb_motor_move_backward": "go backward",
        "neobot_rb_motor_move_left": "turn Left",
        "neobot_rb_motor_move_right": "turn Right",
        "neobot_rb_motor_move_stop": "stop",
        "neobot_rb_remote_btn_a": "A",
        "neobot_rb_remote_btn_b": "B",
        "neobot_rb_remote_btn_c": "C",
        "neobot_rb_remote_btn_d": "D",
        "neobot_rb_remote_btn_1": "1",
        "neobot_rb_remote_btn_2": "2",
        "neobot_rb_remote_btn_3": "3",
        "neobot_rb_remote_btn_4": "4",
        "neobot_rb_remote_btn_up": "▲",
        "neobot_rb_remote_btn_down": "▼",
        "neobot_rb_remote_btn_left": "◀",
        "neobot_rb_remote_btn_right": "▶",
        "neobot_rb_servo_dir_1": "Clockwise",
        "neobot_rb_servo_dir_2": "Counterclockwise",
        "neobot_st_port_1": "port1",
        "neobot_st_port_2": "port2",
        "neobot_st_port_3": "port3",
        "neobot_st_port_4": "port4",
        "neobot_st_color_white": "white",
        "neobot_st_color_red": "red",
        "neobot_st_color_yellow": "yellow",
        "neobot_st_color_green": "green",
        "neobot_st_color_blue": "blue",
        "neobot_st_sensor_infrared": "IR sensor",
        "neobot_st_sensor_light": "light sensor",
        "neobot_st_sensor_sound": "sound sensor",
        "neobot_st_compare_symbol1": "＝",
        "neobot_st_compare_symbol2": "＞",
        "neobot_st_compare_symbol3": "＜",
        "neobot_st_compare_symbol4": "≥",
        "neobot_st_compare_symbol5": "≤",
        "PALMKIT_idx0": "1",
        "PALMKIT_idx1": "2",
        "PALMKIT_idx2": "3",
        "PALMKIT_idx3": "4",
        "PALMKIT_ir": "IR",
        "PALMKIT_pot": "Potentiometer",
        "PALMKIT_button": "Button",
        "PALMKIT_cds": "CDS",
        "PALMKIT_led_on": "On",
        "PALMKIT_led_off": "Off",
        "PALMKIT_buzzer_note_c": "C",
        "PALMKIT_buzzer_note_cs": "C#",
        "PALMKIT_buzzer_note_d": "D",
        "PALMKIT_buzzer_note_ds": "D#",
        "PALMKIT_buzzer_note_e": "E",
        "PALMKIT_buzzer_note_f": "F",
        "PALMKIT_buzzer_note_fs": "F#",
        "PALMKIT_buzzer_note_g": "G",
        "PALMKIT_buzzer_note_gs": "G#",
        "PALMKIT_buzzer_note_a": "A",
        "PALMKIT_buzzer_note_as": "A#",
        "PALMKIT_buzzer_note_b": "B",
        "PALMKIT_motor_cw": "Clockwise",
        "PALMKIT_motor_ccw": "Counter clockwise",
        "pingpong_right": "right",
        "pingpong_left": "left",
        "pingpong_rotate_cw": "clockwise",
        "pingpong_rotate_ccw": "counter clockwise",
        "pingpong_sensor_proximity": "proximity",
        "pingpong_sensor_ain": "ain",
        "pingpong_dot_on": "ON",
        "pingpong_dot_off": "OFF",
        "pingpong_opts_cube_tiltDir": [
            ["circle", "F_CIRCLE"],
            ["triangle", "B_TRIANGLE"],
            ["rectangle", "L_RECTANGLE"],
            ["star", "R_STAR"]
        ],
        "pingpong_opts_cube_dir6": [
            ["rectangle", "DF_RECTANGLE"],
            ["star", "B_STAR"],
            ["triangle", "L_TRIANGLE"],
            ["circle", "R_CIRCLE"],
            ["heart", "U_HEART"],
            ["none", "D_NONE"]
        ],
        "pingpong_opts_music_notes": [
            ["La  (A3)", 45],
            ["La# (A3#)", 46],
            ["Ti  (B3)", 47],
            ["Do  (C4)", 48],
            ["Do# (C4#)", 49],
            ["Re  (D4)", 50],
            ["Re# (D4#)", 51],
            ["Mi  (E4)", 52],
            ["Fa  (F4)", 53],
            ["Fa# (F4#)", 54],
            ["Sol (G4)", 55],
            ["Sol#(G4#)", 56],
            ["La  (A4)", 57],
            ["La# (A4#)", 58],
            ["Ti  (B4)", 59],
            ["Do  (C5)", 60],
            ["Do# (C5#)", 61],
            ["Re  (D5)", 62],
            ["Re# (D5#)", 63],
            ["Mi  (E5)", 64],
            ["Fa  (F5)", 65],
            ["Fa# (F5#)", 66],
            ["Sol (G5)", 67],
            ["Sol#(G5#)", 68],
            ["La  (A5)", 69],
            ["La# (A5#)", 70],
            ["Ti  (B5)", 71],
            ["Do  (C6)", 72]
        ],
        "pingpong_g2_cube_id": [
            ["1st", 0],
            ["2nd", 1]
        ],
        "pingpong_g2_cube_all": [
            ["1st", 0],
            ["2nd", 1],
            ["All", -1]
        ],
        "pingpong_g3_cube_id": [
            ["1st", 0],
            ["2nd", 1],
            ["3rd", 2]
        ],
        "pingpong_g3_cube_all": [
            ["1st", 0],
            ["2nd", 1],
            ["3rd", 2],
            ["All", -1]
        ],
        "pingpong_g4_cube_id": [
            ["1st", 0],
            ["2nd", 1],
            ["3rd", 2],
            ["4th", 3]
        ],
        "pingpong_g4_cube_all": [
            ["1st", 0],
            ["2nd", 1],
            ["3rd", 2],
            ["4th", 3],
            ["All", -1]
        ],
        "plrun_set_on": "on",
        "plrun_set_off": "off",
        "plrun_color_red": "red",
        "plrun_color_green": "green",
        "plrun_color_blue": "blue",
        "plrun_color_teal": "teal",
        "plrun_color_pink": "pink",
        "plrun_color_yellow": "yellow",
        "plrun_color_white": "white",
        "plrun_motor_left": "left",
        "plrun_motor_right": "right",
        "plrun_motor_forward": "forward",
        "plrun_motor_reverse": "reverse",
        "plrun_move_forward": "forward",
        "plrun_move_backward": "backward",
        "plrun_move_left": "left",
        "plrun_move_right": "right",
        "plrun_buzzer_hn": "half note",
        "plrun_buzzer_qn": "quarter note",
        "plrun_buzzer_en": "eighth note",
        "plrun_buzzer_sn": "sixteenth note",
        "plrun_buzzer_tn": "thirtysecond note",
        "plrun_buzzer_wn": "whole note",
        "plrun_joystick_center": "center",
        "plrun_joystick_down": "bottom",
        "plrun_joystick_left": "left",
        "plrun_joystick_left_down": "left bottom",
        "plrun_joystick_left_up": "left top",
        "plrun_joystick_right": "right",
        "plrun_joystick_right_down": "right bottom",
        "plrun_joystick_right_up": "right top",
        "plrun_joystick_up": "top",
        "plrun_button_red": "red",
        "plrun_button_blue": "blue",
        "turtle_acceleration_x": "x acceleration",
        "turtle_acceleration_y": "y acceleration",
        "turtle_acceleration_z": "z acceleration",
        "turtle_back": "back",
        "turtle_both": "both",
        "turtle_button": "button",
        "turtle_buzzer": "buzzer",
        "turtle_clicked": "clicked",
        "turtle_color_any": "any color",
        "turtle_color_black": "black",
        "turtle_color_blue": "blue",
        "turtle_color_green": "green",
        "turtle_color_number": "color number",
        "turtle_color_orange": "orange",
        "turtle_color_pattern": "color pattern",
        "turtle_color_purple": "purple",
        "turtle_color_red": "red",
        "turtle_color_sky_blue": "sky blue",
        "turtle_color_violet": "violet",
        "turtle_color_white": "white",
        "turtle_color_yellow": "yellow",
        "turtle_double_clicked": "double-clicked",
        "turtle_floor": "floor",
        "turtle_head": "head",
        "turtle_head_color": "head color",
        "turtle_left": "left",
        "turtle_left_wheel": "left wheel",
        "turtle_long_pressed": "long-pressed",
        "turtle_note": "note",
        "turtle_right": "right",
        "turtle_right_wheel": "right wheel",
        "turtle_sound_beep": "beep",
        "turtle_sound_birthday": "birthday",
        "turtle_sound_dibidibidip": "dibidibidip",
        "turtle_sound_engine": "engine",
        "turtle_sound_good_job": "good job",
        "turtle_sound_march": "march",
        "turtle_sound_random_beep": "random beep",
        "turtle_sound_robot": "robot",
        "turtle_sound_siren": "siren",
        "turtle_tail": "tail",
        "turtle_unit_cm": "cm",
        "turtle_unit_deg": "degrees",
        "turtle_unit_pulse": "pulses",
        "turtle_unit_sec": "seconds",
        "turtle_note_c": "C",
        "turtle_note_c_sharp": "C♯(D♭)",
        "turtle_note_d": "D",
        "turtle_note_d_sharp": "D♯(E♭)",
        "turtle_note_e": "E",
        "turtle_note_f": "F",
        "turtle_note_f_sharp": "F♯(G♭)",
        "turtle_note_g": "G",
        "turtle_note_g_sharp": "G♯(A♭)",
        "turtle_note_a": "A",
        "turtle_note_a_sharp": "A♯(B♭)",
        "turtle_note_b": "B",
        "turtle_tilt_forward": "tilt forward",
        "turtle_tilt_backward": "tilt backward",
        "turtle_tilt_left": "tilt left",
        "turtle_tilt_right": "tilt right",
        "turtle_tilt_flip": "tilt flip",
        "turtle_tilt_not": "not tilt",
        "turtle_battery_normal": "battery normal",
        "turtle_battery_low": "battery low",
        "turtle_battery_empty": "battery empty",
        "ROBOID_cheese_stick": "Cheese Stick",
        "roborobo_get_temperutre": "Temperature Sensor",
        "roborobo_get_joystick_x": "JoystickX",
        "roborobo_get_joystick_y": "JoystickY",
        "roborobo_get_light": "Light Sensor",
        "roborobo_get_dial": "Dial",
        "roborobo_get_keypad_a": "A Keypad(key number)",
        "roborobo_get_ultrasonic": "Ultrasonic Sensor[cm]",
        "ROBOTAMICODING_DCM_CLOCKWISE": "CW",
        "ROBOTAMICODING_DCM_COUNTERCLOCKWISE": "CCW",
        "ROBOTAMICODING_ROBOT_FORWARD": "go forward",
        "ROBOTAMICODING_ROBOT_BACKWARD": "go backward",
        "ROBOTAMICODING_ROBOT_LEFT": "turn left",
        "ROBOTAMICODING_ROBOT_RIGHT": "turn right",
        "ROBOTAMICODING_ROBOT_GOLEFT": "move forward to the left",
        "ROBOTAMICODING_ROBOT_GORIGHT": "move forward to the right",
        "ROBOTAMICODING_ROBOT_TURNLEFT": "turn left in place",
        "ROBOTAMICODING_ROBOT_TURNRIGHT": "turn right in place",
        "MT1direction": "MT1 Direction of rotation",
        "MT2direction": "MT2 Direction of rotation",
        "SM3angle": "SM3 angle",
        "SM2angle": "SM2 angle",
        "SM13angle": "SM1 angle",
        "Yellow": "Yellow",
        "One": "Number 1",
        "Two": "Number 2",
        "Three": "Number 3",
        "Four": "Number 4",
        "Five": "Number 5",
        "Six": "Number 6",
        "Seven": "Number 7",
        "Eight": "Number 8",
        "Clockwise": "Forward",
        "Counterclockwise": "Backward",
        "Stopmotor": "Stop",
        "Slowermotor": "Very slow",
        "Slowmotor": "Slow",
        "Normalmotor": "Normal",
        "Fastmotor": "Fast",
        "Fastermotor": "Very fast",
        "Slowservo": "Slow",
        "Normalservo": "Normal",
        "Fastservo": "Fast",
        "On": "On",
        "Off": "Off",
        "truetruebot_on": "on",
        "truetruebot_off": "off",
        "truetruebot_front_near_right": "Proxi Right",
        "truetruebot_front_near_left": "Proxi Left",
        "truetruebot_front_color": "Color sensor (Card)",
        "truetruebot_bottom_color": "Color sensor (Bottom)",
        "truetruebot_head_color_white": "White",
        "truetruebot_head_color_red": "Red",
        "truetruebot_head_color_green": "Green",
        "truetruebot_head_color_blue": "Blue",
        "truetruebot_head_color_cyan": "Cyan",
        "truetruebot_head_color_magenta": "Magenta",
        "truetruebot_head_color_yellow": "Yellow",
        "truetruebot_head_color_off": "off",
        "truetruebot_move_forward": "forward",
        "truetruebot_move_backward": "backward",
        "truetruebot_move_right": "right",
        "truetruebot_move_left": "left",
        "truetruebot_right": "right",
        "truetruebot_left": "left",
        "truetruebot_Xaxis": "X-axis",
        "truetruebot_Yaxis": "Y-axis",
        "truetruebot_Zaxis": "Z-axis",
        "truetruebot_Tilt": "Tilt",
        "truetruebot_ColorKey": "ColorKey",
        "uglybot_joystick_lr": "조이스틱좌우",
        "uglybot_yoystick_tb": "조이스틱앞뒤",
        "uglybot_gyro_lr": "기울기센서좌우",
        "uglybot_gyro_tb": "기울기센서앞뒤",
        "uglybot_sound2": "소리센서",
        "uglybot_photo2": "조도센서",
        "uglybot_exboard": "확장보드",
        "uglybot_button2": "버튼",
        "uglybot_irleft": "왼쪽 적외선센서",
        "uglybot_irmid": "중간 적외선센서",
        "uglybot_irright": "오른쪽 적외선센서",
        "uglybot_ultrsonic2": "초음파센서",
        "ROBOID_sensor_touch": "touch",
        "ROBOID_monitor_left_head_led": "left head led",
        "ROBOID_monitor_right_head_led": "right head led",
        "ROBOID_monitor_left_tail_led": "left tail led",
        "ROBOID_monitor_right_tail_led": "right tail led",
        "ROBOID_gesture_forward": "forward",
        "ROBOID_gesture_backward": "backward",
        "ROBOID_gesture_leftward": "leftward",
        "ROBOID_gesture_rightward": "rightward",
        "ROBOID_gesture_near": "near",
        "ROBOID_gesture_far": "far",
        "ROBOID_gesture_click": "click",
        "ROBOID_gesture_long_touch": "long touch",
        "ROBOID_battery_state_normal": "normal",
        "ROBOID_battery_state_low": "low",
        "ROBOID_battery_state_empty": "empty",
        "ROBOID_sensor_front_proximity": "front proximity",
        "ROBOID_sensor_rear_proximity": "rear proximity",
        "ROBOID_sensor_gesture": "gesture",
        "ROBOID_gesture": "gesture",
        "ROBOID_color": "color",
        "ROBOID_all": "all",
        "ROBOID_led_left_head": "left head",
        "ROBOID_led_right_head": "right head",
        "ROBOID_led_left_tail": "left tail",
        "ROBOID_led_right_tail": "right tail",
        "width": "width",
        "height": "height"
    },
    "video_body_coord_params": {
        "left_eye": "left eye",
        "right_eye": "right eye",
        "nose": "nose",
        "left_mouth": "left corner of lips",
        "right_mouth": "right corner of lips",
        "upper_lip": "upper lip",
        "lower_lip": "lower lip",
        "face": "face",
        "neck": "neck",
        "left_ear": "left ear",
        "right_ear": "right ear",
        "left_shoulder": "left shoulder",
        "left_elbow": "left elbow",
        "left_wrist": "left wrist",
        "left_hip": "left hip",
        "left_knee": "left knee",
        "left_ankle": "left ankle",
        "right_shoulder": "right shoulder",
        "right_elbow": "right elbow",
        "right_wrist": "right wrist",
        "right_hip": "right hip",
        "right_knee": "right knee",
        "right_ankle": "right ankle"
    },
    "video_gender": { "male": "Male", "female": "Female" },
    "video_emotion_params": {
        "angry": "Anger",
        "disgusted": "Disgust",
        "fearful": "Fearful",
        "happy": "Happiness",
        "neutral": "Neutral",
        "sad": "Sadness",
        "surprised": "Surprised",
        "disgust": "Disgust",
        "fear": "Fearful",
        "surprise": "Surprised"
    },
    "video_object_params": {
        "person": "Person",
        "bicycle": "Bicycle",
        "car": "Car",
        "motorcycle": "Motorcycle",
        "airplane": "Airplane",
        "bus": "Bus",
        "train": "Train",
        "truck": "Truck",
        "boat": "Boat",
        "traffic light": "Traffic light",
        "fire hydrant": "Fire hydrant",
        "stop sign": "Stop sign",
        "parking meter": "Parking meter",
        "bench": "Bench",
        "bird": "Bird",
        "cat": "Cat",
        "dog": "Dog",
        "horse": "Horse",
        "sheep": "Sheep",
        "cow": "Cow",
        "elephant": "Elephant",
        "bear": "Bear",
        "zebra": "Zebra",
        "giraffe": "Giraffe",
        "backpack": "Backpack",
        "umbrella": "Umbrella",
        "handbag": "Handbag",
        "tie": "Tie",
        "suitcase": "Suitcase",
        "frisbee": "Frisbee",
        "skis": "Skis",
        "snowboard": "Snowboard",
        "sports ball": "Sports ball",
        "kite": "Kite",
        "baseball bat": "Baseball bat",
        "baseball glove": "Baseball glove",
        "skateboard": "Skateboard",
        "surfboard": "Surfboard",
        "tennis racket": "Tennis racket",
        "bottle": "Bottle",
        "wine glass": "Wine glass",
        "cup": "Cup",
        "fork": "Fork",
        "knife": "Knife",
        "spoon": "Spoon",
        "bowl": "Bowl",
        "banana": "Banana",
        "apple": "Apple",
        "sandwich": "Sandwich",
        "orange": "Orange",
        "broccoli": "Broccoli",
        "carrot": "Carrot",
        "hot dog": "Hot dog",
        "pizza": "Pizza",
        "donut": "Donut",
        "cake": "Cake",
        "chair": "Chair",
        "couch": "Couch",
        "potted plant": "Potted plant",
        "bed": "Bed",
        "dining table": "Dining table",
        "toilet": "Toilet",
        "tv": "Tv",
        "laptop": "Laptop",
        "mouse": "Mouse",
        "remote": "Remote",
        "keyboard": "Keyboard",
        "cell phone": "Cell phone",
        "microwave": "Microwave",
        "oven": "Oven",
        "toaster": "Toaster",
        "sink": "Sink",
        "refrigerator": "Refrigerator",
        "book": "Book",
        "clock": "Clock",
        "vase": "Vase",
        "scissors": "Scissors",
        "teddy bear": "Teddy bear",
        "hair drier": "Hair dryer",
        "toothbrush": "Toothbrush"
    },
    "Buttons": {
        "share_policy": "Share Guide",
        "write_policy": "Write Guide",
        "lesson_list": "List",
        "complete_study": "Complete",
        "show_me": "Show Me",
        "do_this_for_me": "Do This For Me",
        "previous": "Previous ",
        "get_started": "Get Started",
        "next_lesson": "Next lesson",
        "course_submit": "Submit",
        "course_done": "Done",
        "mission": "Introduction ",
        "basic_guide": "User Guide",
        "apply": "Apply",
        "add": "Add",
        "add2": "Add",
        "load": "Load",
        "move": "Move",
        "cancel": "Cancel",
        "save": "OK",
        "start": "Start",
        "confirm": "OK",
        "delete": "Delete",
        "create": "Create Class",
        "done": "Done",
        "accept": "Accept",
        "refuse": "Refuse",
        "yes": "Yes",
        "button_no": "No",
        "quiz_retry": "Try Again",
        "discuss_upload": "Upload",
        "maze_popup_guide": "User Guide",
        "maze_popup_mapHint": "Hint",
        "maze_hint_btn_guide": "User Guide",
        "maze_hint_btn_block": "Block Help",
        "maze_hint_btn_map": "Map Hint",
        "maze_hint_btn_goal": "goal",
        "list_save": "Upload",
        "duplication": "Copy",
        "export_to_excel": "Download",
        "single_line": "Single line",
        "multi_line": "Multiline",
        "lecture_finish_popup_reset_lecture": "Do it again",
        "lecture_finish_popup_show_output": "See the exercised",
        "lecture_view_hints": "View hints",
        "default_hint_title": "How do you make it?",
        "show_only_vector": "Only Vector",
        "create_new_table": "Create",
        "add_variable": "Add variable",
        "add_list": "Add list",
        "add_message": "Add Message",
        "sound_menu_trim": "Trim",
        "sound_menu_adjust": "Adjust",
        "sound_button_reset": "Reset",
        "sound_button_save": "Save"
    },
    "Menus": {
        "ask_captcha": "Please Enter the letters as seen in the Image",
        "refresh": "Refresh",
        "check_image_captcha": "Check With Image",
        "check_sound_captcha": "Check With Sound",
        "nothing_to_import": "There is no content to upload.",
        "nothing_to_export": "There is no content to download.",
        "content_copied": "The data is copied.",
        "list_import_title": "Import",
        "list_import_placeholder": "Example)\nData1\nData2\nData3\nData4\nData5\nData6\nData7\nData8",
        "verifying_email": "Verifying email",
        "list_import_notice_1": "You can enter items and default values in a list at once.",
        "list_import_notice_2": "The items and default values entered here are saved as a list.",
        "list_export_title": "Export",
        "list_export_notice": "You can copy or download the data in the list.",
        "robotis_opencm70": "Robotis Open CM70",
        "cannnot_mark_favorite": "Private project cannot be marked as a favorite.",
        "enterPassword": "Enter password.",
        "enterPassword_update": "Please enter your password to save your changes.",
        "enterNewPassword": "Enter new password.",
        "reEnterNewPassword": "Re-enter new password.",
        "resign": "Account deletion",
        "check_sended_email": "Please check your inbox to verify your email.",
        "signUpEmail_1": "Verification mail has been sent. ",
        "signUpEmail_2": "Please verify your email.",
        "select_email_unauthenticated_user": "The email address is registered to the IDs below.\nPlease choose the right one.",
        "select_user": "Please choose the ID.",
        "enter_password_withdraw": "Enter password to delete your account",
        "instruction_agree": "Please check instruction and agree.",
        "check_instructions": "I check instructions and agree.",
        "deleteAccount_2": "After 30 days, every data that you created in Entry such as project/lecture/class/post/comment/like/favourite will be deleted and cannot be restored.",
        "deleteAccount_1": "If you sign in again within 30 days, you can withdraw account deletion.",
        "protect_account": "Protect your account with a safe password.",
        "please_verify": "Please verify your email to click 'Verifying email'",
        "unverified_email": "Unverified email",
        "deleteAccount": "Delete account",
        "corporatePersonal": "Agree to the transfer of personal information.",
        "corporateTransferGuide": "Personal Information transfer guide",
        "corporateReciever": "Information reciever : Connect Foundation",
        "corporateAddress": "Connect Foundation Address&Contact",
        "corporateAddress_1": "Meritz Tower 7, Seoul Gangnam-gu Gangnam-daero 382, Seoul, Korea",
        "corporateConsent": "If you do not want to transfer your information, you may withdraw the consent.",
        "corporateEmail": "For withdraw the consent, send an email to",
        "corporateAddition": "In addition, the terms and conditions of the agreement will be changed, depending on the transfer.",
        "corporateApplicationDate": "Application date : From October 29, 2017",
        "corporateTargetChanges": "Application Targets and Changes : ",
        "corporateTarget": "Targets",
        "corporateChanges": "Changes",
        "corporateTerms": "Terms",
        "corporateOperator": "The name of the ‘Entry’ operator",
        "corporateClassroomTerms": "Classroom Service Terms of Use",
        "doAgreeWithClassroomTerms": "Agree to the Classroom Service Terms of Use.",
        "doChangePassword": "Please change the password into the one that only you can know.",
        "corporatePrivacyPolicy": "Privacy Policy",
        "corporateConsignment": "The name of the ‘Entry’ operator. And consignment of personal information",
        "corporateEntrusted": "Entrusted Company : NHN Technology Services Corporation.",
        "corporateConsignmentDetails": "Details of Consignment : Service operation.",
        "corporatePeriod": "Consignment Period : Until the member cancels membership or the consignment contract ends.",
        "corporateChangeDate": "Date of change : October 29, 2017",
        "corporateWarning": "Please Agree to the transfer of personal information.",
        "corporateConfirm": "Confirm",
        "corporateTitle": "Hello. This is EntryLabs.\n We are very grateful to you who are using 'Entry'. \nRecently we have agreed to transfer the ownership of Entry web site, which has been operated for public interest purposes, to the 'Connect Foundation'.\nConnect Foundation is a non-profit foundation founded by Naver. 'Entry' will be continuously operated under public interest purpose by 'Connect Foundation'. Therefore, All of “Entry” users will be guaranteed to use the entry exactly as same as before.\nSince the website provider has changed from the 'EntryLabs' to the 'Connect Foundation', there is a transfer of personal information as below. However, this doesn’t mean that your information will be physically moved.\n",
        "textcoding_numberError_f": "You can't convert into the text mode if there is function names start with a number.",
        "textcoding_bookedError_1f": "You can't convert into the text mode if there is function named",
        "textcoding_bookedError_2f": ".",
        "textcoding_specialCharError_f": "You can't convert into the text mode if there is function names include special character except for underscore.",
        "textcoding_numberError_v": "You can't convert into the text mode if there is variable names start with a number.",
        "textcoding_bookedError_1v": "You can't convert into the text mode if there is variable named ",
        "textcoding_bookedError_2v": ".",
        "textcoding_specialCharError_v": "You can't convert into the text mode if there is variable names include special character except for underscore.",
        "textcoding_numberError_l": "You can't convert into the text mode if there is list names start with a number.",
        "textcoding_bookedError_1l": "You can't convert into the text mode if there is list named ",
        "textcoding_bookedError_2l": ".",
        "textcoding_specialCharError_l": "You can't convert into the text mode if there is list names include special character except for underscore.",
        "no_discuss_permission": "You don't have permission to view this post.",
        "delete_comment": "Are you sure you want to delete commnet",
        "delete_article": "Are you sure you want to delete article",
        "discuss_cannot_edit": "You cannot edit this post",
        "discuss_extention": "You cannot upload files with that extension",
        "delete_discuss_picture": "Do you want to delete the photo?",
        "delete_discuss_file": "Do you want to delete the file?",
        "discuss_save_question": "Do you want save your post?",
        "discuss_cancle_question": "Do you want to leave without saving?",
        "discuss_saved": "is saved",
        "discuss_no_write_permission": "Cannot be saved with the current login account.",
        "discuss_no_project_permission": "Cannot be saved with the current login account.",
        "discuss_write_abuse_detected": "Several articles have been written within a \nshort period of time. \nPlease try again in 1 minutes.",
        "contents_abuse_detected": "Please try again in 5 minutes.",
        "contents_abuse_detected_10": "Please try again in 10 minutes.",
        "discuss_new_write_abuse_warn": "Posting multiple comments within a \nshort period of time may limit the post \nof comments.\nBe careful of your use.",
        "discuss_write_abuse_warn": "Posting multiple comments within a \nshort period of time may limit the post \nof comments.\nBe careful of your use.",
        "find_not_your_email": "Please enter a valid email.",
        "search_lang": "search",
        "search_title": "title",
        "faq_desc": "Check the answers for the questions you had while using the Entry.",
        "faq_all": "Total",
        "faq_site": "Site guide",
        "faq_project": "Project",
        "faq_hardware": "Hardware",
        "faq_offline": "Offline editor",
        "faq_copyright": "Copyright",
        "faq_title": "FAQ",
        "faq": "FAQ",
        "malicious_warning": "You cannot attach an unwholesome image. If the image doesn't unwholesome, please report it.",
        "fword_alert_msg": "You can not post abusive or malicious sentences.",
        "fword_alert_1": "You can not post abusive comments or malicious comments",
        "fword_alert_2": "Your post will be replaced alternative sentence because it contains unhealthy words.",
        "fword_replace_1": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_2": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_3": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_4": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_5": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_6": "Entry is an education platform created to help anyone learn to code.",
        "fword_replace_7": "Entry is an education platform created to help anyone learn to code.",
        "solve_quiz": "Quiz",
        "submit_homework_first_title": "Complete! Submit an assignment",
        "submit_homework_first_content": "Great work is done! Submit your assignment.\nYou may resubmit your assignment before the deadline.",
        "submit_homework_again_title": "Resubmit",
        "submit_homework_again_content": "This project has been submitted already.\nWould you like to resubmit?",
        "submit_homework_expired_title": "Submission Closed",
        "submit_homework_expired_content": "Assignment deadline is over.",
        "done_study_title": "Complete",
        "done_study_content": "Fabulous project is complete",
        "featured_courses": "Featured Courses",
        "follow_along": "Follow Along",
        "follow_along_desc": "Create various projects as you follow along step by step.",
        "do_quiz": "Quiz",
        "do_quiz_desc": "Check your knowledge through quizzes.",
        "challenge": "Challenge",
        "play": "Play",
        "challenge_desc": "Learn programming concepts by solving problems.",
        "creste_freely": "Create freely",
        "creste_freely_desc": "Create your projects using what you've learned.",
        "entry_rc_desc": "Learn programming concepts in steps with Entry lectures! Start now!",
        "hw_deadline": "Deadline",
        "rc_course_desc": "Lecture collection created for learning programming concepts level by level",
        "rc_course": "Entry Recommended Courses",
        "entry_rec_course": "Entry Recommended Courses",
        "entry_rec_course_desc": "Anyone can follow along and easily create projects with Entry Lectures.",
        "guidance": "Guidance",
        "wait": "Wait",
        "hint": "Hint",
        "concept_guide": "Concept Guide",
        "group_quiz": "Quiz",
        "fail_check_hint": "Oh no! Try again!\nCheck [Hint] if you are stuck!",
        "sort_student": "Student",
        "sort_lesson": "Lesson",
        "sort_course": "Course",
        "student_progress": "Student Progress",
        "my_progress": "Progress",
        "lec_in_progress": "in progress",
        "free_modal_asgn_over": "Assignment deadline is over.",
        "free_submission_closed": "Submission Closed",
        "free_modal_asgn_submit_first": "Great work is done! Submit your assignment.\nYou may resubmit your assignment before the deadline.",
        "asgn_submit": "Complete! Submit an assignment.",
        "free_modal_content_resubmit": "This project has been submitted already.\nWould you like to resubmit?",
        "asgn_resubmit": "Resubmit",
        "free_modal_content_complete": "Fabulous Project is complete.",
        "guide_modal_content_complete": "Let's run the program",
        "success": "Success",
        "fail": "Fail",
        "mission_modal_content_fail": "\nCheck [Hint] if you are stuck!",
        "mission_modal_content_success": "Let's run the program",
        "in_progress": "in progress",
        "completed": "Completed",
        "basic2": "before study",
        "in_progress2": "in study",
        "submitted": "submitted",
        "submission_closed": "Submission Closed",
        "lecture_progress_describe": "Clicking on a course name will take you to that course.",
        "progress": "Progress",
        "study_completed": "completed",
        "view_course_desc": "View Description",
        "main_entry_starter": "From basics! Entry Starter",
        "main_entry_booster": "Concepts! Entry Booster",
        "main_entry_master": "Ideas unfold! Entry Master",
        "no_students_in_classroom": "No students yet.\nPlease add or invite students.",
        "lectures": "lessons",
        "Lectures": "Lessons",
        "studentHomeworkList": "assignment",
        "curriculums": "courseware",
        "Curriculums": "Courseware",
        "quiz": "quiz",
        "no_added_group_contents_teacher": "There is no %1. \nPlease create a %1.",
        "no_added_group_contents_student": "There is no %1.",
        "side_project": "Goal project",
        "custom_make_course_1": "Create courseware from",
        "custom_make_course_2": "'Create lessons > Create Courseware'",
        "custom_make_lecture_1": "Create lessons from 'open lessons'",
        "custom_make_lecture_2": "",
        "alert_enter_info": "Please enter your information",
        "alert_enter_new_pwd": "Enter new password",
        "alert_match_pwd": "Password doesn't match the confirmation",
        "alert_check_pwd": "Please check your password",
        "alert_update_complete": "Edit complete",
        "no_group_contents_each_prefix": "There is no ",
        "no_group_contents_each_suffix": " in our classroom.",
        "no_group_contents_all": "There is no new content.\nShare projects in My Classroom gallery.",
        "hw_closed": "submission closed",
        "tag_Lecture": "Lessons",
        "tag_Curriculum": "Courseware",
        "tag_Discuss": "Discuss",
        "count_ko": ".",
        "no_asgn_within_week": "There is no assignment due within a week",
        "lecture_and_curriculum": "Open Lessons",
        "assignments_plural": "Assignments",
        "assignments_singular": "Assignment",
        "project_plural": "Projects",
        "group_news": "News",
        "stu_management": "Student management",
        "stu_management_camel": "Student Management",
        "view_all": "View all",
        "view_all_camel": "View All",
        "view_contents_camel": "View All",
        "view_contents": "Contents",
        "no_updated_news": "There is no update",
        "homework_soon_due": "Assignment soon due",
        "new_homework": "New Assignment",
        "no_new_homework": "There is no new Assignment",
        "student_plural": "Students",
        "discuss": "notice",
        "basic_project": "Basic Project",
        "no_permission": "You have no permission.",
        "no_comment_write_permission": "Cannot write comments with the currently logged in account.",
        "original_curriculum_deleted": "The original courseware was deleted",
        "original_curriculum": "Original courseware",
        "save_as_my_lecture": "Save as My Lecture",
        "delete_confirm": "Confirm",
        "lecture_open_as_copied": "All lectures in Open Lesson are saved as copy and open to public view",
        "curriculum_open_as_copied": "All Courseware listed under Open Lesson are saved as copy and open to public view",
        "lecture_save_as_copied_group": "All lectures in My Class Lecture are saved as copy and open to public view",
        "curriculum_save_as_copied_group": "All Lecture Collection listed under My Class Lecture Collection are saved as copy and open to public view",
        "homework_save_as_copied_group": "All Assignments listed under Class Assignment page are saved as copy and open to public view",
        "lecture_save_as_copied": "Lecture inserted in the Lecture collection is saved as a copy.",
        "done_project_save_as_copied": "Completed project inserted in the Lecture is saved as a copy.",
        "textbook_project_can_not_applied": "",
        "original_lecture_deleted": "The original lecture was deleted",
        "original_lecture": "Original lecture",
        "lecture_save_as_mine_alert": "Saved.\nnSaved Lecture is listed under 'My Page > My Lecture'",
        "lecture_save_as_mine": "Save as My Lecture",
        "duplicate_username": "The ID you entered is already in use",
        "share_your_project": "",
        "not_available_student": "ID entered is class issued 'Class ID'. \nPlease enter 'Entry Member ID'.",
        "login_instruction": "Log-in instructions",
        "login_needed": "Service is available after log-in",
        "go_login": "Login",
        "login_as_teacher": "Log in as Teacher to use the service",
        "remove_my_storage": "Are you sure to remove it from my storage? Deleted blocks/objects cannot be recovered.",
        "submit_hw": "submit",
        "success_goal": "Success",
        "choseok_final_result": "Great! I completed my own project!",
        "choseok_fail_msg_timeout": "시간이 너무 많이 지나버렸어. 목표를 잘 보고 다시 한번 도전해봐!",
        "choseok_fail_msg_die": "생명이 0이하인데 게임이 끝나지 않았어.\n아래의 블록을 사용해서 다시 도전해 보는 건 어때?",
        "grade_1": "Basic",
        "grade_2": "Intermediate",
        "grade_3": "Advanced",
        "find_sally_title": "Finding Sally",
        "save_sally_title": "Saving Sally",
        "exit_sally_title": "Escaping",
        "find_sally": "Combine the power of the LINE Rangers\nand defeat the powerful villain Mephisto\nand save Sally!",
        "save_sally": "Sally is trapped at Mephisto's base.\nHelp the LINE Rangers get to Sally by avoiding\nobstacles!",
        "exit_sally": "Help Sally and LINE Rangers escape safely\nfrom the exploding Mephisto base!",
        "go_next_mission": "다른 미션 도전하기",
        "share_my_project": "내가 만든 작품 공유하기",
        "share_certification": "인증서 공유하기",
        "print_certification": "인증서를 뽐내봐",
        "get_cparty_events": "내가 받은 인증서를 출력해 뽐내면 푸짐한 상품을 받을 수 있어요!",
        "go_cparty_events": "이벤트 참여하러 가기",
        "codingparty2016_blockHelper_1_title": "",
        "codingparty2016_blockHelper_1_contents": "",
        "codingparty2016_blockHelper_2_title": "",
        "codingparty2016_blockHelper_2_contents": "",
        "codingparty2016_blockHelper_3_title": "",
        "codingparty2016_blockHelper_3_contents": "",
        "codingparty2016_blockHelper_4_title": "",
        "codingparty2016_blockHelper_4_contents": "",
        "codingparty2016_blockHelper_5_title": "",
        "codingparty2016_blockHelper_5_contents": "",
        "codingparty2016_goalHint_1": "",
        "codingparty2016_goalHint_2": "",
        "codingparty2016_goalHint_3": "",
        "codingparty2016_goalHint_4": "",
        "codingparty2016_goalHint_5": "",
        "codingparty2016_goalHint_6": "",
        "codingparty2016_goalHint_7": "",
        "codingparty2016_goalHint_8": "",
        "codingparty2016_goalHint_9": "",
        "codingparty2016_guide_1_1_contents": "",
        "codingparty2016_guide_1_1_title": "",
        "codingparty2016_guide_1_2_title": "",
        "codingparty2016_guide_1_2_contents": "",
        "codingparty2016_guide_1_3_title": "",
        "codingparty2016_guide_1_3_contents": "",
        "codingparty2016_guide_1_4_title": "",
        "codingparty2016_guide_1_4_contents": "",
        "codingparty2016_guide_1_5_title": "",
        "codingparty2016_guide_1_5_contents": "",
        "codingparty2016_guide_2_1_title": "",
        "codingparty2016_guide_2_1_contents": "",
        "codingparty2016_guide_3_1_title": "",
        "codingparty2016_guide_3_1_contents": "",
        "codingparty2016_guide_5_1_title": "",
        "codingparty2016_guide_5_1_contents": "",
        "codingparty2016_guide_5_2_title": "",
        "codingparty2016_guide_5_2_contents": "",
        "codingparty2016_guide_7_1_title": "",
        "codingparty2016_guide_7_1_contents": "",
        "codingparty2016_guide_9_1_title": "",
        "codingparty2016_guide_9_1_contents": "",
        "codingparty2016_guide_9_2_title": "",
        "codingparty2016_guide_9_2_contents": "",
        "find_interesting_lesson": "Browse through 'Class lessons’ section to find interesting lessons!",
        "find_interesting_course": "Browse through 'Class courseware’ section to find interesting courseware!",
        "select_share_settings": "Select share settings",
        "faq_banner_title": "FAQ",
        "check_out_faq": "Check out Entry’s FAQ",
        "faq_banner_content": "Do you have any question about Entry?<br />We give you the answer in FAQ.<br />Find out now!",
        "faq_banner_button": "Go to FAQ",
        "major_updates": "Major updates",
        "check_new_update": "Check out\nEntry's new updates",
        "major_updates_notification": "Entry's major updates are announced by notification. ",
        "find_out_now": "Find out now!",
        "offline_hw_program": "Offline and Hardware Connection Program",
        "read_more": "read more",
        "sample_project": "Sample Project",
        "not_supported_function": "This tablet does not support this feature.",
        "offline_download_confirm": "Entry Offline Editor is available for PC. Would you like to download?",
        "hardware_download_confirm": "Entry Hardware Program is available for PC. Would you like to download?",
        "copy_text": "Copy text.",
        "select_openArea_space": "Select share settings",
        "mission_guide": "Mission guide",
        "of": " 's  ",
        "no_results_found": "No results found",
        "upload_pdf": "Upload PDF materials",
        "select_basic_project": "Select Project",
        "try_it_out": "TRY IT OUT",
        "go_boardgame": "ENTRY-Bot Board Game",
        "go_cardgame": "ENTRY Bot Card game",
        "go_solve": "Learn programming",
        "go_ws": "Entry Create",
        "go_arts": "Entry Share",
        "group_delete_alert": "Once you delete this class, all data including temporary student accounts will be deleted.\nAre you sure you want to delete?",
        "view_arts_list": "list",
        "hw_submit_confirm_alert": "Assignment submitted",
        "hw_submit_alert": "Would you like to submit your assignment?",
        "hw_submit_alert2": "Would you like to submit your assignment? Submission will only submit what you've completed.",
        "hw_submit_cannot": "You cannot submit this assignment",
        "see_other_missions": "See other missions",
        "project": "Project",
        "marked": "favorite",
        "group": "group",
        "lecture": "Lessons",
        "Lecture": "Lessons",
        "curriculum": "Courseware",
        "Curriculum": "Courseware",
        "studying": "studying",
        "open_only_shared_lecture": "<b>오픈 강의</b> 페이지에 <b><공개></b> 한 강의만 불러올 수 있습니다. 불러오고자 하는 <b>강의</b>의 <b>공개여부</b>를 확인해 주세요.",
        "already_exist_group": "group already exists",
        "cannot_invite_you": "Can't invite by yourself",
        "apply_original_image": "Save original image",
        "draw_new_ques": "Are you sure you want to go to \n'Draw new object' page?",
        "draw_new_ques_1": "You can draw an object and save it.",
        "draw_new_ques_2": "do you want to move to draw?",
        "draw_new_go": "Move",
        "draw_new_stay": "No, Stay",
        "file_upload_add": "Add",
        "file_upload_table_title": "Create a new table",
        "file_upload_table_sub_title": "You can create your own table by directly entering data.",
        "file_upload_warn_title_image": "The following pictures are subject to the Terms of Use and related laws.",
        "file_upload_warn_desc_image": "Violent and brutal picture\nSacred body exposure picture\nOffensive or disgusting picture\nPicture of copyright prohibited from unauthorized use",
        "file_upload_warn_title_sound": "The following sounds are subject to the Terms of Use and related laws.",
        "file_upload_warn_desc_sound": "Violent and cruel sound\nSuggestive sound\nOffensive or disgusting sound\nSound of copyright prohibited from unauthorized use",
        "file_upload_warn_title_table": "The following data may be subject to sanctions by the terms of use and related laws.",
        "file_upload_warn_desc_table": "Data containing violent and cruel contents, sexual contents, offensive and violent contents,\ndata that may infringe on personal information of one or others, copyrighted data prohibited from unauthorized use",
        "file_upload_warn_desc_table_1": "Data containing violent and cruel contents, sexual contents, offensive and violent contents, ",
        "file_upload_warn_desc_table_2": "data that may infringe on personal information of one or others, copyrighted data prohibited from unauthorized use",
        "file_upload_warn_link": "About copyright",
        "file_upload_desc_1": "Make sure you don't upload",
        "file_upload_desc_2": "Violent and brutal picture",
        "file_upload_desc_3": "Sacred body exposure picture",
        "file_upload_desc_4": "Offensive or disgusting picture",
        "file_upload_desc_5": "* Uploading of above contents may be restricted under user policy and related laws.",
        "picture_upload_warn_old": "You can only upload jpg, png, bmp files that are less than 10MB.",
        "sprite_upload_warn_old": "You can only upload images in jpg, png, bmp format or objects in eo format that are less than 10MB.",
        "picture_upload_warn_1": "You can only upload jpg, png, bmp, svg files that are less than 5MB.\nThe jpg, png, and bmp images are edited in bitmap mode and the svg image is in vector mode.",
        "table_upload_warn_1": "You can add CSV or XLS(X) format files less than 10MB. In the case of Excel files, function statements are displayed as it is.",
        "sprite_upload_warn": "You can only upload images in jpg, png, bmp, svg format or objects in eo format that are less than 5MB.",
        "sound_upload_warn_1": "You can only upload mp3 files that are less than 10MB.",
        "sound_edit_warn": "Please wait!\nWe're working on the Sound Editing function.",
        "table_drag_upload_title": "Drag and drop or click to upload files",
        "table_drag_upload_desc": "You can drag and drop CSV or XLS(X) files here or click to upload",
        "upload_select_file": "Select File",
        "file_upload_loading": "Loading",
        "lesson_by_teacher": "Teacher created lesson",
        "delete_group_art": "from the list?",
        "elementary_short": "elementary",
        "middle_short": "middle school",
        "grade_34": "3-4th",
        "grade_56": "5-6th",
        "grade_78": "7+",
        "share_lesson": "sharing lesson",
        "share_course": "sharing courseware",
        "from_list_ko": "",
        "comming_soon": "Coming soon",
        "no_class_alert": "Class selected does not exist. To create a class, go to 'My Class' to create a class.",
        "students_cnt": "",
        "defult_class_alert_1": "Do you want to set ",
        "defult_class_alert_2": "\n as default class?",
        "default_class": "Default classroom",
        "enter_hw_name": "Enter Assignment name.",
        "hw_limit_100": "You can created up to 100 assignments",
        "stu_example": "Example)\n John Doe\n John Doe\n John Doe",
        "hw_description_limit_200": "Add assignment description. (within 200 characters)",
        "hw_title_limit_50": "Enter Assignment name. (within 50 characters)",
        "create_project_class_1": "Create projects you want to share ",
        "create_project_class_2": "with the class from 'Create> Create Project'",
        "create_lesson_assignment_1": "Create lessons you want to add as",
        "create_lesson_assignment_2": "course assignment from 'Create > Create lessons'",
        "i_make_lesson": "Create lessons",
        "lesson_to_class_1": "'Favorite lessons you want to add as",
        "lesson_to_class_2": "course assignment from 'Learn > Open lessons'",
        "studying_students": "Student",
        "lessons_count": "Number of Lessons",
        "group_out": "Leave",
        "enter_group_code": "Enter class code",
        "no_group_invite": "There is no class invitation",
        "done_create_group": "Class is created",
        "set_default_group": "Set as default classroom",
        "edit_group_info": "Modify class information",
        "edit_done": "Edit complete",
        "alert_group_out": "Do you want to leave the class?",
        "lesson_share_cancel": "Cancel Sharing Lesson",
        "project_share_cancel": "Cancel Sharing Project",
        "lesson_share_cancel_alert": "Are you sure to change it?",
        "course_share_cancel": "Cancel Sharing Courseware",
        "select_lesson_share": "Select lesson to share",
        "select_project_share": "Select project to share",
        "select_lesson_share_policy_1": "Please check share settings",
        "select_lesson_share_policyAdd": "Please check share settings",
        "select_lesson_share_project_1": "Please check share settings",
        "select_lesson_share_policy_2": "and copyright policies",
        "select_lesson_share_area": "Select share settings",
        "select_project_share_area": "Select share settings",
        "lesson_share_policy": "I agree to Entry's Copyright Policies.",
        "project_share_policy": "I agree to Entry's Copyright Policies.",
        "alert_agree_share": "To share publicly, you must agree to Entry's copyright policies",
        "alert_agree_all": "Agree to all items",
        "select_course_share": "Select courseware to share",
        "select_course_share_policy_1": "Please check share settings",
        "select_course_share_policy_2": "and copyright policies",
        "select_course_share_area": "Select share settings",
        "course_share_policy": "I agree to Entry's Copyright Policies.",
        "issued": "Issued",
        "code_expired": "Code has expired. Press 'Reissue Code' button",
        "accept_class_invite": "Accept class invitation",
        "welcome_class": "Welcome to the class.",
        "enter_info": "Please enter your information.",
        "done_group_signup": "You have successfully enrolled to this class",
        "enter_group_code_stu": "Enter the class code sent from your teacher",
        "text_limit_50": "Enter 50 characters or less.",
        "enter_class_name": "Please enter your class name",
        "enter_grade": "Please enter your  grade",
        "enter_class_info": "Please enter your class introduction",
        "student_dup": "exits in this class already.",
        "select_stu_print": "Select student to print",
        "class_id_not_exist": "The class ID does not exist",
        "error_try_again": "Error occured. Please try again",
        "error_forbidden": "You have no permission",
        "code_not_available": "The code is not valid",
        "gnb_create_lessons": "Create lessons",
        "study_lessons": "Learn Lesson",
        "lecture_help_1": "Select the base project that the learner will start building his/her project on.",
        "lecture_help_2": "To see this help message again, click the button above.",
        "lecture_help_3": "If 'add object' is not shown, adding or deleting object is not possible.",
        "lecture_help_4": "See PDF attachment to get help",
        "lecture_help_5": "Select blocks needed to create project. Unselected blocks will be hidden.",
        "lecture_help_6": "choose between block Coding and Entry Python to organize your learning environment.",
        "lecture_finish_popup_title": "re-learn",
        "lecture_finish_popup_content_1": "Practice Completion Do you want to practice one step from the beginning?",
        "lecture_finish_popup_content_2": "* The practice completion status is maintained",
        "lecture_start_title": "Start",
        "lecture_goal_title": "Goal",
        "lecture_goal_content": "Goal",
        "lecture_prepare_title": "Prepare",
        "lecture_summary_title": "Summary",
        "lecture_summary_content": "Let's summarize what we learned.",
        "lecture_quiz_title": "Quiz",
        "lecture_quiz_content": "Let's check what we learned through the verification problem.",
        "lecture_quiz_check_answer": "Check the answer",
        "default_hint_title": "How do you make it?",
        "only_pdf": "Only pdf file is uploadable",
        "enter_project_video": "Enter at least one project or video",
        "enter_title": "Enter title.",
        "enter_recommanded_grade": "Enter recommanded grade.",
        "enter_level_diff": "Enter level of difficulty.",
        "enter_time_spent": "Enter time spent.",
        "enter_shared_area": "Select at least one sharing space",
        "enter_goals": "Enter goals",
        "enter_lecture_description": "Enter lecture information",
        "enter_curriculum_description": "Enter courseware information",
        "first_page": "처음 입니다.",
        "last_page": "마지막 입니다.",
        "alert_duplicate_lecture": "The lesson is already registered",
        "enter_lesson_alert": "Register one or more lessons",
        "open_edit_lessons": "Open lesson to be edited",
        "saved_alert": "was successfully saved.",
        "select_lesson_type": "Select type of lesson you want to create.",
        "create_lesson": "create lesson",
        "create_lesson_desc_1": "create a lesson",
        "create_lesson_desc_2": "according to learning objectives",
        "create_lesson_desc_3": "for your course.",
        "create_courseware": "Create courseware",
        "create_courseware_desc_1": "put multiple lessons together",
        "create_courseware_desc_2": "to create a courseware",
        "create_courseware_desc_3": "",
        "create_open_lesson": "Create open lesson",
        "enter_lesson_info": "Enter lesson information",
        "select_lesson_feature": "Select lesson feature",
        "check_info_entered": "Check information entered",
        "enter_lefo_lesson_long": "Enter information about the lesson.",
        "lesson_info_desc": "Select features and projects that learners will use to create optimal learning environment.",
        "provide_only_used": "Only provide blocks used in the goal project",
        "see_help": "See help",
        "select_done_project_1": "Select",
        "select_done_project_2": "the goal project",
        "select_done_project_3": "that the learner is to create",
        "select_project": "Select my project or my favorite project",
        "youtube_desc": "Enter Youtube links",
        "lesson_video": "Lesson video",
        "lesson_title": "Lesson title",
        "recommended_grade": "grade level",
        "selection_ko": "",
        "selection_en": "Select",
        "level_of_diff": "difficulty",
        "select_level_of_diff": "Select difficulty",
        "enter_lesson_title": "enter lesson title (in 45 characters or less)",
        "select_time_spent": "Select time",
        "time_spent": "time",
        "lesson_overview": "Lesson Overview",
        "upload_materials": "Upload course materials",
        "open": "Open",
        "cancel": "Cancel",
        "upload_lesson_video": "Upload lesson video",
        "youtube_upload_desc": "Insert Youtube link for course videos",
        "cancel_select": "Undo select",
        "select_again": "Select again",
        "goal_project": "Goal",
        "upload_study_data": "Upload learning materials that learners can view while building the project.",
        "upload_limit_20mb": "Upload up to 20MB",
        "expect_time": "Time spent",
        "course_videos": "course videos",
        "enter_courseware_info": "Enter courseware information",
        "enter_course_info": "Enter courseware information",
        "select_lessons_for_course": "Select lessons to create a courseware.",
        "course_build_desc_1": "",
        "course_build_desc_2": "Up to 30 lessons",
        "course_build_desc_3": "allowed.",
        "lseeon_list": "show lesson List",
        "open_lessons": "Open lessons",
        "course_title": "Courseware title",
        "title_limit_30": "Enter courseware title(within 30 characters)",
        "course_overview": "Courseware Overview",
        "charactert_limit_200": "Enter within 200 characters",
        "edit_lesson": "Edit lesson",
        "courseware_by_teacher": "Teacher created lesson collections",
        "select_lessons": "Select lessons",
        "check_course_info": "Check if the lesson collection information is correct",
        "select_share_area": "Select sharing space",
        "upload_sub_project": "Goal project upload",
        "file_download": "Download file",
        "file_remove": "Remove file",
        "check_lesson_info": "Check if the lesson information is correct",
        "share_area": "Sharing space",
        "enter_sub_project": "Register side project",
        "lms_hw_title": "Title",
        "lms_hw_ready": "Ready",
        "lms_hw_progress": "In progress",
        "lms_hw_complete": "Complete",
        "lms_hw_not_submit": "Unfinished",
        "lms_hw_closed": "Closed",
        "submission_condition": "Submission is allowed only for assignments in progress",
        "submit_students_only": "Only students are allowed to submit assignments",
        "want_submit_hw": "Are you sure you want to submit your assignment?",
        "enter_correct_id": "Enter correct ID",
        "id_not_exist": "The ID does not exist.",
        "agree_class_policy": "Agree to class service usage policy.",
        "delete_class": "Delete classs",
        "type_stu_name": "Please enter the student name.",
        "invite_from_1": "is invited to",
        "invite_from_2": "",
        "lms_pw_alert_1": "has invited you to",
        "lms_pw_alert_2": "class.",
        "lms_pw_alert_3": "Please make sure that the invitation is from your teacher.",
        "invitation_accepted": "Invitation Accepted!",
        "cannot_issue_pw": "Password cannot be issued because invitation has not been accepted",
        "start_me_1": "Start coding education",
        "start_me_2": "with <Monthly Entry>!",
        "monthly_desc_1": "Monthly Entry is a monthly distributed magazine created ",
        "monthly_desc_2": "to help teachers learn to teach programming in fun and easy way.",
        "monthly_desc_3": "Check out the fun cartoons and programming contents every month!",
        "monthly_desc_4": "* The Monthly Entry has ceased publication.",
        "monthly_desc_5": "Download educational materials from the Educational Materials page.",
        "monthly_entry": "Monthly Entry",
        "me_desc_1": "Meet Monthly Entry magazine distributed monthly!",
        "me_desc_2": "",
        "solve_desc_1": "Learn the basics of",
        "solve_desc_2": "software programming by solving",
        "playSw_desc_1": "Learn to code by watching EBS TV Series and special tutorial videos!",
        "playSw_desc_2": "",
        "recommended_lessons": "Recommendations",
        "recommended_lessons_1": "Follow along, challenge, solve quizzes and learn to program with Entry!",
        "recommended_lessons_2": "",
        "offline_top_desc_1": "Offline Editor's Save Feature has improved as well as security.",
        "offline_top_desc_2": "Download now",
        "offline_main_desc": "Update Entry Offline Editor",
        "art_description": "This is a project sharing space. Create your own project and share.",
        "art_description_1": "",
        "art_description_2": "projects created. Create your own project and share.",
        "study_index": "Learn to code with Entry's coursewares by topic and grade levels",
        "study_for_beginner": "Entry First Steps for Starters",
        "entrybot_desc_3": "Take Entrybot to school",
        "entrybot_desc_4": "by assembling command blocks",
        "move_entrybot": "Control Entrybot",
        "can_change_entrybot_1": "Change Entrybot's color, make it talk",
        "can_change_entrybot_2": "using block commands",
        "learning_process_by_topics": "Courseware by topic",
        "show_detail": "See Details",
        "solve_mission": "Solve Mission",
        "solve_mission_desc_1": "Learn to code while playing games and solving missions!",
        "solve_mission_desc_2": "Control Entrybot move through the maze so it can reach its destination while learning the concepts of sequence, repeat, select and comparison.",
        "learning_process_by_grades": "Courseware by grade levels",
        "learning_process_by_grades_sub1": "Learn programming concepts in steps with Entry lectures! Start now!",
        "e3_to_e4": "Elementary 3-4th grade",
        "e5_to_e6": "Elementary 5-6th grade",
        "m1_to_m3": "7th+ and above",
        "make_using_entry": "Create projects with Entry",
        "make_using_entry_desc_1": "Assemble block to create your own program!",
        "make_using_entry_desc_2": "Download and follow along the learning materials to create animation, media art, game and other fun programs.",
        "make_through_ebs_1": "Learn to code by watching EBS TV Series.",
        "make_through_ebs_2": "The fun TV Series are accompanied by step-by-step tutorial videos so anyone can easily create programs.",
        "support_block_js": "Block code and javascript are supported",
        "study_ebs_title_1": "순서대로! 차례대로!",
        "study_ebs_desc_1": "[실습] 엔트리봇의 심부름",
        "study_ebs_title_2": "쉽고 간단하게!",
        "study_ebs_desc_2": "[실습] 꽃송이 만들기",
        "study_ebs_title_3": "언제 시작할까?",
        "study_ebs_desc_3": "[실습] 동물가족 소개",
        "study_ebs_title_4": "다른 선택, 다른 결과!",
        "study_ebs_desc_4": "[실습] 텔레파시 게임",
        "study_ebs_title_5": "정보를 담는 그릇",
        "study_ebs_desc_5": "[실습] 덧셈 로봇 만들기",
        "study_ebs_title_6": "요모조 따져 봐!",
        "study_ebs_desc_6": "[실습] 복불복 룰렛",
        "study_ebs_title_7": "번호로 부르면 편해요!",
        "study_ebs_desc_7": "[실습] 나만의 버킷리스트",
        "study_ebs_title_8": "무작위 프로그램을 만들어라!",
        "study_ebs_desc_8": "[실습] 무작위 캐릭터 만들기",
        "study_ebs_title_9": "어떻게 찾을까?",
        "study_ebs_desc_9": "[실습] 도서관 책 검색",
        "study_ebs_title_10": "줄을 서시오!",
        "study_ebs_desc_10": "[실습] 키 정렬 프로그램",
        "event": "이벤트",
        "divide": "분기",
        "condition": "conditionals",
        "random_number": "무작위수",
        "search": "탐색",
        "sorting": "정렬",
        "parallel": "병렬",
        "signal": "신호",
        "input_output": "입출력",
        "sequential": "sequence",
        "repeat": "repeat",
        "choice": "selection",
        "repeat_advanced": "repeat(sequence+condition)",
        "function": "function",
        "compare_operation": "comparison",
        "arithmetic": "산술연산",
        "entry_recommended_mission": "Entry Recommended Mission",
        "more_mission": "More Mission",
        "line_rangers_title": "Saving Sally with\nLINE Rangers",
        "line_rangers_content": "Save Sally trapped\nin the Mepisto base.",
        "pinkbean_title_string_basic": "Maple Story Basic Henesys",
        "pinkbean_title_string_intermediate": "Maple Story Intermediate Ellinia",
        "pinkbean_title_string_advanced": "Maple Story Advanced Elnath",
        "pinkbean_title": "To the Maple World\nwith PINK BEAN!",
        "pinkbean_content": "Help Pinkbean to finish\nhis Maple World adventure.",
        "entrybot_school": "Go to school",
        "entrybot_school_desc_1": "Help Entrybot to get backpack and go to school",
        "entrybot_school_desc_2": "",
        "robot_factory": "Robot Factory",
        "robot_factory_desc_1": "Entrybot is trapped in a robot factory!",
        "robot_factory_desc_2": "Collect all parts to escape the factory.",
        "electric_car": "Electric Car",
        "electric_car_desc_1": "Help Entrybot's car move forward ",
        "electric_car_desc_2": "by making sure it has enough fuel.",
        "forest_adventure": "Forest Adventures",
        "forest_adventure_desc_1": "Entrybot's friends are trapped in the forest!",
        "forest_adventure_desc_2": "Help Entrybot's friends escape.",
        "town_adventure": "Village Adventures",
        "town_adventure_desc_1": "Help Entrybot find fuel",
        "town_adventure_desc_2": "in the village.",
        "space_trip": "Space Travels",
        "space_trip_desc_1": "Entrybot just completed its space exploration.",
        "space_trip_desc_2": "Help Entrybot return to Earth.",
        "learn_programming_mission": "Learn programming by playing challenges",
        "make_open_lecture": "Create open lessons",
        "group_created": "Class created",
        "group_signup": "Class enrolled",
        "delete_from_list": "from the list?",
        "delete_from_list_en": "Are you sure you want to delete",
        "lecture_collection": "Courseware",
        "edit_mypage_profile": "Managae my info",
        "main_image": "Main image",
        "edit_profile_success": "Applied.",
        "no_project_1": "There are no projects to show.",
        "no_project_2": "How about creating your project now?",
        "empty_project_1": "There is no work made yet.",
        "no_marked_project_1": "There is no favorite project at this moment.",
        "no_marked_group_project_1": "There is no favorite class project at this moment.",
        "no_marked_project_2": "'Browse through 'Share' section to find interesting projects! ",
        "no_markedGroup_project_2": "Browse through 'Class share' section to find interesting projects!",
        "view_project_all": "Browse project",
        "no_lecture_1": "There are no lessons to show.",
        "empty_lecture_1": "There is no lecture made yet.",
        "no_lecture_2": "Create lessons from 'open lessons'",
        "no_marked_lecture_1": "There is no favorite lesson to show.",
        "no_marked_group_lecture_1": "There is no favorite class lesson to show.",
        "no_marked_lecture_2": "Browse through 'Open lessons' to see various lessons!",
        "view_lecture": "Browse lessons",
        "no_studying_lecture_1": "There are no lessons to show.",
        "no_studying_lecture_2": "Start learning from 'Open lessons' section!",
        "no_lecture_collect_1": "There are no courseware to show.",
        "empty_lecture_collect_1": "There is no courseware made yet.",
        "no_lecture_collect_2": "Create courseware from 'Create open courseware'",
        "make_lecture_collection": "Create courseware",
        "no_marked_lecture_collect_1": "There is no favorite courseware to show.",
        "no_marked_lecture_group_collect_1": "There is no favorite class courseware to show.",
        "no_marked_lecture_collect_2": "Browse through 'Open lessons' to see various lessons!",
        "view_lecture_collection": "Browse courseware",
        "no_studying_lecture_collect_1": "There are no courseware to show.",
        "no_studying_lecture_collect_2": "Start learning from 'Open lessons' section!",
        "my_lecture": "My lessons",
        "markedGroup": "Favorite group",
        "markedGroup_lecture": "Favorite group lessons",
        "markedGroup_curriculum": "Favorite group curriculum",
        "marked_lecture": "Favorite lessons",
        "marked_lecture_collection": "My courseware",
        "marked_marked_curriculum": "My courseware",
        "studying_lecture": "Lessons in progress",
        "completed_lecture": "Lessons completed",
        "my_lecture_collection": "My courseware",
        "my": "My",
        "studying_lecture_collection": "Courseware in progress",
        "completed_lecture_collection": "Courseware completed",
        "my_curriculum": "My Courses",
        "studying_curriculum": "Courseware in progress",
        "completed_curriculum": "Courseware completed",
        "materialCC": "All contents provided are released under Creative Commons CC-BY 2.0 License.",
        "materialccby_new": "All contents provided are released under Creative Commons CC-BY 2.0 License.",
        "entry_copyright_info": "ENTRY copyright guide",
        "pdf": "PDF",
        "helper": "helper",
        "youtube": "vedio",
        "tvcast": "vedio",
        "goal": "goal",
        "basicproject": "basic",
        "hw": "hardware",
        "object": "object",
        "console": "console",
        "download_info": "Click on the title to download resource",
        "entry_materials_all": "Entry Educational Materials",
        "entry_material": "Learning Entry",
        "recommand_grade": "Grade levels",
        "g3_4_grades": "3-4th",
        "g5_6_grades": "5-6th",
        "middle_grades": "7th+",
        "entry_go_go": "Entry Go Go!",
        "entry_go_go_desc": "Explore a set of courseware, student activity book and teacher's guide",
        "entry_go_go_desc2": "ndevided by grade and difficulty.",
        "stage_beginner": "Basic",
        "stage_middle": "Advanced",
        "stage_high": "Expert",
        "middle_school_short": "7th+",
        "learn_entry_programming": "Follow along step by step.",
        "entry_programming_desc": "Entry Programming: Become an Entry expert!",
        "ebs": "",
        "ebs_material_desc": "Teach using the EBS TV Series and Teacher's Guide!",
        "season_1_material": "Season 1 Teacher's Guide",
        "season_2_material": "Season 2 Teacher's Guide",
        "season_1": "Season 1",
        "playsoftware_ebs": "EBS Let’s play, SW!",
        "material_teacher_guide": "Teacher's Guide",
        "season_2": "Season 2",
        "compute_think_textbook": "Improve computational thinking skills",
        "computational_sw": "Learn to code for subjects such as language arts, math, science, fine arts!",
        "python_coding_text": "Entry Python",
        "python_coding_textbook": "Travel to the text coding world! Entry Python",
        "python_coding_desc": "Learn the structure and grammar of text coding with Entry Python!",
        "entry_x_hardware_text": "Entry X Hardware",
        "entry_x_hardware": "Entry Hardware Educational Materials",
        "e_sensor": "E Sensorboard",
        "e_sensor_board": "E Sensor-board",
        "e_sensor_robot": "E Sensor-robot",
        "arduino": "Arduino",
        "arduinoext": "ArduinoExt Uno",
        "arduinonano": "Arduino Nano",
        "albert": "albert",
        "orange_board": "orangeBoard",
        "arduino_board": "Arduino",
        "joystick": "joystick sensor shield",
        "ardublock": "ardublock",
        "mkboard": "digital monkeyboard",
        "mechatro_nano": "Mechatro Nano+",
        "mechatro_uno": "Mechatro Uno+",
        "memaker": "memaker",
        "edumaker": "EduMaker Board",
        "codingtoolbox": "codingtoolbox",
        "materials_etc_all": "Other Educational Materials",
        "materials_teaching": "For Teacher Education",
        "materials_etc": "Other Resources",
        "materials_etc_resource": "Resources",
        "materials_teaching_etc": "Teacher training",
        "materials_teaching_1": "Why Coding?",
        "materials_teaching_2": "Unplugged Acitivies with Entry",
        "materials_teaching_3": "Learn by playing in Entry Coding Missions",
        "materials_teaching_4": "Entry for Real World Problem Solving",
        "materials_teaching_5": "Interdisciplinary Coding(Art,Math,Social)",
        "materials_teaching_6": "Interdisciplinary Coding(Korean,Science,Music)",
        "materials_teaching_7": "Physical Computing 1 (E-Sensorboard)",
        "materials_teaching_8": "Physical Computing 2 (Hamster Robot)",
        "materials_teaching_9": "Learn to use Entry LMS effectively ",
        "materials_etc_1": "Getting Started Guide",
        "materials_etc_2": "Contents for Classroom Use",
        "materials_etc_3": "Monthly Entry",
        "materials_etc_4": "About Entry",
        "materials_etc_5": "Introducing Entry",
        "materials_etc_6": "Entry Block Catalogue",
        "materials_etc_7": "Entry Python Guide",
        "jr_if_1": "if",
        "jr_if_2": "in front",
        "jr_fail_no_pencil": "There is no pencil. Use 'pencil block' at the pencil!",
        "jr_fail_forgot_pencil": "Oh no! I forgot my pencil. Let's pick up the pencil.",
        "jr_fail_much_blocks": "너무많은 블록을 사용했어, 다시 도전해볼래?",
        "cparty_jr_success_1": "Hooray! I got my backpack!",
        "go_right": "go right",
        "go_down": "go down",
        "go_up": "go up",
        "go_left": "go left",
        "go_forward": "Go forward",
        "jr_turn_left": "Turn left",
        "jr_turn_right": "Turn right",
        "go_slow": "Go slow",
        "repeat_until_reach_1": "",
        "repeat_until_reach_2": "Repeat until reach",
        "pick_up_pencil": "Pick up",
        "repeat_0": "Repeat",
        "repeat_1": "",
        "when_start_clicked": "When start button clicked",
        "age_0": "Age 0+",
        "create_character": "Creating Character",
        "age_7_9": "Age 7~9",
        "going_school": "Going to School",
        "age_10_12_1": "Age 10~12",
        "collect_parts": "Collecting Parts",
        "age_10_12_2": "Age 10~12",
        "driving_elec_car": "Driving Electric Car",
        "age_13": "Age 13+",
        "travel_space": "Traveling Space",
        "people": "Person",
        "all": "All",
        "life": "Life",
        "nature": "Nature",
        "animal_insect": "Animal/Insect",
        "environment": "Environment",
        "things": "Things",
        "vehicles": "Vehicles",
        "others": "Others",
        "fantasy": "Fantasy",
        "instrument": "Instrument",
        "piano": "Piano",
        "marimba": "Marimba",
        "drum": "Drum",
        "janggu": "Janggu",
        "sound_effect": "Sound",
        "others_instrument": "Others",
        "aboutEntryDesc_1": "Entry is an education platform created to help anyone learn to code.",
        "aboutEntryDesc_2": "Students are able to learn to code while playing,",
        "aboutEntryDesc_3": "teachers are able to teach effectively.",
        "aboutEntryDesc_4": "Entry is a non-profit service.",
        "aboutEntryDesc_5": "",
        "viewProjectTerms": "See usage policy",
        "openSourceTitle": "Promoting open source culture",
        "openSourceDesc_1": "Entry's source code and ",
        "openSourceDesc_2": "all educational materials",
        "openSourceDesc_3": "are open to public",
        "viewOpenSource": "See open source code",
        "eduPlatformTitle": "Entry for Classroom Use",
        "eduPlatformDesc_1": "Entry is developed with teachers ",
        "eduPlatformDesc_2": "to promote learning",
        "eduPlatformDesc_3": "in classroom settings.",
        "madeWith": "Advisory group",
        "researchTitle": "Continuous improvement through research",
        "researchDesc_1": "Entry collaborates with researchers to strengthen learning effectiveness",
        "researchDesc_2": "",
        "researchDesc_3": "",
        "viewResearch": "See research materials",
        "atEntry": "Entry provides",
        "entryLearnDesc_1": "learn while playing",
        "entryLearnDesc_2": "< Learn > section provides various coursewares and learning materials.",
        "entryLearnDesc_3": "Watch videos, solve problems and learn while playing.",
        "entryLearnDesc_4": "",
        "entryMakeDesc_1": "<Create> section provides block-based coding tool which enables",
        "entryMakeDesc_2": "even first time learners to easily create programs.",
        "entryMakeDesc_3": "And also provides ‘entry phython’ mode which is between block-based coding",
        "entryMakeDesc_4": "and text-based coding to help you understand the structure and grammar",
        "entryMakeDesc_5": "of programming languages.",
        "entryShareDesc_1": "<Share> section allows users to share his or her project with others.",
        "entryShareDesc_2": "Explore how the shared projects are created, make improvements,",
        "entryShareDesc_3": "collaborate with friends to make even cooler projects.",
        "entryGroup": "Learning Management Tool",
        "entryGroupTitle": "My Class",
        "entryGroupDesc_1": "<Learning Management Tool> is created to help teachers easily manage students.",
        "entryGroupDesc_2": "Create your own class, assign homework,",
        "entryGroupDesc_3": "share project within the class, and check student progress.",
        "entryGroupDesc_4": "And teacher can lead the class effectively by providing more suitable coursewares",
        "entryGroupDesc_5": "according to the students’ level.",
        "unpluggedToPhysical": "From Unplugged Activity to Physical Computing",
        "algorithmActivity": "Basic Algorithm",
        "programmignLang": "Block-based Coding",
        "unpluggedDesc_1": "Learn the basics of programming such as sequence, repetition,",
        "unpluggedDesc_2": "selection and function by playing Entry Boardgame and Cardgame.",
        "entryMaze": "Entrybot Maze Escape",
        "entryAI": "Space Travels",
        "algorithmDesc_1": "Earn a certificate by completing the coding missions.",
        "algorithmDesc_2": "Learn to code while playing.",
        "programmingLangDesc_1": "Coding is made easy with Entry.",
        "programmingLangDesc_2": "Create your own games, animation, media art and much more.",
        "viewSupporHwVideo": "See the hardware guide videos",
        "viewSupporHw": "see which hardware connects",
        "supportHwDesc_1": "Entry connects to many physical computing devices to create awesome projects",
        "supportHwDesc_2": "that interacts with the physical world. More devices are continuously added!",
        "entryEduSupport": "Entry Education Support",
        "eduSupportDesc_1": "Entry Labs provides educational materials for free.",
        "eduSupportDesc_2": "Download educational materials from the Educational Materials page.",
        "materials_1_title": "Textbook by grade levels",
        "materials_1_desc_1": "Improve coding skills step by step",
        "materials_1_desc_2": "",
        "materials_2_title": "EBS TV program and teacher's guide",
        "materials_2_desc_1": "EBS TV series are accompanied",
        "materials_2_desc_2": "by teacher's guide",
        "materials_3_title": "Educational materials",
        "materials_3_title_2": "for elementary and mid to high school",
        "materials_3_desc_1": "Improve computational thinking skills.",
        "materials_3_desc_2": "",
        "moreMaterials": "See more educational materials",
        "moreInfoAboutEntry_1": "Click on the links below to get Entry's latest updates.",
        "moreInfoAboutEntry_2": "Educational materials as well as exciting news are shared.",
        "material_menu_type_robot": "Robot\nType",
        "material_menu_type_module": "Module\nType",
        "material_menu_type_board": "Board\nType",
        "blog": "Blog",
        "post": "Post",
        "tvCast": "TVCast",
        "about_entry_pre": "Entry",
        "about_youtube": "Youtube",
        "about_facebook": "Facebook",
        "albertSchool": "Albert",
        "arduinoBoard": "Arduino certified",
        "arduinoCompatible": "non-certified",
        "bitBlock": "BitBlock",
        "bitbrick": "Bitbrick",
        "creamo": "creamo",
        "playcode": "playcode",
        "funboard": "funboard",
        "truerobot": "TrueTrue",
        "bingle": "BINGLE",
        "bingles": "BINGLE · S",
        "codeino": "CODEino",
        "epor": "EPOR",
        "petrone_v2": "Petrone V2",
        "petrone_v2_drone": "flight",
        "petrone_v2_car": "drive",
        "e-sensor": "E-Sensorboard",
        "e-sensorUsb": "E-Sensor board",
        "e-sensorBT": "E-Sensor board(Bluetooth)",
        "mechatronics_4d": "4D Mechatronics",
        "esensor_board": "E-Sensor Board",
        "esensor_robot": "E-Sensor Robot",
        "awesomebot": "Awesomebot",
        "hamster": "Hamster",
        "hummingbird": "Hummingbird Duo",
        "roboid": "Roboid",
        "turtle": "Turtle",
        "littlebits": "Littlebits",
        "orangeBoard": "OrangeBoard",
        "robotis_carcont": "Robotis Robot Car",
        "robotis_IoT": "Robotis IoT",
        "robotis_IoT_Wireless": "Robotis IoT(Wireless)",
        "dplay": "DPLAY",
        "iboard": "iboard",
        "nemoino": "NEMOino",
        "xbot_epor_edge": "XBOT(OneTouch Dongle/USB)",
        "XbotBT": "XBOT EPOR and EDGE Bluetooth",
        "robotori": "robotori",
        "rokoboard": "rokoboard",
        "neobot": "NEOBOT",
        "neobot_sensor_theme": "NEOBOT Senosor Theme",
        "mechatro": "mechatro",
        "about": "About",
        "articles": "Articles",
        "gallery": "Gallery",
        "learn": "Learn",
        "login": "Sign In",
        "logout": "Sign Out",
        "make": "Create",
        "register": "Sign Up",
        "Join": "Join",
        "Edit_info": "Edit Info",
        "Discuss": "Discuss",
        "Explore": "Explore",
        "Load": "Load",
        "My_lesson": "Open Lessons",
        "textbook_learning": "Learning Text book",
        "Resources": "Resources",
        "play_software": "EBS Let’s play, SW!",
        "problem_solve": "Entry Learn",
        "learning_textbook": "Learning Text book",
        "context_textbook": "Teachers can teach the school class and students can prepare and review at home with the same content as their textbooks.",
        "info_banner_textbook": " ",
        "banner_textbook": "Do you want to learn more",
        "banner_textbook_2": "diverse and interesting things?",
        "banner_textbook_right_banner": "Do you need educational ",
        "banner_textbook_right_banner2": "materials for teachers?",
        "banner_textbook_right_banner_btn": "Download material",
        "Learn": "Learn",
        "teaching_tools": "Teaching Tools",
        "about_entry": "About ENTRY",
        "what_entry": "What is Entry?",
        "create": "Create",
        "create_new": "Create new",
        "start_programming": "First Step for Software Education",
        "Entry": "Entry",
        "intro_learning": "Learn to code in fun and easy way.",
        "intro_learning_anyone": "Start now with Entry!",
        "start_now": "For Free, Forever.",
        "welcome_entry": "Welcome to ENTRY",
        "student": "Student",
        "non_menber": "General",
        "teacher": "Teacher",
        "terms_conditions": "Terms and Conditions",
        "personal_information": "Information about the collection and use of personal information ",
        "limitation_liability": "Limitation of Liability",
        "entry_agree": "Agree to ENTRY’s Terms of Use",
        "info_agree": "",
        "next": "Next",
        "enter_individual_info": "Enter personal information",
        "enter_id": "Enter ID",
        "enter_password": "Enter Password",
        "confirm_password": "Confirm Password",
        "enter_password_again": "Enter  your password again",
        "validation_password": "Please use at least 5 letters and/or numbers",
        "validation_id": "Please use 4-20 letters and/or numbers.",
        "prev": "Back",
        "born_year": "Year born ",
        "select_born": "Select the year you were born.",
        "year": "years",
        "gender": "Gender",
        "choose_gender": "Choose gender",
        "male": "Male",
        "female": "Female",
        "language": "Language",
        "best_language": "Select your best language",
        "korean": "Korean",
        "english": "English",
        "viet": "Vietnamese",
        "japan": "japan",
        "russia": "russia",
        "chinese_simplified": "Chinese(Simplified)",
        "chinese_traditional": "Chinese(Traditional)",
        "option_email": "Email (optional)",
        "insert_email": "Enter your email address",
        "sign_up_complete": "Sign up complete!",
        "agree_terms_conditions": "Please agree Terms and Conditions",
        "agree_personal_information": "Please agree to the collection and use of personal information.",
        "insert_studying_stage": "Please select the group you want to share your project .",
        "insert_born_year": "Insert the year you were born",
        "insert_gender": "Please select gender from the options.",
        "select_language": "select language",
        "check_email": "Check email's format",
        "already_exist_id": "ID already exists",
        "id_validation_id": "ID use 4-20 letters and/or numbers.",
        "password_validate_pwd": "Password use at least 5 letters and/or numbers",
        "password_validate_pwd_length": "Please use at least 5 numbers.",
        "neoid_username_same_id": "Username already taken (NEOID)",
        "captcha_error": "Captcha Error.",
        "captcha_try_after_10min": "Please try again after 10 minutes.",
        "captcha_limit": "Captcha Refresh Limit has met",
        "insert_same_pwd": "Insert same password",
        "studying_stage_group": "Sharing class",
        "studying_stage": "Please select the group you want to share.",
        "password": "Password",
        "save_id": "Save ID",
        "auto_login": "Keep me sign in",
        "enter_id_pw": "Entry ID, Password",
        "forgot_password": "Forgot your ID or password?",
        "did_not_join": "Haven’t signed up yet?",
        "go_join": "Go to join",
        "renew_index_text_00": "Learn textbook",
        "renew_index_text_01": "Let's learn Entry with textbook.",
        "renew_index_text_02": "Through elementry textbook lectures,",
        "renew_index_text_02_2": "learn Entry!",
        "renew_index_text_03": "Go to",
        "renew_index_text_03_2": "learn textbook",
        "renew_index_text_1": "2019, Meet the changed Entry",
        "renew_index_text_2": "The brand new 'Create Project'",
        "renew_index_text_3": "Go to the 'Create Project'",
        "renew_index_text_3_2": "and find out the new functions!",
        "renew_index_text_4": "View Details",
        "first_step": "First Step for Software Education",
        "entry_content_one": "Bring your imagination to life with ENTRY.",
        "entry_content_two": "Create games, animations, media art, and other cool projects!",
        "entry_content_three": "Create projects and share with your friends. Enter the exciting world of ENTRY!",
        "funny_space": "A Fun Learning Space",
        "in_learn_section": "In < Learn > section,",
        "learn_problem_solving": "Various learning contents and mini challenges are available for you in the < Learn > section. Solve mini challenges by coding. Watch fun videos and learn to program.",
        "joy_create": "A Creative Space",
        "in_make": "In < Create > section",
        "make_contents": "In the <Create> section, create your own program with block-based programming language. Create simulation programs to test laws of Physics. Create animation program with your favorite characters. Bring your imagination to life with Entry. ",
        "and_content": "There is no limit to what you can create. You can experiment physical laws you’ve learned in science class, create animations featuring your favorite characters, and even make your own games. ",
        "share_collaborate": "A Sharing Space",
        "explore_contents": "The <Explore> section, showcases thousands of projects created and shared by the Entry community. Try out the fun and creative projects, see how they are coded, and improve them. You can also cooperate with your peers to create exciting projects.",
        "why_software": "Why is learning to code important?",
        "speak_obama_contents": "Learning these skills isn’t just important for your future. It’s important for our country’s future.",
        "obama": "Barack Obama",
        "us_president": "U.S President",
        "billgates_contents": "Learning to write programs stretches your mind, and helps you think better, creates a way of thinking about things that I think is helpful in all domains.",
        "billgates": "Bill Gates",
        "chairman_micro": "Chairman, Microsoft",
        "eric_contents": "For most people on Earth, the digital revolution hasn't even started yet. Within the next 10 years, all that will change. Let's get the whole world coding!",
        "eric": "Eric Schmidt",
        "sandbug_contents": "An understanding of computer science is becoming increasingly essential in today’s world. Our national competitiveness depends upon our ability to educate our children—and that includes our girls—in this critical field.",
        "sandbug": "sheryl Sandberg",
        "view_entry_tools": "Introducing Entry’s unplugged games for teaching programming.",
        "solve_problem": "Solve Mission",
        "solve_problem_content": "Mini challenges will help you learn the basics of programming.",
        "find_extra_title": "ENTRY Bot part finding extravaganza",
        "all_ages": "For all ages",
        "total": "Total",
        "step": "steps",
        "find_extra_contents": "Entry bot is special robot created one day at the Rutz Robot Toy Factory during a blackout. Help him find his missing parts and escape the factory while learning to code.",
        "software_play_contents": "Watch ‘Let’s Play Software’ , follow along the tutorials and learn to create fun programs.",
        "resources_contents": "Get various Entry educational materials for free",
        "from": "From",
        "sw_camp": "Software Creativity Camp, Ministry of Science, ICT and Future Planning",
        "elementary": "Elementary",
        "middle": "Middle school",
        "grades": "Grades",
        "lesson": "Lessons",
        "sw_contents_one": "This guidebook is for elementary students learn physical computing over a 5-lesson course. Students learn to use Entry and create images and stoires. In the final section, students use Arduino to create a musical keyboard",
        "sw_camp_detail": "Ministry of Science, ICT and Future Planning Software Creation Camp",
        "sw_contents_two": "This textbook allows middle school students to experience ENTRY and physical computing over a 5-lesson course. Students learn how to use ENTRY, and create a maze game and quiz program. In the final section, students use Arduino and keyboard to steer a car.",
        "sw_contents_three": "This is a teacher’s guide for starting computing classes in schools.  It contains a variety of unplugged activities and lesson plans using clips from ‘Let’s play, Software!’broadcasts. ",
        "naver_sw": "NAVER Let’s play, Software!",
        "teacher_teaching": "Teacher’s Guide (for elementary grades 5-6 and above)",
        "funny_sw": "Have Fun with Software",
        "sw_contents_four": "This textbook allows students to learn about computing in a fun and playful way through a variety of unplugged activities such as ENTRY Board, and teaches students the basic principles of programming via ENTRY Course Mode. Once they have got down the basics, students learn how to create stories, games, artistic works, and applications using ENTRY. The textbook allows students to create and present their own software. ",
        "ct_text_5": "Grow computational thinking with skills.",
        "teacher_grade_5": "교원 (초등학교 5학년)",
        "ct_text_5_content": "This teacher's guide contains 8 problem solving tasks. Each task is designed to reflect the revised National Curriculum and contains interdisciplinary themes. Cultivate computational thinking skills.",
        "ct_text_6": "교과서와 함께 키우는 컴퓨팅 사고력",
        "teacher_grade_6": "교원 (초등학교 6학년)",
        "ct_text_6_content": "실생활의 문제를 해결하자는 테마로 준비된 총 8개의 학습콘텐츠가 담긴 교사용 지도안입니다. 각 콘텐츠는 개정된 교육과정을 반영한 타교과와의 연계를 통해 다양한 문제를 만나고 해결해볼 수 있도록 설계되었습니다.  아이들이 컴퓨팅 사고력을 갖춘 융합형 인재가 될 수 있도록 지금 적용해보세요!",
        "sw_use": "All textbooks are for non-commercial use only, and can be used freely so long as the author is credited. ",
        "title": "Title",
        "writer": "By",
        "view": "View",
        "date": "Date",
        "find_id_pwd": "Find ID or Password",
        "send_email": "A link to change your password has been sent to you by email.",
        "user_not_exist": "This email does not exist.",
        "not_signup": "Haven't signed up yet?",
        "send": "Send",
        "sensorboard": "ENTRY Sensor Board",
        "physical_computing": "Physical Computing",
        "sensorboard_contents": "Using Arduino no longer requires building a circuit using lots of wires. With ENTRY Board, you can use LED lights, temperature, sound, light sensors, a slider, and switches by simply mounting it onto an Arduino board. Now anyone can easily create their own unique projects using ENTRY Board!",
        "entrybot_boardgame": "ENTRY-Bot Board Game",
        "unplugged": "Unplugged Activities",
        "unplugged_contents": "Learn the principles of programming through Entry-bot Board Game. By helping Entrybot escape the factory, you can learn to think like a computer scientist.",
        "entrybot_cardgame": "ENTRY Bot Cardgame : Bomb Tempest",
        "entrybot_cardgame_contents": "12 different types of bombs appear at the city of Entry! Dismantle the bombs one at a time and learn the basics of programming. By using the concepts of sequence, repetition and conditionals, save the City and become a hero!",
        "basic_learn": "Entry Basics",
        "basic_learn_contents": "Learn to program with Entry’s coursewares",
        "troubleshooting": "Problem Solving",
        "playsoftware": "Let's play, Software!",
        "make_own_lesson": "Create your own lessons and share them with everyone.",
        "group_lecture": "Lessons",
        "group_curriculum": "Courseware",
        "group_homework": "Assignment",
        "group_noproject": "No Project",
        "group_nolecture": "No Lessons",
        "group_nocurriculum": "No Courseware",
        "lecture_contents": "Create customized lessons with limited blocks.",
        "curriculum_contents": "Create a course by putting together series of lessons.",
        "grade_info": "Grades information",
        "difficulty": "Difficulty",
        "usage": "Usages",
        "learning_concept": "Learning concepts",
        "related_subject": "Related subjects",
        "show_more": "Show more",
        "close": "Close",
        "latest": "By Latest",
        "viewCount": "view count",
        "viewer": "By Viewers",
        "like": "By Likes",
        "comment": "By Comments",
        "entire_period": "Entire period",
        "today": "Today",
        "latest_week": "Latest 1 week",
        "latest_month": "Latest 1 month",
        "latest_three_month": "Latest 3 months",
        "current_password": "Current password",
        "change_password": "Change password",
        "incorrect_password": "Incorrect! Try again.",
        "incorrect_password_login": "The Username or Password you entered is incorrect.",
        "suspension_user": "The login of the account is prohibited.",
        "blocked_user": "Blocked!!",
        "new_password": "New password",
        "password_option_1": "Please use at least 5 letters and/or numbers.",
        "again_new_password": "Confirm new password",
        "enter_new_pwd": "Enter new password.",
        "confirm_new_pwd": "Confirm new password.",
        "enter_new_pwd_again": "Enter new password again.",
        "password_match": "Passwords do not match.",
        "incorrect_email": "Incorrect email. Try again.",
        "edit_button": "Edit info",
        "edit_profile": "Edit",
        "my_project": "My projects",
        "my_group": "My Class",
        "mark": "Marking",
        "prev_state": "Back",
        "profile_image": "Profile image",
        "insert_profile_image": "Please upload a profile image.",
        "at_least_180": "At least 180x180 pixels is recommended.",
        "upload_image": "Upload image",
        "about_me": "About me",
        "save_change": "Save changes",
        "basic_image": "Basic Image",
        "profile_condition": "Enter something about yourself. (in 50 characters)",
        "profile_back": "Go back",
        "make_project": "Create Project",
        "exhibit_project": "Exhibit Project",
        "art_list_shared": "Shared",
        "art_list_group_shared": "Group",
        "gl_mode_boost": "Boost Mode",
        "gl_not_supported": "Can not run in boost mode.\nClick OK to run in default mode.",
        "view_project": "View Code",
        "code_view": "View Code",
        "noResult": "No results found",
        "comment_view": "Comment",
        "upload_project": "Upload",
        "edit": "Edit",
        "save_complete": "Save",
        "just_like": "Like",
        "share": "Share",
        "who_likes_project": "Who likes the projects",
        "people_interest": "People interested projects",
        "none_person": "Nobody",
        "inserted_date": "Date",
        "last_modified": "Last Modified",
        "original_project": "Original project",
        "for_someone": "'s",
        "original_project_deleted": "The original project was deleted",
        "delete_project": "Delete",
        "delete_group_project": "Delete From List",
        "currnet_month_time": "months",
        "current_day_time": "days",
        "game": "Game",
        "animation": "Animation",
        "media_art": "Media Arts",
        "physical": "Physical",
        "etc": "ETC",
        "connected_contents": "Linking content",
        "connected_contents_content": "Discover the variety of content that can be done with the entry . If you're new software to learn easily from person to enjoy board games , you can take advantage of the Arduino and physical computing , such as creating a luxurious view of your own creation .",
        "basic_mission": "Basic mission : Entry bot Maze",
        "basic_mission_content": "A power outage at a toy robot factory magically enabled Entrybot to come to life. Help Entrybot escape the factory and find freedom!",
        "application_mission": "Application mission: Entry bot's Space Odyssey",
        "write_article": "Write",
        "write_contest": "Submit",
        "view_all_articles": "View all posts",
        "view_own_articles": "View my posts",
        "view_qna_articles": "View no answered posts",
        "learning_materials": "Learning materials",
        "download_materials": "Learning materials download",
        "download_button": "download",
        "download_all": "download all",
        "ebs_software_first": "<Let's Play Software> is a TV series created by Naver, EBS and Entry Labs. Learn the basic principles of programming. Watch the show, follow along the video tutorials, and learn to code!",
        "go_software": "Visit Let's play software!",
        "ebs_context": "Visit EBS",
        "ebs_context_hello": "Visit EBS",
        "category": "Category",
        "add_picture": "Add Picture",
        "upload_article": "Upload article",
        "list": "List",
        "report": "Report",
        "upload": "Upload",
        "staff_picks": "Staff Picks",
        "popular_picks": "Popular Projects",
        "lecture_header_more": "More Projects",
        "lecture_header_reset": "Reset",
        "lecture_header_reset_exec": "Reset to basic project",
        "lecture_header_restart_button": "Restart",
        "lecture_header_save": "Save",
        "lecture_header_save_content": "Save current lecture",
        "lecture_header_export_project": "Export to my project",
        "lecture_header_undo": "Undo",
        "lecture_header_redo": "Redo",
        "lecture_er_bugs": "Feedback",
        "lecture_container_tab_object": "Objects",
        "lecture_container_tab_video": "Video",
        "lecture_container_tab_project": "Final project",
        "lecture_container_tab_help": "Help",
        "illigal": "Illegal or inappropriate behavior",
        "verbal": "Verbal abuse or posting personal information",
        "commertial": "Posting for commercial purposes",
        "explicit": "Explicit content",
        "other": "Other",
        "check_one_more": "Please select the reason more than one.",
        "enter_content": "Please enter the reason for your report.",
        "report_result": "Please enter email address to be informed of report results. ",
        "report_success": "Your report was submitted successfully.",
        "etc_detail": "Please give details",
        "lecture_play": "Play",
        "list_view_link": "List",
        "lecture_intro": "Introduction Lessons",
        "study_goal": "Goals",
        "study_description": "Description",
        "study_created": "Created",
        "study_last_updated": "Updated",
        "study_remove": "Remove",
        "study_group_lecture_remove": "Remove From List",
        "study_group_curriculum_remove": "Remove From List",
        "study_edit": "Edit",
        "study_comments": "Comments",
        "study_comment_post": "Post",
        "study_comment_remove": "Remove",
        "study_comment_edit": "Edit",
        "study_comment_save": "Save",
        "study_guide_video": "Guide Video",
        "study_basic_project": "Initial Project",
        "study_done_project": "Complete Project",
        "study_usage_element": "Usage",
        "study_concept_element": "Concept",
        "study_subject_element": "Related",
        "study_computing_element": "Computational Thinking",
        "study_element_none": "None",
        "study_label_like": "Like",
        "study_label_interest": "Interest",
        "study_label_share": "Share",
        "study_label_like_people": "People who liked this lecture",
        "study_label_interest_people": "People who interested this lecture",
        "study_related_lectures": "Related lectures",
        "study_expand": "Show all",
        "study_collapse": "Collapse",
        "aftercopy": "Copied to clipboard",
        "study_remove_curriculum": "Are you sure to remove this course?",
        "content_required": " Please enter the contents.",
        "upload_not_supported_file_msg": "Not supported file type.",
        "study_remove_lecture": "Are you sure to remove this lesson?",
        "lecture_build": "Make a lesson",
        "lecture_build_step1": "1. Enter basic lesson information",
        "lecture_build_step2": "2. Selecte required functions",
        "lecture_build_step3": "3. Confirm all of information correctly.",
        "lecture_build_choice": "What is main content?",
        "lecture_build_project": "Entry Project",
        "lecture_build_video": "Lessons Video",
        "lecture_build_grade": "Grades",
        "lecture_build_goals": "Goals",
        "lecture_build_add_goal": "Add a goal",
        "lecture_build_attach": "Attachment",
        "lecture_build_attach_text": "Less than 20MB",
        "lecture_build_assist": "Additional",
        "lecture_build_youtube_url": "Paste a Youtube share link",
        "lecture_build_project_done": "Select a completed project.",
        "lecture_build_scene_text1": "Using scene function or not",
        "lecture_build_scene_text2": "",
        "lecture_build_object_text": "Using Object add function or not",
        "lecture_build_blocks_text1": "Select required blocks only.",
        "lecture_build_blocks_text2": "",
        "lecture_build_basic1": "Select a project.",
        "lecture_build_basic2": "User start with this project.",
        "lecture_build_help": "",
        "lecture_build_help_never": "Close permanently",
        "lecture_build_close": "Close",
        "lecture_build_scene": "Scene 1",
        "lecture_build_add_object": "Add Object",
        "lecture_build_start": "Start",
        "lecture_build_tab_code": "Block",
        "lecture_build_tab_shape": "Shape",
        "lecture_build_tab_sound": "Sound",
        "lecture_build_tab_attribute": "Attribute",
        "lecture_build_tab_table": "Table",
        "lecture_build_block_category": "Select block category.",
        "lecture_build_attr_all": "All",
        "lecture_build_attr_var": "Variable",
        "lecture_build_attr_signal": "Signal",
        "lecture_build_attr_list": "List",
        "lecture_build_attr_func": "Function",
        "lecture_build_edit": "Edit",
        "lecture_build_remove": "Remove",
        "curriculum_build": "Create a courseware",
        "curriculum_step1": "Fill information about this course.",
        "curriculum_step2": "Select lessons for this course.",
        "curriculum_step3": "Confirm information.",
        "curriculum_lecture_upload": "Upload",
        "curriculum_lecture_edit": "Edit",
        "curriculum_lecture_open": "Open",
        "group_lecture_add": "Add my group lessons",
        "group_curriculum_add": "Add my group curriculum",
        "group_lecture_delete": "Delete",
        "group_curriculum_delete": "Delete",
        "group_select": "",
        "group_studentNo": "Student No",
        "group_username": "Name",
        "group_userId": "ID",
        "group_tempPassword": "Modify PW",
        "group_gender": "Gender",
        "group_studentCode": "Code",
        "group_viewWorks": "View Works",
        "added_group_lecture": "lessons deleted",
        "added_group_curriculum": "Course deleted",
        "deleted_group_lecture": "lessons deleted",
        "deleted_group_curriculum": "Course deleted",
        "modal_my": "My",
        "modal_interest": "Marked",
        "modal_project": "Project",
        "section": "Sections",
        "connect_hw": "connect hardware",
        "connect_message": "Connected to %1",
        "connect_fail": "Connect fail",
        "interest_curriculum": "Interest",
        "marked_curriculum": "Interest Curriculum",
        "searchword_required": "Please enter your search keyword.",
        "file_required": "File is required.",
        "file_name_error": "please insert correct file name",
        "file_upload_max_count": "You can only upload 10 files at a time.",
        "file_upload_max_size_image": "You can only upload less than 5MB in file size.",
        "image_file_only": "You can only upload jpg, png, bmp files.",
        "file_upload_max_size": "You can only upload less than 10MB in file size.",
        "curriculum_modal_lectures": "My Lessons",
        "curriculum_modal_interest": "Interest",
        "group_curriculum_modal_curriculums": "My Courses",
        "group_curriculum_modal_interest": "Interest",
        "picture_import": "Import a picture",
        "picture_select": "Select a picture",
        "lecture_list_view": "list",
        "play_software_2": "Let’s play, Software2!",
        "play_software_2_content": "<Let's Play Software> is a TV series created by Naver, EBS and Entry Labs. Learn the basic principles of programming. Watch the show, follow along the video tutorials, and learn to code!",
        "open_project_to_all": "Open",
        "close_project": "Close",
        "category_media_art": "Media Art",
        "go_further": "Go further",
        "marked_project": "Favorite Project",
        "marked_group_project": "Favorite group project",
        "basic": "Basic",
        "application": "Application",
        "the_great_escape": "The Great Escape",
        "escape_guide_1": "ENTRY Bot suddenly began to think for himself during a power failure at the robot dog factory! ",
        "escape_guide_1_2": " Help ENTRY Bot escape the factory and find his freedom!",
        "escape_guide_2": "ENTRY Bot is missing too many parts to make it far. Help him find his parts as he makes his way out the factory!",
        "escape_guide_2_2": "Objectives: Sequential Execution",
        "escape_guide_3": "I’ve finally escaped the factory! But it’s still a long way to the village. I think I’m fixed up enough to make it there without too much difficulty. Hey, what’s that robot?",
        "escape_guide_3_2": "Objectives: Repetitive and Conditional Statements",
        "escape_guide_4": "We’re finally getting close to the village! I’m starting to really get the hang of this! I think it might be better to just use the blocks from memory. If I just recharge my battery here, I’ll be able to live free forever.",
        "escape_guide_4_2": "Objectives: Definitions of Function and Function Call",
        "space_travel_log": "Space Travel Log",
        "space_guide_1": "ENTRY Bot has finally completed his exploration of distant space. He’s trying to make his way back home to Earth, but his path is being blocked by a bunch of space rocks! Help ENTRY Bot make it back to Earth safely!",
        "space_guide_2": "It’s finally time to return to Earth! I can’t wait to get back and rest! Tell me the positions of the rocks ahead so I can navigate through them! I’ll go the way you tell me to!",
        "space_guide_2_2": "Objective: Reiterating IF Statements and Logical Operation",
        "cfest_mission": "ENTRY Experiential Mission",
        "maze_1_intro": "Hi. I’m ENTRY Bot. I’m about to save my injured friends and I need your help. Help me save my friends! First, set up the ‘Move forward one space’ block and press ‘Start’.",
        "maze_1_title": "How to Start",
        "maze_1_content": "How do I move ENTRY Bot?",
        "maze_1_detail": "1. Take a block from the Block Box and connect it with the ‘When Start is pressed’ block. \n 2. Press Start once you have finished assembling. \n 3. I will move in the order of your assembled blocks from top to bottom. ",
        "maze_2_intro": "Alright! You’ve saved the first of my friends! Now let’s save my next friend. Oh! There’s a beehive in the way! Use the Jump Over block to avoid the beehive and save my friend!",
        "maze_2_title_1": "Jump Over",
        "maze_2_content_1": "How do I get around obstacles?",
        "maze_2_detail_1": "Sometimes your path may be blocked by an obstacle. \n When there’s an obstacle in your path, you need to use the ‘Jump Over’ block.",
        "maze_2_title_2": "How to Start",
        "maze_2_content_2": "How do I move ENTRY Bot?",
        "maze_2_detail_2": "1. Take a block from the Block Box and connect it with the ‘When Start is pressed’ block. \n 2. Press Start once you have finished assembling. \n 3. I will move in the order of your assembled blocks from top to bottom. ",
        "maze_3_intro": "Awesome! Now let’s go save another friend! How about we use the ‘Repeat’ block that my other friend gave use? You can easily repeat the same movements over again using the ‘Repeat’ block! Try changing the number of times to repeat. ",
        "maze_3_title": "Repeat Block (1)",
        "maze_3_content": "How do I use the ‘Repeat (3)’ block?",
        "maze_3_detail": "To perform the same action/s more than once, you need to use the ‘Repeat’ block. \n Put the blocks that you want to repeat inside the Repeat box and select the number of times you want to repeat.",
        "maze_4_intro": "Super! Not too many robot friends left to save now. Take us to my friend by using the ‘Jump Over’ block on repeat while also evading the beehive!",
        "maze_4_title": "Repeat Block (1)",
        "maze_4_content": "How do I use the ‘Repeat (3)’ block?",
        "maze_4_detail": "To perform the same action/s more than once, you need to use the ‘Repeat’ block. \n Put the blocks that you want to repeat inside the Repeat box and select the number of times you want to repeat.",
        "maze_5_intro": "Cool! Now let’s try using the ‘Repeat’ block and ‘IF’ block together! Using the ‘IF’ block, you can turn in a direction where there are no walls when you come across a wall. Well then, shall we set off to save my friend?",
        "maze_5_title_1": "IF block",
        "maze_5_content_1": "How does the ‘IF’ block work?",
        "maze_5_detail_1": "You can determine what action to take when you come across a {IMAGE}. \n The blocks are used only when you come across a {IMAGE}. \n If there is none, the block is not used.",
        "maze_5_title_2": "Repeat Block (2)",
        "maze_5_content_2": "How do I use the ‘Repeat until’block?",
        "maze_5_detail_2": "Using the ‘Repeat until’block, you can determine until when a specified action is repeated. \n Just put the blocks you want to repeat inside the ‘Repeat until’ block. \n Then, the repetition will stop when you reach the space where the {IMAGE} is located. ",
        "maze_6_intro": "Only one friend left! Just do as we’ve practiced and you’ll succeed! Now, let’s go save him!",
        "maze_6_title_1": "IF block",
        "maze_6_content_1": "How does the ‘IF’ block work?",
        "maze_6_detail_1": "You can determine what action to take when you come across a {IMAGE}. \n The blocks are used only when you come across a {IMAGE}. \n If there is none, the block is not used.",
        "maze_6_title_2": "Repeat Block (2)",
        "maze_6_content_2": "How do I use the ‘Repeat until’block?",
        "maze_6_detail_2": "Using the ‘Repeat until’block, you can determine until when a specified action is repeated. \n Just put the blocks you want to repeat inside the ‘Repeat until’ block. \n Then, the repetition will stop when you reach the space where the {IMAGE} is located. ",
        "maze_programing_mode_0": "Block Coding",
        "maze_programing_mode_1": "Javascript",
        "maze_operation1_title": "STEP 1 – Javascript mode guide",
        "maze_operation1_1_desc": "Hi, I'm Entrybot, the robot dog. Give me commands to reach the mission goals. You can learn about the mission when you begin under <span class=\\\"textShadow\\\">\\'Goals.\\'</span>",
        "maze_operation1_2_desc": "Once you learn your goal, you need to give me <b>commands</b>. <span class=\\\"textUnderline\\\">\\’Command Box\\’</span> is where the <b>commands</b> reside. You can create <b>commands</b> using <b>mouse</b> and <b>keyboard.</b> With the <span class=\\\"textShadow\\\">mouse</span>, you can click or drag the <b>commands</b> to create instructions.",
        "maze_operation1_2_textset_1": "How to click on the commands",
        "maze_operation1_2_textset_2": "How to drag and drop commands",
        "maze_operation1_3_desc": "If you want to use the <span class=\\\"textShadow\\\">keyboard</span> to give commands, <b>type in the commands</b> in the \\’Command Box.\\’\nWhen you type in the commands, be careful not to ommit <span class=\\\"textShadow\\\">() and ;</span>",
        "maze_operation1_4_desc": "Once you have finished inputting the commands, click <span class=\\\"textShadow\\\">[Run.]</span></br>I will move according to your code once you click [Run.]</br>If you want to know more about each command, check out the <span class=\\\"textShadow\\\">[Command guide.]</span>",
        "maze_operation7_title": "STEP 7 - How repeat works (repeat number of times)",
        "maze_operation7_1_desc": "Repeating the <b>same command</b> over and over is a cumbersome task.\nSimplify the command using the <span class=\\\"textShadow\\\">repeat</span> commands.",
        "maze_operation7_2_desc": "Then let's look at how we can simplify commands that repeat.</br>First, click the repeat command. Then change the <span class=\\\"textShadow\\\">number</span> in<span class=\\\"textShadow\\\">i<1</span></br>Then insert the commands to repeat within  <span class=\\\"textShadow\\\"> { }</span>",
        "maze_operation7_3_desc": "For example, this command executes <span class=\\\"textBadge number1\\\"></span>move(); 10 times.\nIt is the same as command <span class=\\\"textBadge number2\\\"></span>",
        "maze_operation7_4_desc": "When using commands, make sure to spell the  <span class=\\\"textShadow\\\">commands correctly within { } </span></br>and that you don't forget <span class=\\\"textShadow\\\">’;'</span>.</br>Learn more about the commands in the 'command guide'",
        "maze_operation7_1_textset_1": "When using commands repeatedly",
        "maze_operation7_1_textset_2": "When using repeat command",
        "maze_operation7_2_textset_1": "Number of times to repeat",
        "maze_operation7_2_textset_2": "Commands to repeat",
        "maze_operation7_4_textset_1": "When ({}) is missing",
        "maze_operation7_4_textset_2": "When semicolon(;) is missing",
        "study_maze_operation8_title": "STEP 4 - How repeat works (repeat number of times)",
        "study_maze_operation16_title": "STEP 4 - How repeat works (repeat number of times)",
        "study_maze_operation1_title": "STEP 1 - How repeat works (repeat number of times)",
        "maze_operation9_title": "STEP 9 - How repeat works(Conditional loop)",
        "maze_operation9_1_desc": "We learned about repeating for set number of times.</br>This time, let's explore <span class=\\\"textShadow\\\">commands for repeating continuously.</span></br>When you use this command, the action will be executed until end of the mission.</br>Insert commands to be repeated within ({ }).",
        "maze_operation9_2_desc": "<span class=\\\"textBadge number1\\\"></span> move(); right(); until end of mission.\nIt is the same as command <span class=\\\"textBadge number2\\\"></span>",
        "maze_operation9_3_desc": "Make sure to spell the <span class=\\\"textShadow\\\">commands correctly within { }</span>\nand make sure <span class=\\\"textShadow\\\">‘true'</span> isn't missing!\nYou can learn more about this command in the 'command guide'",
        "maze_operation9_1_textset_1": "Commands to repeat",
        "maze_operation9_3_textset_1": "When ({}) is missing",
        "maze_operation9_3_textset_2": "When semicolon(;) is missing",
        "maze_operation9_3_textset_3": "When semicolon(;) is missing",
        "study_maze_operation3_title": "STEP 3 - How repeat works(Conditional loop)",
        "study_maze_operation4_title": "STEP 4 – How condition works",
        "study_ai_operation4_title": "STEP 4 – How condition works",
        "study_ai_operation6_title": "STEP 6 – How condition works",
        "study_ai_operation7_title": "STEP 7 – How condition works",
        "study_ai_operation8_title": "STEP 8 – How condition works",
        "study_ai_operation9_title": "STEP 9 – How condition works",
        "maze_operation10_title": "STEP 10 – How condition works",
        "maze_operation10_1_desc": "We learned about repeating commands until end of the mission.</br>This time, let's explore the <span class=\\\"textShadow\\\">commands that are only executed under certain conditions.</span></br>As you can see in <span class=\\\"textBadge number2\\\"></span>, using conditional statement can make commands <b>more efficient.</b>",
        "maze_operation10_2_desc": "conditional statement can be split into  <span class=\\\"textShadow\\\">condition</span> and commands to be <span class=\\\"textShadow\\\">executed when met with the condition.</span></br>First, let's look at the <span class=\\\"textUnderline\\\">conditions.</span> Insert the condition within <span class=\\\"textUnderline\\\">( )</span> that follows ‘if'.</br>For example <span class=\\\"textBadge number1\\\"></span> <span class=\\\"textUnderline\\\">if(front == ‘wall')</span> means, \\’if there is a wall in front of me.\\’",
        "maze_operation10_3_desc": "Now let's explore  <span class=\\\"textUnderline\\\">commands to execute when met with the condition.</span> These commands are tied within curly <span class=\\\"textShadow\\\">braces {}</span> and are executed when met with the given condition.When condition is not met, the commands are ignored.Let's look at an example <span class=\\\"textBadge number1\\\"></span>. If the condition is 'when a wall is in front of me', and the condition is met, then <b>I execute the commands within the braces and turn right following the command right();</b>",
        "maze_operation10_4_desc": "The <span class=\\\"textShadow\\\">conditional statements</span> are often used with <span class=\\\"textShadow\\\">repeat commands.</span></br>Go straight and turn only when met with a wall. </br>I can create commands in the <span class=\\\"textUnderline pdb5\\\">order of <span class=\\\"textBadge number1\\\"></span><span class=\\\"textBadge number2\\\"></span><span class=\\\"textBadge number3\\\"></span></span>",
        "maze_operation10_1_textset_1": "<b>[commands]</b>",
        "maze_operation10_1_textset_2": "<span class=\\\"textMultiline\\\">move 2 forward</br>turn right,</br>move 3 forward</br>turn right, move forward…</span>",
        "maze_operation10_1_textset_3": "<b>[conditional statements]</b>",
        "maze_operation10_1_textset_4": "<span class=\\\"textMultiline\\\">Go forward </br><span class=\\\"textEmphasis\\\">'when met with a wall’</span></br>turn right!</span>",
        "maze_operation10_2_textset_1": "condition",
        "maze_operation10_2_textset_2": "commands to execute when condition is met",
        "maze_operation10_3_textset_1": "condition",
        "maze_operation10_3_textset_2": "commands to execute when condition is met",
        "maze_operation10_4_textset_1": "<span class=\\\"textMultiline\\\">Go forward </br>until end of mission</span>",
        "maze_operation10_4_textset_2": "<span class=\\\"textMultiline\\\">Go forward </br>until met with a wall</span>",
        "maze_operation10_4_textset_3": "<span class=\\\"textMultiline\\\">Go forward </br>until met with a wall </br>then turn right</span>",
        "study_maze_operation18_title": "STEP 6 – How condition works",
        "maze_operation15_title": "STEP 15 – How function works",
        "maze_operation15_1_desc": "It is a cumbersome task to type out the commands that are used often.</br><span class=\\\"textUnderline\\\">Give a name to the set of commands</span> that are used often.</br><b>Then call the set of commands by its name to create commands conveniently.</b></br>These sets commands are called <span class=\\\"textShadow\\\">'functions'.</span> Now let's explore what functions are.",
        "maze_operation15_2_desc": "Using a function involves <b>process of creating a function</b> by grouping a set of functions, and calling the set of commands by <b>'call function’.</b></br>Let's take a look at the process of defining a function.To define a function, give a function name and set of commands to execute.</br>First input <span class=\\\"textShadow\\\">‘function'</span> and then give the <span class=\\\"textShadow\\\">function name.</span> This time, I'll call it <span class=\\\"textShadow\\\">promise.</span></br>Once you've given it a name, insert <span class=\\\"textUnderline\\\">().</span> Then type in <span class=\\\"textUnderline\\\">({ })</span>.<span class=\\\"textUnderline\\\">Once you insert the commands within these brackets,</span> you have finished defining a function!",
        "maze_operation15_3_desc": "Take a look at this command. I created a function called  <span class=\\\"textShadow\\\">promise</span></br>When I call this function, then the commands within the <span class=\\\"textUnderline\\\">brackets({})</span> will execute</br>move();</br>move();</br>left();</br>",
        "maze_operation15_4_desc": "To call and execute functions, <b>input the name of the functions, then add '();' behind it.</b></br>So to call a function called 'promise', I need to type <span class=\\”textShadow\\\">promise();</span> </br>to execute the function.</br>When I make commands like <span class=\\\"number1 textBadge\\\"></span>, the program will execute as that of <span class=\\\"number2 textBadge\\\"></span></br>To use the function, define function as <span class=\\\"number1 textBadge\\\"></span> and call it.",
        "maze_operation15_1_textset_1": "Checking the commands that are used often",
        "maze_operation15_1_textset_2": "Giving a name for set of commands",
        "maze_operation15_1_textset_3": "Calling a set of commands",
        "maze_operation15_2_textset_1": "Name of the command set (function name)",
        "maze_operation15_2_textset_2": "commads to group as a set",
        "maze_operation15_3_textset_1": "Name of the command set (function name)",
        "maze_operation15_3_textset_2": "commads to group as a set",
        "maze_operation15_4_textset_1": "Defining function",
        "maze_operation15_4_textset_2": "Calling function",
        "maze_operation15_4_textset_3": "Real situation",
        "maze_object_title": "Object info",
        "maze_object_parts_box": "Tool box",
        "maze_object_trap": "trap",
        "maze_object_monster": "monster",
        "maze_object_obstacle1": "obstacle",
        "maze_object_obstacle2": "bee",
        "maze_object_obstacle3": "banana",
        "maze_object_friend": "friend",
        "maze_object_wall1": "wall",
        "maze_object_wall2": "wall",
        "maze_object_wall3": "wall",
        "maze_object_battery": "battery",
        "maze_command_ex": "example",
        "maze_command_title": "command guide",
        "maze_command_move_desc": "moves entrybot one forward",
        "maze_command_jump_desc": "jumps over obstacles like the image below.</br><div class=\\\"obstacleSet\\\"></div>",
        "maze_command_jump_desc_elec": "jumps over obstacles like the image below.</br><div class=\\\"obstacle_elec\\\"></div>",
        "maze_command_right_desc": "turn 90 degrees right in place.",
        "maze_command_left_desc": "turn 90 degrees left in place.",
        "maze_command_for_desc": "repeat commands within curly braces <span class=\\\"textShadow\\\">{}</span> for <span class=\\\"textShadow\\\">given number</span> of times.",
        "maze_command_while_desc": "repeat commands within curly braces <span class=\\\"textShadow\\\">{}</span> until end of mission",
        "maze_command_slow_desc": "When condition <span class=\\\"textShadow\\\">'when met with a wall’</span> is fulfilled, </br>execute commands within curly braces <span class=\\\"textShadow\\\">{}</span>",
        "maze_command_if1_desc": "When condition <span class=\\\"textShadow\\\">'when met with a wall’</span> is fulfilled, </br>execute commands within curly braces <span class=\\\"textShadow\\\">{}</span>",
        "maze_command_if2_desc": "When condition <span class=\\\"textShadow\\\">'when met with a beehive’</span> is fulfilled,</br>execute commands within curly braces <span class=\\\"textShadow\\\">{}</span>",
        "maze_command_if3_desc": "When condition <span class=\\\"textShadow\\\">'when met with a banana’</span> is fulfilled,</br>execute commands within curly braces <span class=\\\"textShadow\\\">{}</span>",
        "maze_command_promise_desc": "when a <span class=\\\"textShadow\\\">function</span> called 'promise' is defined and executed, </br>then the functions within the curly braces <span class=\\\"textShadow\\\">{}</span> will execute. ",
        "perfect": "Perfect! You succeeded using ",
        "succeeded_using_blocks": "  blocks!",
        "succeeded_using_commands": "  commands!",
        "awesome": "Awesome! You succeeded using just",
        "succeeded_go_to_next": "  blocks!",
        "good": "Good!",
        "but": "\n But, there is a way to succeed using just ",
        "try_again": "  blocks. \nWhy don’t you try again?",
        "try_again_commands": "  commands. \nWhy don’t you try again?",
        "cfest_success": "Awesome! You helped save my friends! \n Looks like you’re a natural born programmer! \n See you again soon!",
        "succeeded_and_cert": "blocks!\n My certificate of completion is ready!",
        "cause_msgs_1": "Oh dear, it’s a dead end. Try again.",
        "cause_msgs_2": "Oops. There’s nothing to jump over. Try again.",
        "cause_msgs_3": "Ouch! That hurt. You should have jumped over this. Try again.",
        "cause_msgs_4": "Sorry, but you need to use the below blocks in this level. \n Do you want to try again?",
        "cause_msgs_5": "Uh oh… You’ve run out of blocks. Try again.",
        "cause_msgs_6": "Uh oh… You’ve run out of commands. Try again.",
        "close_experience": "The\nEnd",
        "replay": "Replay",
        "go_to_next_level": "Next",
        "move_forward": "Move forward",
        "turn_left": "Left",
        "turn_right": "Right",
        "turn_en": "Turn ",
        "turn_ko": "",
        "jump_over": "Jump Over",
        "when_start_is_pressed": "When Start is pressed",
        "repeat_until_ko": "",
        "repeat_until_en": "Repeat until",
        "repeat_until": "Repeat until",
        "if_there_is_1": "If there is a ",
        "if_there_is_2": "",
        "used_blocks": "Blocks used",
        "maximum": "Maximum",
        "used_command": "Command used",
        "maximum_command": "Maximum command",
        "block_box": "Block Box",
        "block_assembly": "Block Assembly",
        "command_box": "Command Box",
        "command_assembly": "Command Assembly",
        "start": "Start",
        "engine_running": "Play",
        "engine_replay": "Replay",
        "goto_show": "Learn more",
        "make_together": "Let's build  together!",
        "make_together_content": "Entry is created with teachers and students",
        "project_nobody_like": "Click 'Like', if you like it!",
        "project_nobody_interest": "Click 'Mark' to keep it on your blog.",
        "lecture_nobody_like": "Click 'Like', if you like it!",
        "lecture_nobody_interest": "Click 'Mark' to keep it on your blog.",
        "course_nobody_like": "Click 'Like', if you like it!",
        "course_nobody_interest": "Click 'Mark' to keep it on your blog.",
        "before_changed": "before changed",
        "after_changed": "after changed",
        "from_changed": "( From 17 Apr 2016 ) ",
        "essential": "essential",
        "access_term_title": "Hello we are an educational institute Entry . \n Thank you for loving your entry \nFrom April 17, 2016 Entry Training Institute Website Terms and Conditions \n  is amended to read as follows:",
        "member_info": "Member information",
        "personal_info": "Agree to the transfer of personal information.",
        "option": "select one",
        "news": "news",
        "edu_material": "materials",
        "latest_news": "Latest news",
        "edu_data": "Educational",
        "training_program": "Training",
        "footer_phrase": "Entry is a nonprofit education platform powered by Naver and CONNECT Foundation",
        "footer_use_free": "All materials created by Entry Labs may be used freely for educational purposes as long as the original source is credited.",
        "footer_description_1": "Entry is a nonprofit education platform.",
        "footer_description_2": "All materials created by Entry Labs may be used freely for educational purposes as long as the original source is credited.",
        "nonprofit_platform": "nonprofit educational platform",
        "this_is": "powered by Naver and CONNECT Foundation",
        "privacy": "Privacy policy",
        "entry_addr": "16F, 6, Buljeong-ro, Bundang-gu, Seongnam-si, Gyeonggi-do",
        "entry_addr_additional_phone": "1522-9182",
        "entry_addr_additional_opensource": "Open Source License",
        "phone": "phone",
        "alert_agree_term": "Please agree to ENTRY’s Terms of Use",
        "alert_private_policy": "Please agree to the collection and use of personal information.",
        "agree": "Agree",
        "optional": "option",
        "start_software": "first step of software education",
        "analyze_procedure": "절차",
        "analyze_repeat": "반복",
        "analyze_condition": "분기",
        "analyze_interaction": "상호작용",
        "analyze_dataRepresentation": "데이터 표현",
        "analyze_abstraction": "추상화",
        "analyze_sync": "병렬 및 동기화",
        "jr_intro_1": "Hi! My name is Juny! My friend Entry-Bot is by my right side. Please take me to him! ",
        "jr_intro_2": "Entry-Bot is by my left! Let's go the left side. ",
        "jr_intro_3": "Entry-Bot is by my top side. Please help me meet my friend. ",
        "jr_intro_4": "Come on! Let's meet Entry-Bot! He is by my bottom side. ",
        "jr_intro_5": "Wow! My friend is far away from me. Can you guide me so I can meet Entry-Bot ",
        "jr_intro_6": "Entry-Bot is really far away from here! But It's okay. If we use repeat block, we could reach the Entry-Bot easily.",
        "jr_intro_7": "There are beautiful flowers here! Let's give it to my friend!",
        "jr_intro_8": "On a way to my friend, you can see the flower. Let's give it to my friend.",
        "jr_intro_9": "Oh, my friend is far away from me. Let's find a fastest way to him!",
        "jr_intro_10": "There are flowers! Let's pick it up! ",
        "jr_intro_11": "We should go right side exactly 5 times! Let's use repeat block so we can reach there more easily",
        "jr_intro_12": "Let's meet my friend Entry-Bot using repeat block.",
        "jr_intro_13": "With this misplaced block, I can't reach my friend. Please change the input number of repeat block.",
        "jr_intro_14": "Please take me to my friend Entry-Bot using repeat block.",
        "jr_intro_15": "Entry-Bot is really far away from here! But It's okay. If we use repeat block, we could reach the Entry-Bot easily.",
        "jr_whats_ur_name": "What is your name to be showned on certification.",
        "jr_down_cert": "Certification",
        "jr_popup_prefix_1": "Hooray! I met Entry-Bot!",
        "jr_popup_prefix_2": "Nice! I met Entry-Bot! But we can make it with fewer blocks. How about try again?",
        "jr_popup_prefix_3": "Hooray! I got my backpack!",
        "jr_popup_prefix_4": "Great! I have my backpack! But we can make it with fewer blocks. How about we try again?",
        "jr_popup_suffix_1": "Thank you! I had so much fun with you. See you around!",
        "jr_popup_suffix": "Thanks to you! I had fun time with Entry-Bot. See you around~",
        "jr_fail_dont_go": "Oops, I can't go there. Please guide me again~",
        "jr_fail_dont_know": "Hmm. Where should I go? Please guide me more~",
        "jr_fail_no_flower": "There is no flower. Use 'flower block' at the flower!",
        "jr_fail_forgot_flower": "I need more flowers for Entry-Bot. Let's try again.",
        "jr_fail_need_repeat": "Uh? I should use 'repeat block' ! Let's try again with the block~",
        "jr_hint_1": "Hi! My name is Juny! My friend Entry-Bot is by my right side. Please take me to him!",
        "jr_hint_2": "Entry-Bot is by my left! Let's go the left side.",
        "jr_hint_3": "Entry-Bot is by my top side. Please help me meet my friend.",
        "jr_hint_4": "Come on! Let's meet Entry-Bot! He is by my bottom side.",
        "jr_hint_5": "Wow! My friend is far away from me. Can you guide me so I can meet Entry-Bot?",
        "jr_hint_6": "Because of the blocks that put together by mistake, I can't reach my friend. Please fix it for me so I can reach my friend Entry-Bot!",
        "jr_hint_7": "There are beautiful flowers here! Let's give it to my friend!",
        "jr_hint_8": "On a way to my friend, you can see the flower. Let's give it to my friend.",
        "jr_hint_9": "Oh, my friend is far away from me. Let's find a fastest way to him!",
        "jr_hint_10": "Oops, I can't reach to my friend because of misplaced blocks. Please fix it so I can give all of flowers to my friend.",
        "jr_hint_11": "We should go right side exactly 5 times! Let's use repeat block so we can reach there more easily.",
        "jr_hint_12": "Let's meet my friend Entry-Bot using repeat block.",
        "jr_hint_13": "With this misplaced block, I can't reach my friend. Please change the input number of repeat block.",
        "jr_hint_14": "Please take me to my friend Entry-Bot using repeat block.",
        "jr_hint_15": "Entry-Bot is really far away from here! But It's okay. If we use repeat block, we could reach the Entry-Bot easily.",
        "jr_certification": "Certification",
        "jr_congrat": "Congratulation!",
        "jr_congrat_msg": "Successfully completed for problem solving courses.",
        "jr_share": "Share",
        "go_see_friends": "Let us see your friends~!",
        "junior_naver": "Junior Naver",
        "junior_naver_contents_1": "'s  cool bear ,  Juni  came looking for entries! ",
        "junior_naver_contents_2": "But Juni' is difficult to find a way yet. ",
        "junior_naver_contents_3": "Please tell Juni to go , so he can meet entrybot.",
        "basic_content": "Basic",
        "jr_help": "Help",
        "help": "Help",
        "cparty_robot_intro_1": "Hi, My name is Entry-bot. I need to to fix myself. Please help me get my parts with 'move forward' block.",
        "cparty_robot_intro_2": "Great! My part is right in front of me but I need to be careful not to get electrocuted. Use 'jump over' block to get to the part.",
        "cparty_robot_intro_3": "Great! There's my part! The path is challenging but using the 'turn' block I can get there easily! Will you help?",
        "cparty_robot_intro_4": "Nice! I feel a lot better! Try using the 'turn' block and 'jump over' block to get the parts!",
        "cparty_robot_intro_5": "Thanks to you, I'm feeling great! Make sure to use 'turn' and 'jump over' to get the part!",
        "cparty_robot_intro_6": "Great! I feel like I can repeat! Use repeat to get to the part!",
        "cparty_robot_intro_7": "Watch out! There are dangerous holes to jump over but no worries! Let's use repeat to get to the part.",
        "cparty_robot_intro_8": "Oh no! The part is far from here. Using repeat can get me there easily. Help me! ",
        "cparty_robot_intro_9": "Wow~ I'm almost complete! Let's use 'repeat' to get to the part!",
        "cparty_robot_intro_10": "Cool! The last part will make me complete! Let's use 'repeat' to get to my last part! ",
        "cparty_car_intro_1": "Hi, My name is Entry-bot. I need battery pack to travel! Can you me get to the battery pack?",
        "cparty_car_intro_2": "Good! We can't go straight this time! Let's use the 'turn left/right' block to get to the battery pack.",
        "cparty_car_intro_3": "Great! There's a speed bump on our way. It'll be dangerous to drive fast. Let's use the 'go slow' block to get to the battery pack.",
        "cparty_car_intro_4": "Yeah! The drive doesn't look easy but using the move forward, 'turn left/ right' block",
        "cparty_car_intro_5": "The road looks challenging but we can safely get to the battery pack by repeating 'turn left/ right' blocks",
        "cparty_car_intro_6": "There are obstacles on our way so let me know how to get around one!",
        "cparty_car_intro_7": "Great! Let's use the 'if' block to get around obastacles and get to the battery pack.",
        "cparty_car_intro_8": "There are two speed bumps this time! Use 'go slow' block to safely travel to the battery pack.",
        "cparty_car_intro_9": "The road looks challenging but using the 'repeat' block and 'if' block, we can make it! Help me get to the battery pack!",
        "cparty_car_intro_10": "Awesome! We're almost there. Let's get that last battery pack!",
        "cparty_car_popup_prefix_1": "Hooray! I got a battery!",
        "cparty_car_popup_prefix_2": "Nice! I got a battery! But we can make it with fewer blocks. How about try again?",
        "cparty_car_popup_prefix_2_text": "Nice! I got a battery! But we can make it with fewer commands How about try again?",
        "cparty_car_popup_suffix": "Thanks to you! I've got all the battery. See you around~",
        "all_grade": "All grades",
        "grade_e3_e4": "Elementary 3~4th grade & up",
        "grade_e5_e6": "Elementary 5~6th grade & up",
        "grade_m1_m3": "Middle School 1~3rd grade & up",
        "entry_first_step": "Entry First Steps",
        "entry_monthly": "Monthly Entry",
        "play_sw_2": "Let's Play  Software 2",
        "entry_programming": "Let's Program!",
        "entry_recommanded_course": "Entry Recommended Courses",
        "introduce_course": "Follow along and create various projects made easy and fun for everyone!",
        "all_free": "*Course videos, customized projects, and resources are provided for free.  ",
        "cparty_result_fail_1": "Oops, I can't go there. Please guide me again~",
        "cparty_result_fail_2": "Ouch! That hurt. You should have jumped over this. Try again.",
        "cparty_result_fail_3": "I'm worn out! Try using the blocks below and make the travel easier.",
        "cparty_result_fail_4": "Hmm... Where should I go? Please give me further instructions.",
        "cparty_result_fail_5": "Oh no! You need to slow down at the speed bump. Try using the 'go slow' block.",
        "cparty_result_success_1": "Hooray! I got a parts",
        "cparty_result_success_2": "Nice! I got a parts! But we can make it with fewer blocks. How about we try again?",
        "cparty_result_success_2_text": "Nice! I got a parts! But we can make it with fewer commands How about we try again?",
        "cparty_result_success_3": "Thanks to you! I've fixed all~ See you around~",
        "cparty_insert_name": "insert your name",
        "offline_file": "File",
        "offline_edit": "Edit",
        "offline_undo": "Un-do",
        "offline_redo": "Re-do",
        "offline_copy": "copy",
        "offline_paste": "paste",
        "offline_cut": "cut",
        "offline_quit": "Quit",
        "select_one": "Please select one.",
        "evaluate_challenge": "please evaluate the level of difficulty of the mission challenged.",
        "very_easy": "very easy",
        "easy": "easy",
        "normal": "normal",
        "difficult": "difficult",
        "very_difficult": "very difficult",
        "save_dismiss": "You didn't saved your changes. Are you sure want to continue?",
        "entry_info": "About Entry",
        "actual_size": "Actual Size",
        "zoom_in": "Zoom In",
        "zoom_out": "Zoom Out",
        "cparty_jr_intro_1": "Hi! My name is Entry-Bot! Please help me get my backpack on my way to school.",
        "cparty_jr_intro_2": "My backpack to my left! Let's go left.",
        "cparty_jr_intro_3": "My backpack is located above. Please help me to get my backpack.",
        "cparty_jr_intro_4": "Come on! Let's pick up the backpack by going downwards.",
        "cparty_jr_intro_5": "Wow! My backpack is far away from me. Could you take me to my backpack?",
        "cparty_jr_intro_6": "There is backpack! Let's pick it up!",
        "cparty_jr_intro_7": "There are pencils along the way. Let's pick them up on our way to the backpack.",
        "cparty_jr_intro_8": "A pencil on our way to school! Let's pick up the pencil on our way to the backpack.",
        "cparty_jr_intro_9": "Oh, my backpack is far away. Let's find the fastest path to it!",
        "cparty_jr_intro_10": "Let's pick up the pencils on my way to the backpack!",
        "cparty_jr_intro_11": "We should go right exactly 5 times! Let's use the repeat block so we can get there more easily",
        "cparty_jr_intro_12": "Let's pick up the backpack using the repeat block.",
        "cparty_jr_intro_13": "I can't reach my backpack with this misplaced block. Please change the number of repeats.",
        "cparty_jr_intro_14": "Please take me to my backpack using the repeat blocks.",
        "cparty_jr_intro_15": "School is really far from here! But that's okay. If we use the repeat block, we can get to school easily.",
        "make_new_project": "Create New Project",
        "open_old_project": "Open Project",
        "offline_download": "Entry Download",
        "offline_release": "Download Entry Offline Editor!",
        "offline_description_1": "Install and use Entry Offline Editor",
        "offline_description_2": "without internet connection.",
        "offline_description_3": "Download and try it out!",
        "sw_week_2015": "2015 소프트웨어교육 체험 주간",
        "cparty_desc": "두근두근 소프트웨어와의 첫만남",
        "entry_offline_download": "Download \nOffline Editor",
        "entry_download_detail": "Download\nVeiw Details",
        "offline_desc_1": "Install and use Entry Offline Editor without internet connection.",
        "offline_desc_2": "Download and try it out!",
        "download": "download",
        "version": "version",
        "file_size": "size",
        "update": "update",
        "use_range": "Scope of use",
        "offline_desc_free": "Entry Offline Editor is free for both individual and corporate use.",
        "offline_required": "System Requirement",
        "offline_required_detail": "Minimum 1GB disk space is required, Windows 8 and above / macOS 10.8 and above, Minimum 1GB disk space is required",
        "offline_notice": "Side notes",
        "offline_notice_1": "1. Version",
        "offline_notice_1_1": "does not support installation of all-in-one hardware connection program",
        "offline_notice_2": "2. Web browser is not needed.",
        "offline_notice_3": "Release note",
        "offline_notice_4": "Download by version",
        "offline_notice_5": "Release note",
        "hardware_online_badge": "Online",
        "hardware_title": "Entry Hardware Connector Program Download",
        "hardware_desc": "In order to connect to hardware projects and 'Create Project' online, download and install Entry Hardware Connector Program.",
        "hardware_release": "Details on Hardware Connector Program updates are available in the link below.",
        "hardware_window_download": "Windows Download",
        "hardware_osx_download": "Mac Download",
        "cparty_jr_result_2": "Thank you! I had so much fun with you.\n See you around!",
        "cparty_jr_result_3": "Great! I've arrived school! But we can make it with fewer blocks.\n How about we try again? ",
        "cparty_jr_result_4": "",
        "lms_no_class": "There is no class.",
        "lms_create_class": "Please create a class.",
        "lms_add_class": "Create class",
        "lms_base_class": "Default",
        "lms_delete_class": "Delete",
        "lms_my_class": "My Class",
        "lms_grade_1": "elementary school 1",
        "lms_grade_2": "elementary school 2",
        "lms_grade_3": "elementary school 3",
        "lms_grade_4": "elementary school 4",
        "lms_grade_5": "elementary school 5",
        "lms_grade_6": "elementary school 6",
        "lms_grade_7": "middle school 1",
        "lms_grade_8": "middle school 2",
        "lms_grade_9": "middle school 3",
        "lms_grade_10": "general",
        "lms_add_groupId_personal": "Add classroom ID to your member profile.",
        "lms_add_groupId": "Add Classroom ID",
        "lms_add_group_account": "Add Classroom ID",
        "lms_enter_group_info": "Enter classroom ID and password",
        "lms_group_id": "Classroom ID",
        "lms_group_pw": "Password",
        "lms_group_name": "Class Name",
        "personal_pwd_alert": "Enter correct password",
        "personal_form_alert": "양식을 바르게 입력해 주세요",
        "personal_form_alert_2": "모든 양식을 완성해 주세요",
        "personal_no_pwd_alert": "Enter password",
        "select_gender": "Please enter your gender",
        "enter_group_id": "Enter classroom ID",
        "enter_group_pwd": "Enter password",
        "info_added": "추가되었습니다",
        "no_group_id": "The Class ID does not exist",
        "no_group_pwd": "비밀번호가 일치하지 않습니다",
        "lms_please_choice": "Choose",
        "group_lesson": "나의 학급 강의",
        "lms_banner_add_group": "Learning Management System is now available",
        "lms_banner_entry_group": "Create Entry class ",
        "lms_banner_desc_1": "Add your students",
        "lms_banner_desc_2": "Manage your student's projects",
        "lms_banner_desc_3": "and track their growth.",
        "lms_banner_download_manual": "Manual Download",
        "lms_banner_detail": "Try it out!",
        "already_exist_email": "email already exists",
        "same_registered_email": "Registered email.",
        "email_correnctly_please": "Please enter a valid email",
        "remove_project": "Are you sure to remove this project?",
        "study_lesson": "Class Lessons",
        "open_project": "Open Project",
        "make_group": "Create Class",
        "project_share": "Project share",
        "group_project_share": "Class Share",
        "group_discuss": "Class Discuss",
        "my_profile": "My page",
        "search_updated": "Recent Project",
        "search_recent": "Project with most views",
        "search_complexity": "Project with most effort",
        "search_staffPicked": "Staff pick project save area",
        "search_childCnt": "Project with most copies",
        "search_likeCnt": "Project with most likes",
        "search_recentLikeCnt": "Project with most likes",
        "gnb_share": "Share",
        "gnb_community": "Community",
        "lms_add_lectures": "Add Lessons",
        "lms_add_course": "Add Courseware",
        "lms_add_homework": "Add Assignment",
        "remove_lecture_confirm": "Are you sure you want to delete?",
        "popup_delete": "Delete",
        "remove_course_confirm": "Are you sure you want to delete?",
        "lms_no_lecture_teacher_1": "There is no lessons.",
        "lms_no_lecture_teacher_2": "Please create a lessons.",
        "gnb_download": "Download",
        "lms_no_lecture_student_1": "",
        "lms_no_lecture_student_2": "There is no lessons.",
        "lms_no_lecture_student_3": "",
        "lms_no_class_teacher": "There is no class.",
        "lms_no_course_teacher_1": "There is no courseware.",
        "lms_no_course_teacher_2": "Please create a courseware.",
        "lms_no_course_student_1": "",
        "lms_no_course_student_2": "There is no courseware.",
        "lms_no_course_student_3": "",
        "lms_no_hw_teacher_1": "There is no assignment.",
        "lms_no_hw_teacher_2": "Please create a assignment.",
        "lms_no_hw_student_1": "",
        "lms_no_hw_student_2": "There is no assignment.",
        "lms_no_hw_student_3": "",
        "modal_edit": "edit",
        "modal_deadline": "Deadline",
        "modal_hw_desc": "Description",
        "desc_optional": "(optional)",
        "modal_create_hw": "Create Assignment",
        "vol": "Vol.",
        "hw_title": "Title",
        "hw_description": "Description",
        "deadline": "Deadline",
        "do_homework": "Do Assignment",
        "hw_progress": "Progress",
        "hw_submit": "submit",
        "view_list": "Submitter",
        "view_desc": "content",
        "do_submit": "submit",
        "popup_notice": "Alert",
        "no_selected_hw": "No Assignment is selected",
        "hw_delete_confirm": "Are you sure you want to delete?",
        "hw_submitter": "List of Assignment submissions",
        "hw_student_desc_1": "* You may edit the project until 'Submit' button completes the submission process.",
        "hw_student_desc_2": "* Once submission period is over, project cannot be submitted.",
        "popup_create_class": "Create Class",
        "class_name": "Class name",
        "image": "Image",
        "select_class_image": "Please select a class image.",
        "type_class_description": "Class Introduction.",
        "set_as_primary_group": "Set as default classroom",
        "set_primary_group": "assign",
        "not_primary_group": "not assigned",
        "type_class_name": "Please enter the class name.",
        "type_class_description_long": "Please enter the class introduction.",
        "add_students": "Add students",
        "invite_students": "Invite students",
        "invite_with_class": "1. Invite with class code",
        "invite_code_expiration": "Code expiration time",
        "generate_code_button": "reissue code",
        "generate_code_desc": "Student instructions for entering class code",
        "generate_code_desc1": "Log in at playentry.org",
        "generate_code_desc2": "Select <my class> from the menu.",
        "generate_code_desc3": "Click <Enter class code> then paste in the class code.",
        "invite_with_url": "2. Invite using class URL",
        "copy_invite_url": "Copy",
        "download_as_pdf": "Download code as PDF file",
        "download_as_excel": "Download code as Excel file",
        "temp_password": "Temporary PW",
        "can_not_change": "Unavailable",
        "step_name": "Name",
        "step_info": "Additional Information",
        "preview": "Preview",
        "type_name_enter": "To add student, type in the student name and hit enter. ",
        "multiple_name_possible": "Adding multiple student names is possible.",
        "id_auto_create": "Student number is automatically created if not edited",
        "student_id_desc_1": "Class ID is created automatically without manual input",
        "student_id_desc_2": "If student account already exists, add student information. When the student logs in,",
        "student_id_desc_3": "class invitation is sent. No extra step for sharing account information is necessary.",
        "student_number": "Student number",
        "temp_password_desc_1": "After logging in with temporary password,",
        "temp_password_desc_2": "guide the students to reset the password.",
        "temp_password_desc_3": "*You cannot see temporary password once issued",
        "temp_password_demo": "This is an informational account that can not log in.",
        "temp_works": "View works",
        "student_delete_confirm": "Are you sure you want to delete?",
        "no_student_selected": "No student is selected",
        "class_assignment": "Class Assignments",
        "class_list": "Class List",
        "select_grade": "Please select the grade.",
        "add_project": "sharing Project",
        "no_project_display": "There is no project to display.",
        "plz_display_project": "Please display a project.",
        "refuse_confirm": "Are you sure you want to refuse?",
        "select_class": "학급 선택",
        "group_already_registered": "Already registered.",
        "my_page_entry": "Entry",
        "my_page_title": "My Page",
        "my_classGroup_title": "My Class",
        "my_classGroup_title_view": "view my class",
        "my_space_area": "my own space",
        "mon": "MON",
        "tue": "TUE",
        "wed": "WED",
        "thu": "THU",
        "fri": "FRI",
        "sat": "SAT",
        "sun": "SUN",
        "jan": "Jan",
        "feb": "Feb",
        "mar": "Mar",
        "apr": "Apr",
        "may": "May",
        "jun": "Jun",
        "jul": "Jul",
        "aug": "Aug",
        "sep": "Sep",
        "oct": "Oct",
        "nov": "Nov",
        "dec": "Dec",
        "plz_select_lecture": "Please select a lessons.",
        "plz_set_deadline": "Please set the deadline.",
        "hide_entry": "Hide Entry",
        "hide_others": "Hide Others",
        "show_all": "Show All",
        "lecture_description": "Lessons are listed by topics and levels. Follow along in step-by-step order.",
        "curriculum_description": "Teacher created Entry learning space. See example projects and try creating them.",
        "linebreak_off_desc_1": "The size of textbox determines the font size.",
        "linebreak_off_desc_2": "Your content can only be written in one line.",
        "linebreak_off_desc_3": "The left and the right sides of the textbox will lengthen when you add extra words.",
        "linebreak_on_desc_1": "The size of textbox determines how much you can write.",
        "linebreak_on_desc_2": "You can change the line by pressing the 'Enter' key.",
        "linebreak_on_desc_3": "Your content will automatically go to the next line if the length exceeds the width of the textbox, when writing or adding new words.",
        "not_supported_text": "Current font does not support Chinese characters",
        "entry_with": "Entry is Created With Teachers",
        "ebs_season_1": "Visit Season 1",
        "ebs_season_2": "Visit Season 2",
        "hello_ebs": "Hello! EBS software",
        "hello_ebs_desc": "Learn the basic principles of programming. \n Watch the show, follow along the video tutorials, \n and learn to code!",
        "hello_ebs_sub_1": "Meet EBS's interactive middle ",
        "hello_ebs_sub_2": "school age program.",
        "exhibit_4th_title": "4th Anniversary of Entry",
        "exhibit_4th_subtitle": "Entry Project Contest",
        "exhibit_4th_desc1": "We hold an Entry Project Contest ",
        "exhibit_4th_desc2": "to celebrate the 4th anniversary of entry.",
        "exhibit_4th_desc3": "Show off your great project!",
        "exhibit_4th_button": "View Details",
        "visang_edu_entry": "비상교육 엔트리 학습하기",
        "cmass_edu_entry": "씨마스 엔트리 학습하기",
        "chunjae_edu_entry": "천재교과서 엔트리 학습하기",
        "kumsungemt_edu_entry": "금성출판사 엔트리 학습하기",
        "kumsungMid_edu_entry": "금성출판사 엔트리 학습하기",
        "gilbutEdu_edu_entry": "길벗출판사 엔트리 학습하기",
        "miraenCoding_edu_entry": "미래엔 엔트리 학습하기",
        "textbook_help_data": "Help data",
        "textbook_teaching_activity": "teaching and activity",
        "textbook_kyohacksa": "Kyohaksa",
        "textbook_kumsung": "Kumsung Publishing",
        "textbook_donga": "Dong-a Publishing",
        "textbook_chunjae": "Chunjae Education",
        "textbook_miraen": "Mirae-n",
        "textbook_visang": "Visang",
        "partner": "Our Partners",
        "project_term_popup_title": "Copyright policy",
        "project_term_popup_description_1": "Please review the Entry ",
        "project_term_popup_description_2": "copyright policy ",
        "project_term_popup_description_3": "to allow public viewing ",
        "project_term_popup_description_4": "of the project.",
        "project_term_agree_1_1": "I agree to the release of my work itself and its source code.",
        "project_term_agree_2_1": "I permit others to use it.",
        "project_term_agree_2_2": "(includes copy, distribution, and transmission through airwaves)",
        "project_term_agree_3_1": "I permit others to make modifications to it.",
        "project_term_agree_3_2": "(includes remixes, modifications, and derivative works)",
        "agree_all": "I agree to all conditions.",
        "select_login": "Log in",
        "select": "Please select",
        "with_login": "Log in and",
        "without_login": "Start Challenge",
        "start_challenge": "Start Challenge",
        "start_challenge_2": "without Logging in",
        "if_not_save_not_login": "* Your progress will not be saved if not logged in.",
        "if_not_member_yet": "If you aren't a member yet,",
        "join_entry": "Join Entry",
        "learned_computing": "Have you learned computing before?",
        "cparty_index_description_1": "My first computing.",
        "cparty_index_description_2": "Learn programming concepts and develop your thinking skills while playing Entry. ",
        "cparty_index_description_3": "Challenge yourself to exciting mission stages and earn certificates.",
        "cparty_index_description_4": "2015 Online Coding Party is part of",
        "cparty_index_description_5": "Software Programming Experience Week",
        "cparty_index_description_6": "prepared with",
        "cparty_index_description_7": "Association of Teachers for Computing.",
        "cparty_index_description_8": "",
        "cparty_index_description_9": "2016 Online Coding Party is part of",
        "cparty_index_description_10": "2017 Online Coding Party is part of",
        "cparty_index_description_11": "Association of Teachers for Computing.",
        "congratulation": "Congratulation!",
        "warm_up": "warm-up",
        "beginner": "beginner",
        "intermediate": "intermediate",
        "advanced": "advanced",
        "applied": "applied",
        "cert_msg_tail": "track.",
        "cert_msg_head": "You have successfully completed the",
        "maze_text_content_1": " 명령어를 사용해서 나를 부품 상자까지 이동시켜줘!",
        "maze_text_content_2": " 명령어를 사용해서 장애물을 뛰어넘어야해!",
        "maze_text_content_3": "Nice! I see another part over there. The path is twisted but I can get there using the 'right();', 'left();' commands. ",
        "maze_text_content_4": "I can move smoothly now. Take me to my parts using the commands we've learned so far.",
        "maze_text_content_5": "Wow! Two parts! Let's collect them both so I can recover faster.",
        "maze_text_content_6": "Last part! I'll recover fully with that last piece. You'll help me, right?",
        "maze_text_content_7": "I'm feeling great! I can repeat tasks without stress now. Oh no! What is that robot in front of us? I think it needs help! Use 'for' command to get to the friend!",
        "maze_text_content_8": "Excellent! I was able to rescue my robot friend thanks to you. I see another friend over there. Be careful. There are beehives to avoid. You can do it! Let's use the 'for' command to get to my friend.",
        "maze_text_content_9": "Use 'while' instead of 'for' to repeat until we've accomplished our goal. Take me to my friend.",
        "maze_text_content_10": "Now we have 'if' command. Use 'if' and 'while' to let me know which way to turn.",
        "maze_text_content_11": "Great! Let's do this once more. Tell me when to turn left.",
        "maze_text_content_12": "There are beehives scattered in the pathway. Tell me when to jump over.",
        "maze_text_content_13": "So many friends need help! Let's go help them",
        "maze_text_content_14": "More friends to rescue! Let's first try going around those square blocks and repeat to get to all of my friends.",
        "maze_text_content_15": "I'm tired from moving so much. I've grouped the commands that are often used into 'functions'. Use functions to get me to my battery!",
        "maze_text_content_16": "Excellent! Create functions and take me to my battery!",
        "maze_text_content_17": "Great job! Let's create functions with 'jump()",
        "maze_text_content_18": "The pathway is complex this time. But no worries! Just tell me when to use 'left()",
        "maze_text_content_19": "The functions are already defined! However, it seems difficult to get to the battery using only the functions. Let's try mixing functions and commands to get to the battery.",
        "maze_text_content_20": "You've done a fantastic job so far! After I retrieve that last battery, I will no longer need charging. Help me get to the battery using the functions so I can live free forever!",
        "maze_content_1": "Hi, I'm Entrybot. I'm trying to escape from this factory but first, I have to fix myself. Will you help me fetch my parts? Assemble 'Move forward' block and press Start. ",
        "maze_content_2": "Very good! I'm feeling much better! I see my part over there but I might get electrocuted if I don't be careful. Let's use 'jump over obstacle' block to get to the part.",
        "maze_content_3": "Great! My part is right over there. The path is a bit twisted but I can get there using 'rotate' blocks. You'll help me, right?",
        "maze_content_4": "Nice! I can almost move freely now. Let's get the part using 'rotate' and 'jump' blocks.",
        "maze_content_5": "Wow! Two parts! Let's get them both so I can restore my health faster.",
        "maze_content_6": "Thanks to you I'm feeling much better! I'm able to get better with those parts. You'll help me, right?",
        "maze_content_7": "I'm feeling great! I can repeat the same task without trouble now. Oh! Do you see the robot over there? I think she might need help. Let's go help her out. Bring me to her by changing the number of 'repeat's",
        "maze_content_8": "Excellent! I was able to rescue my pal! It looks like another one of my friends need help. Be careful there are beehives. Be sure to jump over the beehives! Can you do it? Help me reach her using the 'repeat' block. ",
        "maze_content_9": "Instead of repeating a task for set number of times, I can repeat until I reach my robot pal instead! Help me save my friend!",
        "maze_content_10": "Now we can use the 'if' block. Help me use the 'if' block to turn at right timing.",
        "maze_content_11": "Let's try it again! Let me know when to turn left.",
        "maze_content_12": "There are beehives all over the place. Tell me when to jump!",
        "maze_content_13": "My friends need help! Let's go help them!",
        "maze_content_14": "More friends need rescue! Let's first go around the small square and repeat it to rescue all my friends.",
        "maze_content_15": "Now I can memorize blocks that are used repeatedly. Promise blocks are the ones that I was able to memorize. I'm a bit tired from moving so much. Help me refill my battery using the Promise feature!",
        "maze_content_16": "Great! Tell me which blocks are used often and put them under the Promise block!",
        "maze_content_17": "Nice! Use Promise blocks to help me get my battery. Make sure to insert 'Jump' blocks in the Promise block.",
        "maze_content_18": "The path looks complex! We can get through this if we turn left and right at the right time.",
        "maze_content_19": "The 'Promise' if already set for us! However, we can't use the Promise blocks as is. I'll need to use the Promise blocks at the right timing to get the battery.",
        "maze_content_20": "Excellent! You've done great so far! After the final battery, I won't need to charge any more. So help me get the last battery using the Promise so I can live forever free!",
        "maze_content_21": "안녕? 나는 엔트리 봇이야. 지금 많은 친구들이 내 도움을 필요로 하고 있어. 반복하기를 이용해서 친구들을 도울수 있게 데려다 줘!",
        "maze_content_22": "고마워! 이번에는 벌집을 뛰어넘어서 친구를 구하러 갈 수 있게 도와줘!",
        "maze_content_23": "좋아! 이번에는 친구 로봇한테 갈 때까지 반복하기를 이용해서 친구를 도울 수 있게 도와줘!",
        "maze_content_24": "안녕! 나는 엔트리 봇이야. 지금 나는 너무 오래 움직여서 배터리를 채워야 해. 약속 불러오기를 써서 배터리를 채울 수 있도록 도와줘!",
        "maze_content_25": "멋져! 이번에는 여러 약속을 불러와서 배터리가 있는 곳까지 가보자!",
        "maze_content_26": "좋아! 이제 약속할 블록을 나한테 가르쳐줘! 약속하기 블록 안에 자주 쓰일 블록을 넣으면 돼!",
        "maze_content_27": "지금은 미리 약속이 정해져 있어. 그런데, 약속을 쓰기위해서는 내가 갈 방향을 보고 약속을 사용해야해. 도와줄거지?",
        "maze_content_28": "드디어 마지막이야! 약속을 이용하여 마지막 배터리를 얻을 수 있게 도와줘!",
        "ai_content_1": "Hi! I'm Entrybot. I just completed the space exploration mission and I need to return to Earth but it's not easy because of the asteroids. Could you help me return home? I have radars on top, front and back of the spaceship to detect how far an obstacle exists. It'll help you make smart decisions.",
        "ai_content_2": "Thank you! I was able to avoid the asteroids without trouble. There are more asteroids this time. Let's try avoiding them!",
        "ai_content_3": "Great! I was able to safely avoid the asteroids! There are more asteroids now! Don't worry though! I have the 'repeat' block. Place blocks in the 'repeat' block so we can get to the destination!",
        "ai_content_4": "Excellent! It's so much more easier to avoid the asteroids using the repeat blocks! However, it's tiring driving the spaceship at all times! I can use the radar to sense what's coming. Help avoid the asteroids using the radar.",
        "ai_content_5": "Nice! I'm so glad we've come this far. The radar will tell how far an object exists. Let's use the radar to avoid the asteroids! Move forward until we come close to an asteroid then avoid!",
        "ai_content_6": "Great job! You're using radar to avoid tha asteroids. Use multiple radars to avoid the asteroids.",
        "ai_content_7": "We're getting close to Earth! I want to go in a safer path if possible. It must be safer to move farther from the asteroids, right? Compare the distance to the obstacle using the radar on the top and bottom of the spaceship to move to a safer direction.",
        "ai_content_8": "Excellent! We're safely cruising through space. Oh! What is that? That's looks like my special energy! Let's collect the special energy on our way!",
        "ai_content_9": "Very good! We're almost there. The path is filled with asteroid. But don’t worry! We can get rid of the obstacles using the special item.",
        "ai_content_10": "Good! I can see Earth! But now it's impossible to see the asteroids ahead! I'm not worried though. We can avoid the asteroids with more caution. Let's go home!",
        "maze_hints_title_1": "How to start",
        "maze_hints_content_1": "How do I move Entrybot?",
        "maze_hints_detail_1": "1. Drag the block you want to use and place it under 'When Run'\n2. Once finished, click 'Run'\n3. I will follow the block instructions step by step, reading them from top to bottom",
        "maze_hints_title_2": "Jumping over obstacles",
        "maze_hints_content_2": "What do I do when I come across an obstacle?",
        "maze_hints_detail_2": "On your pathway, you might come across obstacles.\nUse 'jump over' block to jump over the obstacle. ",
        "maze_hints_title_3": "Repeat block(1)",
        "maze_hints_content_3": "How do I use repeat (3) times block?",
        "maze_hints_detail_3": "If you want to repeat an action multiple times, use 'repeat ~times' block. \nPlace the blocks you want to repeat within the 'repeat ~times' block and input how many times to repeat.",
        "maze_hints_title_4": "Repeat block(2)",
        "maze_hints_content_4": "How do I use 'repeat until ~' block?",
        "maze_hints_detail_4": "Use 'repeat until~do' block to set until when an action should be performed. \nPlace the blocks you want to repeat within 'repeat until~' block.\nThen once met with {image}, repeat will stop.",
        "maze_hints_title_5": "If block",
        "maze_hints_content_5": "How do I use 'if~' block?",
        "maze_hints_detail_5": "Using 'If {image}' block, you can designate what action should follow when met with {image}.\nBlocks within the 'If {image}' will only execute when met with {image}.",
        "maze_hints_title_6": "Repeat block(3)",
        "maze_hints_content_6": "How does 'Until met with all ~' block work?",
        "maze_hints_detail_6": "Repeat blocks within 'Until met with all ~' block until met with all {tile}.\n Once met with all {tile} repeat will stop.",
        "maze_hints_title_7": "Special Hint",
        "maze_hints_content_7": "It's too difficult. Help!",
        "maze_hints_detail_7": "Look at the path that I should travel. See the 4 small squares?\nFirst create blocks that will take me around the square and repeat.",
        "maze_hints_title_8": "Function",
        "maze_hints_content_8": "What is 'Functions/ Call Functions'? How do I use them?",
        "maze_hints_detail_8": "Put the most often used sets of blocks under 'Function'. \nOnce you create functions, use 'Call Function' to use it as often as needed.",
        "ai_hints_title_1_1": "Goal of the game",
        "ai_hints_content_1_1": "Avoid asteroids and help me get to Earth",
        "ai_hints_detail_1_1": "Avoid asteroids and help me get to Earth",
        "ai_hints_title_1_2": "Instructions",
        "ai_hints_content_1_2": "How do I begin?",
        "ai_hints_detail_1_2": "1. Drag out blocks from the block box and connect is with the 'when run' block\n2. Once finished assembling blocks, click 'Run'\n3. I'll move according to your block instructions.",
        "ai_hints_title_1_3": "To move",
        "ai_hints_content_1_3": "How do I move the entrybot?",
        "ai_hints_detail_1_3": "I can move up, forward or below.\nWhen creating instructions, make sure I avoid the asteroids.\nIf you send me out of the screen, I can be lost in space forever! So be careful.",
        "ai_hints_title_2_1": "Goal of the game",
        "ai_hints_content_2_1": "Use repeat blocks to avoid the asteroids.",
        "ai_hints_detail_2_1": "Use repeat blocks to avoid the asteroids.",
        "ai_hints_title_2_2": "Repeat block",
        "ai_hints_content_2_2": "What is a repeat block?",
        "ai_hints_detail_2_2": "Geez! It's a long way home so putting blocks together one by one is too tiresome. Let's try using the repeat block.\nOnce you group the blocks under the repeat block, you can shorten the length of the blocks!",
        "ai_hints_content_3_1": "Help me avoid the asteroids using the 'if' block",
        "ai_hints_title_3_2": "if block(1)",
        "ai_hints_content_3_2": "How does 'if ~' block work? ",
        "ai_hints_detail_3_2": "Using 'if~ in front/ else' block can help me check if there are asteroids in front of me and help me avoid them.\nIf there's an asteroid in front of me, then blocks under 'if' will execute or if there isn't an asteroid, the blocks under 'else' will execute.\nTell me which way to go depending on whether there's an asteroid to avoid or not.",
        "ai_hints_content_4_1": "Learn to use the radar to avoid the asteroids.",
        "ai_hints_detail_4_1": "Learn to use the radar to avoid the asteroids.",
        "ai_hints_title_4_2": "radar(1)",
        "ai_hints_content_4_2": "What is a radar and how can I use it?",
        "ai_hints_detail_4_2": "Radar tells me how far an object exists from where I am located. \nIf there is an object in front of me, the front radar will show '1'.\nAlso, radar can become a powerful tool when used with 'if &lt;true&gt;/else' block.\nFor example, when the distance to an object in front of me shows value greater than 1, then I am able to move forward safely.\n However, if not, then I can go above or under to avoid it.",
        "ai_hints_title_4_3": "if block(2)",
        "ai_hints_content_4_3": "How do I use 'if <true>' block?",
        "ai_hints_detail_4_3": "if &lt;true&gt; block/ else' block executes blocks under 'if' when condition is met and executes blocks under 'else' when condition is not met.\nThink about how you want to move at different situations and create a condition within &lt;true&gt; block.\nRemember that when condition is met and blocks under 'if' are executed, then the blocks under 'else' will be ignored.",
        "ai_hints_content_5_1": "Use the radar to help me avoid the asteroids.",
        "ai_hints_detail_5_1": "Use the radar to help me avoid the asteroids.",
        "ai_hints_title_5_2": "if block(3)",
        "ai_hints_content_5_2": "How does nested if blocks work?",
        "ai_hints_detail_5_2": "I can nest 'if ~/else' block within 'if ~/else' block. This will help me make smart decisions in various situations.\nFor example, I can act according to whether an asteroid is in my path or not, then when I'm met with and asteroid, I can decide whether to go under or above.",
        "ai_hints_title_6_1": "Radar(2)",
        "ai_hints_content_6_1": "How do I compare the values given by radar above and radar below?",
        "ai_hints_detail_6_1": "([above]radar) block shows distance to an object above.\nYou can use this block to check which asteroid above or below exist further away.\nWhen deciding which way to avoid the asteroid, it'll be a smarter move to go in the direction where the asteroid is further away.",
        "ai_hints_content_7_1": "Use the item to avoid the asteroids.",
        "ai_hints_detail_7_1": "Use the item to avoid the asteroids.",
        "ai_hints_title_7_2": "Checking object name",
        "ai_hints_content_7_2": "What can I do by checking the object name in front of me?",
        "ai_hints_detail_7_2": "To gain a special item, you need to check where the item is located.\nUse 'object [above] is [item]' block.\nBy using this block, you can figure out where the item is located and move towards it.",
        "ai_hints_content_8_1": "Use the item to help me avoid the asteroids.",
        "ai_hints_detail_8_1": "Use the item to help me avoid the asteroids.",
        "ai_hints_title_8_2": "Item",
        "ai_hints_content_8_2": "How do I gain special item and use it?",
        "ai_hints_detail_8_2": "Even though you succeed in avoiding the asteroids, when the pathway is lined with asteroids, there is no way to avoid them. In this case, use the 'use item' block.\nIt will get rid of all blocks in front.\nHowever, you can only use this block when you've gained the item by passing through the item.",
        "ai_hints_content_9_1": "Use all your skills and knowledge to go as far as you can.",
        "ai_hints_detail_9_1": "Use all your skills and knowledge to go as far as you can.",
        "ai_hints_title_9_2": "and",
        "ai_hints_content_9_2": "How do I use the 'and' block?",
        "ai_hints_detail_9_2": "and' block can fit in many conditions. When all conditions in the 'and' block is met, then the blocks will be executed. If one of them is false, the whole 'and' statement will be false and the blocks will not be executed.",
        "maze_text_goal_1": "Use move();  command to move me to the part box!",
        "maze_text_goal_2": "Use jump();  command to avoid obstacles.",
        "maze_text_goal_3": "Use left(); right(); command to take me to my parts.",
        "maze_text_goal_4": "Use various commands to take me to my parts.",
        "maze_text_goal_5": "Move me so I can collect both of my part boxes.",
        "maze_text_goal_6": "Move me so I can collect both of my part boxes.",
        "maze_text_goal_7": "Use for command to take me to my friend!",
        "maze_text_goal_8": "Use for command and avoid obstacles to take me to my friend!",
        "maze_text_goal_9": "Use while command to take me to my friend.",
        "maze_text_goal_10": "Use if and while commands to take me to all my friends.",
        "maze_text_goal_11": "Use if and while commands to take me to all my friends.",
        "maze_text_goal_12": "Use if and while commands to take me to all my friends.",
        "maze_text_goal_13": "Call function to take me to my battery",
        "maze_text_goal_14": "Call function to take me to my battery",
        "maze_text_goal_15": "Insert commands within function. Then call the function to take me to my battery",
        "maze_text_goal_16": "Insert commands under a function. Then call the function to move me to the battery!",
        "maze_text_goal_17": "Insert commands under a function. Then call the function to move me to the battery!",
        "maze_text_goal_18": "Insert commands under a function. Then call the function to move me to the battery!",
        "maze_text_goal_19": "Insert commands under a function. Then call the function to move me to the battery!",
        "maze_text_goal_20": "Call the function and mix it with other commands and take me to my battery.",
        "maze_attack_range": "Attack range",
        "maze_attack": "Attack",
        "maze_attack_both_sides": "Attack both sides",
        "above_radar": "above radar",
        "above_radar_text_mode": "radar_up",
        "bottom_radar": "bottom radar",
        "bottom_radar_text_mode": "radar_down",
        "front_radar": "front radar",
        "front_radar_text_mode": "radar_right",
        "above_object": "object above",
        "above_object_text_mode": "object_up",
        "front_object": "object in front",
        "front_object_text_mode": "object_right",
        "below_object": "object below",
        "below_object_text_mode": "object_down",
        "destination": "destination",
        "asteroids": "asteroids",
        "item": "item",
        "wall": "wall",
        "destination_text_mode": "destination",
        "asteroids_text_mode": "stone",
        "item_text_mode": "item",
        "wall_text_mode": "wall",
        "buy_now": "Buy now",
        "goals": "Goal",
        "instructions": "Instructions",
        "object_info": "Object info",
        "entry_basic_mission": "Entry basic mission",
        "entry_application_mission": "Entry application mission",
        "maze_move_forward": "move one forward",
        "maze_when_run": "when Run",
        "maze_turn_left": "turn left",
        "maze_turn_right": "turn right",
        "maze_repeat_times_1": "repeat",
        "maze_repeat_times_2": "times",
        "maze_repeat_until_1": "repeat until",
        "maze_repeat_until_2": "",
        "maze_call_function": "call function",
        "maze_function": "function",
        "maze_repeat_until_all_1": "repeat until all of",
        "maze_repeat_until_all_2": "",
        "command_guide": "Command guide",
        "ai_success_msg_1": "Thanks to you I've safely arrived home!",
        "ai_success_msg_2": "Phew! I was able to travel ",
        "ai_success_msg_3": "distance  enough to send a rescue signal to Earth! The rescue crew is on its way! Thank you!",
        "ai_success_msg_4": "Great! You succeeded using ",
        "ai_cause_msg_1": "Oh no. Tell me which way to go.",
        "ai_cause_msg_2": "Yikes! That was close! Let's try again.",
        "ai_cause_msg_3": "Yikes! I might get lost in space if I go off the path. Let's try again.",
        "ai_cause_msg_4": "It's too complicated. Try this block to move.",
        "ai_move_forward": "move forward",
        "ai_move_above": "go above",
        "ai_move_under": "go under",
        "ai_repeat_until_dest": "repeat until destination",
        "ai_if_front_1": "if",
        "ai_if_front_2": "in front",
        "ai_else": "else",
        "ai_if_1": "if",
        "ai_if_2": "",
        "ai_use_item": "use item",
        "ai_radar": "radar",
        "ai_above": "above",
        "ai_front": "front",
        "ai_under": "under",
        "ai_object_is_1": "is",
        "ai_object_is_2": "object",
        "challengeMission": "back",
        "nextMission": "next",
        "withTeacher": "Advisory teachers",
        "host": "Host",
        "support": "Support",
        "subjectivity": "Subjectivity",
        "learnMore": "Learn more ",
        "ai_object_is_3": "?",
        "stage_is_not_available": "The stage isn't available yet. Please enter the stages in the given order.",
        "progress_not_saved": "Your progress will not be saved.",
        "want_refresh": "Do you still want to refresh the page?",
        "monthly_entry_grade": "Elementary 3rd - Middle school 3rd grade",
        "monthly_entry_contents": "Learn to program with Monthly Entry. This monthly digest provides project tutorials, tips and tricks and fun comics. ",
        "monthly_entry_etc1": "*The Monthly Entry project templates are provided in the main page's recommended course",
        "monthly_entry_etc2": "* Monthly Entry is published during school semesters only",
        "group_make_lecture_1": "There are no lessons to show.",
        "group_make_lecture_2": " Create lessons for your class from ",
        "group_make_lecture_3": "'Create > Create lessons'",
        "group_make_lecture_4": "Create a lessons",
        "group_add_lecture_1": "Favorite Lesson does not exist.",
        "group_add_lecture_2": "'학습하기>오픈 강의> 강의'에서 우리반 학습내용에",
        "group_add_lecture_3": "추가하고 싶은 강의를 관심강의로 등록해 주세요.",
        "group_add_lecture_4": "See Lesson",
        "group_make_course_1": "My courseware is not exist.",
        "group_make_course_2": "Create courseware for your class from",
        "group_make_course_3": "'Create > Create lessons > Create Courseware'",
        "group_make_course_4": "Create courseware",
        "group_add_course_1": "Favorite Courseware does not exist.",
        "group_add_course_2": "Favorite lessons you want to add as course assignment from",
        "group_add_course_3": "'Learn > Open Lessons > Courseware",
        "group_add_course_4": "Browse courseware",
        "hw_main_title": "Download Program",
        "ai_banner_title": "AI Blocks",
        "ai_banner_headline1": "Artificial Intelligence",
        "ai_banner_headline2": "in everyday life",
        "ai_banner_text1": "AI is all around us.",
        "ai_banner_text2": "From AI blocks to model training, try it yourself!",
        "rv_banner_title": "Real-time Variable/List",
        "rv_banner_headline1": "Information that can be lost,",
        "rv_banner_headline2": "information that cannot be lost",
        "rv_banner_text1": "Store variable or list on the server and",
        "rv_banner_text2": "use information real time!",
        "banner_default_title": "The first step in software education",
        "banner_default_title_head1": "Entry",
        "banner_default_title_body1": "Anyone can learn software easily and interestingly.",
        "banner_default_title_body2": "Get started right now!",
        "playsw_banner_title": "Play With Software",
        "rsc2020_banner_head1": "with Entry AI",
        "rsc2020_banner_title": "Design the World with RSC2020 & Entry AI",
        "rsc2020_banner_body1": "Project to make the world happy",
        "rsc2020_banner_body2": "with my ideas and artificial intelligence",
        "renew_banner_title": "Announcement",
        "renew_banner_head1": "January 2021",
        "renew_banner_head2": "About 2021 Entry Renewal",
        "renew_banner_body1": "Welcome to Entry renewal with deeper creativity and wider sharing.",
        "renew_banner_body2": "",
        "playsw_banner_head1": "Play with AI, Play with DATA",
        "playsw_banner_body1": "Do you want to make a better AI project in Entry?",
        "playsw_banner_body2": "Upgrade your projects with various AI content!",
        "privacy_contest_title": "Personal information security",
        "privacy_content_head1": "Keep your personal information secure",
        "privacy_content_head2": "for safe Entry life.",
        "privacy_content_body1": "Personal information contains everything about me.",
        "privacy_content_body2": "Protect your personal information safe!",
        "campaign_contest_title": "Let's overcome Corona19",
        "campaign_content_head": "",
        "campaign_content_body1": "Come share your projects that will help everyone.",
        "campaign_content_body2": "Best projects will be chosen every week,",
        "campaign_content_body3": "Feel free to encourage others for beating Corona19!",
        "campaign_content_button": "View Campaigns",
        "code_management_1": "Entry campaign #1 How to manage code",
        "code_management_2": "My Storage and Memo",
        "code_management_3": "Code management secret using my storage and memo!",
        "code_management_4": "Learn how to make your project better and share it easily.",
        "code_management_5": "View Campaigns",
        "shcoolbook_study_1": "Learn the contents of the textbook in entry.",
        "shcoolbook_study_2": "Learning Textbook",
        "shcoolbook_study_3": "Teachers can teach in the classroom",
        "shcoolbook_study_4": "and students can review at home!",
        "shcoolbook_study_5": "Learn now",
        "main_learn_1": "If you are new to Entry",
        "main_learn_2": "Learn about Entry",
        "main_learn_3": "Watch the video to learn about the various functions of Entry,",
        "main_learn_4": "create and share your project!",
        "main_learn_5": "Watch the video",
        "hw_desc_wrapper": "Install the Upgraded \nEntry Hardware Connection Program\nand Offline Editor",
        "hw_downolad_link": "Download Hardware Connection Program",
        "save_as_image_all": "Save code as image",
        "save_as_image": "Save as image",
        "maze_perfect_success": "Awesome! That is perfect!",
        "maze_success_many_block_1": "좋아",
        "maze_fail_obstacle_remain": "Get rid of all obstacles to keep your friends from getting hurt.",
        "maze_fail_item_remain": "Collect all the Minerals to save Princess Sally.",
        "maple_fail_item_remain": "I can't use my strength because I didn’t take all the food.<br />Help me to take all the food.",
        "maze_fail_not_found_destory_object": "Don't waste your power on an empty space!",
        "maze_fail_not_found_destory_monster": "Don't attack an empty space!",
        "maple_fail_not_found_destory_monster": "You should use the attack blocks only when there are monsters!",
        "maze_fail_more_move": "You have to move to the destination a little bit more!",
        "maze_fail_wall_crash": "Ow! You can't go there!",
        "maze_fail_contact_brick": "Ouch... you ran into something!",
        "maze_fail_contact_iron1": "Ow! I hit an obstacle",
        "maze_fail_contact_iron2": "Ow! I was hurt because an obstacle fell on me. Move before an obstacle falls down.",
        "maze_fail_fall_hole": "I fell into a trap...",
        "maze_fail_hit_unit": "몬스터에게 당해버렸어! 위험한 몬스터를 물리치기 위해 하트 날리기 블록을 사용해줘!",
        "maze_fail_hit_unit2": "Ow, I was attacked by a monster! You have to attack from two cells away!",
        "maze_fail_hit_unit_by_mushroom": "The Orange Mushroom got me!<br />Use the Attack <img src='/img/assets/maze/icon/mushroom.png' /> block to defeat the bad monsters!",
        "maze_fail_hit_unit_by_lupin": "I got hit by Lupin! <br />Use the Attack <img src='/img/assets/maze/icon/lupin.png' /> block two spaces away to defeat the bad monster!",
        "maze_fail_elnath_fail": "Oww! A bad monster attacked me.<br />Defeat the bad monsters to keep them from reaching me!",
        "maze_fail_pepe": "",
        "maze_fail_yeti": "That monster is so strong that you can't defeat it with the Attack <img width='24px' src='/img/assets/week/blocks/yeti.png'/> block.<br />Let's use the Attack <img width='24px' src='/img/assets/week/blocks/bigYeti.png'/> block.",
        "maze_fail_peti": "If you use the Attack <img width='24px' src='/img/assets/week/blocks/bigYeti.png'/> block to attack that monster, you can't defeat the strong monsters <img width='24px' src='/img/assets/week/blocks/bigYeti.png'/> when they spawn.<br />Let's use the Attack <img width='24px' src='/img/assets/week/blocks/yeti.png'/> block.",
        "maze_fail_both_side": "You should only use the Attack on both sides if there are monsters on both sides! ",
        "maze_wrong_attack_obstacle": "You can't use the Attack <img src='/img/assets/maze/icon/lupin.png' /> block here.<br />Let's use the Attack <img src='/img/assets/maze/icon/mushroom.png' /> block for Orange Mushrooms.",
        "maze_fail_contact_spider": "You're caught on a cobweb and can't move...",
        "maze_success_perfect": "Awesome! That is perfect!",
        "maze_success_block_excess": "Great! You succeeded using %1 blocks! \n But you can actually get there by only using %2 blocks! How about another go at it?",
        "maze_success_not_essential": "Great! You succeeded using %1 blocks! \nBut using this block makes it easier to solve. How about another go at it?",
        "maze_success_final_perfect_basic": "Okay, we found where Princess Sally is! Now you can save Princess Sally!",
        "maze_success_final_block_excess_basic": "Great! We found where Princess Sally is! Now you can save Princess Sally! You used %1 blocks, but you can actually succeed by only using %2 blocks! Wanna try again?",
        "maze_success_final_perfect_advanced": "You've reached the place where Princess Sally is! Now defeat the villain Mephisto and save Sally!",
        "maze_success_final_block_excess_advanced": "You've reached the place where Princess Sally is! Now defeat the villain Mephisto and save Sally! You used %1 blocks, but you can actually succeed by only using %2 blocks! Wanna try again?",
        "maze_success_final_distance": "Great! We finally saved Princess Sally safe and sound. Thank you so much for helping!<br/> You moved %1 cells. Wanna try again and aim for 60 cells?",
        "maze_success_final_perfect_ai": "There you go! We finally saved Princess Sally safe and sound. Thank you so much for helping!",
        "maple_success_perfect": "Great! That was perfect!",
        "maple_success_block_excess": "Great! You’ve succeeded using %1 blocks!<br />But there is a way to succeed with %2 blocks. Why don’t you try again?",
        "maple_success_not_essential": "Great! You’ve succeeded using %1 blocks!<br />But using this block will make it easier. Why don't you try again?",
        "maple_success_final_perfect_henesys": "Awesome! You’ve completed the Henesys Adventure.",
        "maple_success_final_perfect_excess_henesys": "Awesome! You’ve completed the Henesys Adventure.<br />But there is a way to succeed with %2 blocks. Would you like to try again?",
        "maple_success_final_not_essential_henesys": "Awesome! You’ve completed the Henesys Adventure.<br />But using this block will make it easier. Would you like to try again?",
        "maple_success_final_perfect_ellinia": "Wow! That was a really fun adventure!<br />You're going to come back for another adventure, right?",
        "maple_success_final_perfect_excess_ellinia": "Wow! That was a really fun adventure!<br />But there is a way to succeed with %2 blocks. Would you like to try again?",
        "maple_success_final_not_essential_ellinia": "Wow! That was a really fun adventure!<br />But using this block will make it easier. Would you like to try again?",
        "maple_fail_fall_hole": "Oww! You’ve fallen down!<br/>Let's skip using the Jump block.",
        "maple_fail_ladder_fall_hole": "Oww! You’ve fallen down!<br />Let's go the other way using the Climb ladder block.",
        "maple_fail_more_move": "To succeed, we have to move a little bit further to the destination!",
        "maple_fail_not_found_ladder": "Oh, there's no ladder to climb here.<br />You should only use the Climb ladder block where there is a ladder.",
        "maple_fail_not_found_meat": "Oh, there's no food to take here.<br />You should only use Take food block where there is food.",
        "maple_cert_input_title": "What name do you want in the certificate?",
        "maze_distance1": "distance 1",
        "maze_distance2": "distance 2",
        "maze_distance3": "distance 3",
        "ev3": "EV3",
        "roborobo_roduino": "Roduino",
        "roborobo_schoolkit": "School Kit",
        "smartboard": "Sciencebox Codingboard",
        "smartboardbt": "Sciencebox Codingboard(Bluetooth)",
        "codestar": "Codestar",
        "cobl": "Cobl",
        "cobl_bt": "Cobl BT",
        "block_coding": "Block Coding",
        "python_coding": "Entry Python",
        "dadublock": "DaduBlock",
        "dadublock_car": "DaduBlock Car",
        "blacksmith": "Blacksmith Board",
        "course_submit_homework": "Submit",
        "course_done_study": "Complete",
        "course_show_list": "List",
        "modi": "MODI",
        "chocopi": "ChocoPi",
        "coconut": "coconut",
        "jdkit": "JDKit",
        "practical_course": "Textbook",
        "entry_user_policy": "Entry usage policy",
        "entry_scholarship_title": "Entry scholarly data",
        "entry_scholarship_content": "Entry collaborates with researchers to strengthen learning effectiveness. Check out our data.",
        "entry_scholarship_content_sub": "*We provide data which is saved in the form of a sequence of processes by users participating in the Online coding party to assist in study and analysis.",
        "entry_scholarship_download": "Data download",
        "codingparty_2016_title": "2016 Online coding party",
        "codingparty_2016_content": "We provide user's active log, who played a coding mission, with whether he/she has succeeded or not, and user age, gender",
        "codingparty_2017_title": "2017 Online coding party",
        "scholarship_go_mission": "Coding mission",
        "scholarship_guide": "Guide",
        "scholarship_see_guide": "Guide",
        "scholarship_guide_desc": "It's a guide for how to read and use data.",
        "scholarship_example": "Example",
        "scholarship_example_desc": "Check out our paper by using scholarly data.",
        "scholarship_see_example": "Download",
        "altino": "Altino",
        "private_project": "This is a private project",
        "learn_programming_entry_mission": "Solving missions with EntryBot",
        "learn_programming_line_mission": "Saving Sally with LINE Rangers",
        "learn_programming_choseok": "Making a game with Cho Seok, author of \\\"The Sound of Your Heart\\\"",
        "learn_programming_maple": "Going to the Maple World with \\\"PINK BEAN\\\"",
        "learn_programming_level_novice": "easy",
        "learn_programming_level_inter": "normal",
        "learn_programming_level_advanced": "hard",
        "line_look_for": "Finding Sally",
        "line_rangers_title_string": "Learning: Line Rangers",
        "online_codingparty_certificate_string": "Online coding party",
        "online_codingparty_line_title_string": "Line Rangers",
        "line_look_for_desc_1": "Combine the power of the LINE Rangers and defeat the powerful villain Mephisto and save Sally!",
        "line_save": "Saving Sally",
        "line_save_desc_1": "Sally is trapped at Mephisto's base. Help the LINE Rangers get to Sally by avoiding obstacles!",
        "line_escape": "Escaping with Sally",
        "line_escape_desc_1": "Help Sally and LINE Rangers escape safely from the exploding Mephisto base!",
        "solve_choseok": "rock-paper-scissors",
        "solve_choseok_desc_1": "Help Cho Seok create a rock-paper-scissors game!",
        "solve_henesys": "HENESYS",
        "solve_ellinia": "ELLINIA",
        "solve_elnath": "ELNATH",
        "solve_henesys_desc_1": "Venture into the town, and help PINK BEAN to have enough food!",
        "solve_ellinia_desc_1": "Venture into the forest, and fight against the bad monsters to save the good monsters!",
        "solve_elnath_desc_1": "Passing through the snow mountain occupied by bad monsters, go find another portal to start a new adventure!",
        "save_modified_shape": "You have unsaved changes.\nDo you want to save?",
        "save_modified_table": "Do you want to save the modified table?",
        "attach_file": "File",
        "enter_discuss_title": "Please enter the title(in 40 characters or less)",
        "enter_discuss_title_alert": "Please enter the title",
        "discuss_upload_warn": "You can only upload less than 10MB in file size",
        "discuss_list": "list",
        "discuss_write_notice": "Select this post as a notice and show it first.",
        "discuss_write_notice_open": "Select this post as a notice and show it first.",
        "search_전체": "All",
        "search_게임": "Game",
        "search_애니메이션": "Animation",
        "search_미디어아트": "Media Art",
        "search_피지컬": "Physical",
        "search_기타": "ETC",
        "discuss_write_textarea_placeholer": "Entry community is a space we make together.\nLet's make a fun community with consideration for each other.",
        "discuss_write_textarea_placeholer_qna": "This community is for Q&A.\nLet's make a fun community with consideration for each other!",
        "discuss_write_textarea_placeholer_tips": "This community is for Tips&Tricks.\nLet's make a fun community with consideration for each other!",
        "discuss_write_textarea_placeholer_free": "This community is for Discussion.\nLet's make a fun community with consideration for each other!",
        "discuss_write_textarea_placeholer_report": "This community is for Suggestions.\nLet's make a fun community with consideration for each other!",
        "discuss_write_textarea_placeholer_contest2019": "※ 아래 양식으로 작성하여 제출해주세요.\n\n1. 학년 (예: 초등학교 5학년)\n\n2. 작품 URL (‘공유하기 > 작품 공유하기’에 작품을 공유한 다음, 작품 URL을 복사하여 적어주세요.)\n\n3. 작품 설명\n\n※ 공모전 수상자에게는 이메일이 발송될 예정입니다.\n엔트리의 ‘내 정보 수정‘에 이메일 정보를 꼭 입력해주세요!",
        "maze_road": "road",
        "account_deletion": "Account deletion",
        "bug_report_too_many_request": "Your report is being sent. Please try again later.",
        "pinkbean_index_title": "Let’s head to the exciting Maple World with Pink Bean!",
        "pinkbean_index_content": "Pink Bean, who couldn’t stand boredom, has ventured into Maple World.<br />Explore the exciting Maple World with Pink Bean and fill the adventure journal.<br />You can learn the software while passing through each step, and you can get a certificate after you complete the mission.",
        "rangers_index_title": "Saving Sally with LINE Rangers!",
        "rangers_index_content": "LINE Rangers are combined to defeat the powerful villain Mephisto and save Sally.<br />Be the hero by avoiding obstacles and saving Sally through the principle of software.<br />You can learn about software passing through each steps and get the licence<br />after finishing the mission.",
        "rangers_replay_button": "Replay",
        "rangers_start_button": "Start",
        "lms_curriculum_intro": "",
        "lms_curriculum_goal": "",
        "lms_curriculum_prepare": "",
        "lms_curriculum_study": "",
        "lms_curriculum_summary": "",
        "lms_curriculum_quiz": "",
        "lms_curriculum_now_stage": "",
        "bug_report_title": "Bug Report",
        "bug_report_content": "Please tell us about errors or good suggestions that you find when you use Entry.",
        "object_import_syntax_error": "Since the object has syntax error blocks, it cannot be loaded. Please convert into block mode to load the object.",
        "choseok_top_wrapper_panel_title": "조석과 함께 가위바위보 게임을 만들어보세요!",
        "choseok_top_wrapper_panel_des": "마음의 소리 웹툰이 코딩파티 미션으로 탄생했습니다. <br/>만화속 조석이 (가위바위보 게임)을 만들어가는 과정에 참여하여 미션에<br/>도전해 보세요.<br/>각 단계를 통과하면서 자연스럽게 소프트웨어를 배워볼 수 있고, 미션을 모두 마치면</br>인증서와 나만의 게임을 얻을 수 있습니다.<br/>",
        "choseok_mission_statement1": "조석을 움직여보자",
        "choseok_mission_statement2": "가위바위보를 시작해보자",
        "choseok_mission_statement3": "가위바위보 승부를 가려보자",
        "choseok_mission_statement4": "가위바위보 게임을 완성해보자",
        "choseok_mission_statement5": "자유롭게 만들어보자",
        "choseok_mission_statement_top1": "미션 1 : 조석을 움직이기",
        "choseok_mission_statement_top2": "미션 2 : 가위바위보를 시작하기",
        "choseok_mission_statement_top3": "미션 3 : 가위바위보 승패 만들기",
        "choseok_mission_statement_top4": "미션 4 : 가위바위보 결과 보여주기",
        "choseok_mission_statement_top5": "미션 5 : 자유롭게 만들어보기",
        "advisory_title": "Entry Advisory Group",
        "advisory_sub_title": "This is an advisory group including teachers and students who make Entry together.",
        "data_table_column": "column",
        "data_table_row": "row",
        "data_table_provider": "Source",
        "data_table_modifidate": "modify",
        "draw_new_table_ques_1": "You can enter data and save to table.",
        "draw_new_table_ques_2": "Do you want to move to enter data?"
    },
    "Msgs": {
        "video_model_load_success": "Load Success",
        "video_model_load_completed": "Video sensing enabled",
        "microbit_led_erase_all": "Reset",
        "loading_plz_wait": "Now Loading. Please Wait.",
        "ai_utilize_video_loading": "video sensing block is now loading.<br/> It takes up to 1 minute",
        "ai_utilize_audio_listening": "Listening",
        "upload_error_title": "File rejected",
        "upload_error_content": "Files not complying with the entry usage policy are excluded",
        "monthly_intro_0": "Monthly entry is an SW training magazine designed to help teachers who are unfamiliar with SW.",
        "monthly_intro_1": "Meet the Learning contents with fun learning cartoon!",
        "monthly_title_0": "Taking a dog walk / Drawing diagram",
        "monthly_title_1": "Create a video / Music player",
        "monthly_title_2": "South Korea map puzzle / Cosmos animation",
        "monthly_title_3": "Following fishes / Planets",
        "monthly_title_4": "Harvesting potatoes / Strawberry milk",
        "monthly_description_0": "Let's make the dog that moved by your keyboard, and paint drawing project using signal and coordinate.",
        "monthly_description_1": "Let's make the photo-movie project and music player using variable.",
        "monthly_description_2": "Let's make the puzzle game that made of 'while' statement, and animation project using clone and random.",
        "monthly_description_3": "Let's make fish-art and solar system using loop, math calculation blocks.",
        "monthly_description_4": "Let's make the potato-digging and strawberry milk project using signal, variable and math calculation blocks.",
        "save_canvas_alert": "Currently saving.",
        "feedback_too_many_post": "Message sending. Please try after 10 seconds.",
        "feedback_duplicated": "It is already reported.",
        "usable_object": "Usable Object",
        "shared_varaible": "Shared Variable",
        "invalid_url": "Video URL is invalid.",
        "auth_only": "Authenticated users only",
        "runtime_error": "Runtime Error",
        "to_be_continue": "Still not working",
        "warn": "Warning",
        "error_occured": "Oops, something went wrong. Why don't you try again? If you see this more than once, please let us know by Proposal board!",
        "error_forbidden": "Can not save because you are not signed in.\nPlease make sure if you haven’t signed out in another tab.\nIf you still can not save after sign in, please leave a message via ‘Suggestion’.",
        "list_can_not_space": "List's name can't be space",
        "sign_can_not_space": "Sign's name can't be space",
        "variable_can_not_space": "Variable's name can't be space",
        "parameter_can_not_space": "Value can't be blank.",
        "training_top_title": "Programs",
        "training_top_desc": "Introducing Professional Development Programs",
        "training_main_title01": "Instructors for your Professional Development Seminar",
        "training_target01": "For l Teachers",
        "training_sub_title01": "“Give a Boost to your Classroom”",
        "training_desc01": "Are you looking for instructors to train your teachers?\nWe will match you with excellent instructors with knowledge and experience.",
        "training_etc_ment01": "* Seminar are hosted and paid for by the requesting schools",
        "training_main_title02": "Teacher Development Program for Lead Schools",
        "training_target02": "For l Lead and Research Schools",
        "training_sub_title02": "“Go, Share, and Connect”",
        "training_desc02": "We randomly select schools from the Lead and Research schools and provide Development Seminars for free.\nSeminars are taught by Go-to-Teacher Program teachers.",
        "training_etc_ment02": "",
        "training_main_title03": "Experienced Instructors for Parent and Student seminars",
        "training_target03": "For l Parents, Students",
        "training_sub_title03": "“Time to Explore Software Education”",
        "training_desc03": "Need instructors to introduce coding to parents and students?\nWe will match you with our instructors with knowledge and experience. ",
        "training_etc_ment03": "* Seminar are hosted and paid for by the requesting schools",
        "training_apply": "Apply",
        "training_ready": "Ready",
        "new_version_title": "Install the latest version",
        "new_version_text1": "Current Hardware Connection Program",
        "new_version_text2": "is not the most updated version.",
        "new_version_text3": "Please install the latest version.",
        "new_version_text4": "",
        "new_version_download": "Download<span class='download_icon'></span>",
        "not_install_title": "Uninstalled",
        "hw_download_text1": "Install to connect hardware.",
        "hw_download_text2": "",
        "hw_download_text3": "Hardware Connector Program is not installed.",
        "hw_download_text4": "Please install the latest version.",
        "hw_download_btn": "Download<span class='download_icon'></span>",
        "not_support_browser": "Your browser is not supported.",
        "quiz_complete1": "Quiz is finished",
        "quiz_complete2": "You've got {1} correct out of {0} problems",
        "quiz_incorrect": "Let's think again",
        "quiz_correct": "That's the answer",
        "hw_connection_success": "Hardware connection success",
        "hw_connection_success_desc": "Double click the hardware icon to check sensor values",
        "hw_connection_success_desc2": "Hardware connection is successful",
        "ie_page_title": "This browser is not supported",
        "ie_page_desc": "Entry is available in Internet Explorer 10 or higher or in Chrome browser.<br/>Please update the Windows or install a Chrome browser.<br/>Offline versions are available even though the internet is not connected. Get download now!",
        "ie_page_chrome_download": "Chrome<br/>download",
        "ie_page_windows_update": "Windows<br/>update",
        "ie_page_offline_32bit_download": "Windows 32bit<br/>download",
        "ie_page_offline_64bit_download": "Windows 64bit<br/>download",
        "ie_page_offline_mac_download": "Mac<br/>download",
        "cancel_deletion_your_account": "Do you want to cancel the deletion of your account?",
        "account_deletion_canceled_complete": "Account deletion has been canceled.",
        "journal_henesys_no1_title": "Henesys Adventure Journal No. 1",
        "journal_henesys_no2_title": "Henesys Adventure Journal No. 2",
        "journal_henesys_no1_content": "This is the first journal for Henesys. Today, I almost fell trying to jump on the way to the blacksmith’s house. He’s important in Henesys. Why did he make such a big hole in front of his yard? I don't think there’s anyone who can jump through these holes unless it's a great monster like me! let’s go to that restaurant. It’s supposed to be good!",
        "journal_henesys_no2_content": "I really did eat too much. The meat in that restaurant was really delicious. How could it be so tender? But the bread next door wasn’t great. The chef seemed to be always playing around, saying he’s “learning how to cook better.” He should use that time to get some more practice. Now that I’ve filled my belly, time to start a full-scale adventure!",
        "journal_ellinia_no1_title": "Ellinia Adventure Journal No. 1",
        "journal_ellinia_no2_title": "Ellinia Adventure Journal No. 2",
        "journal_ellinia_no1_content": "Phew, I sat on an Orange Mushroom without even knowing. I guess that’s a good reason to get mad... But piling on me was too much! They’re a scary bunch. No wonder the slimes had a hard time. No need to worry, though! Yours truly took care of it! Now that the slimes are my friends, I’m gonna continue the adventure into this gorgeous forest.",
        "journal_ellinia_no2_content": "My adventurous friend, Royal Fairy, told me there are some scary rumors going on around Elnath. I wonder what that is? I’m supposed to play with my friends at home tonight, so I’ll ask then. I can’t wait!  But what should I wear ... I don’t think anything is going to fit because I got bigger... Well, I’m always cute, so no matter what I wear, everyone will love it!",
        "journal_elnath_no1_title": "Elnath Adventure Journal No. 1",
        "journal_elnath_no2_title": "Elnath Adventure Journal No. 2",
        "journal_elnath_no1_content": "Oh, my gosh! So this is \\\"snow\\\" I heard so much about, huh? It's always spring where I live, so this is my first snow. I wasn't paying much attention because I was busy fighting the monsters, but now I see the whole world is so white and cold! I thought it’d be tasty, but it's flavorless. I wish I can bring some back, but there's no way. Oh, too bad.",
        "journal_elnath_no2_content": "Eww, I accidentally ate coal dust! Those bad monsters! Least they could do is run away quietly, but they just had to spread coal all over. Thanks to them, my shiny, fluffy pink skin is getting dirtier. I need to get out of here and take a clean bath. Adventure is nice, but no self-respecting monster should walk around looking this dirty.",
        "bug_report_alert_msg": "Thank you for the report.",
        "version_update_msg1": "You can use the latest Entry Offline version(%1).",
        "version_update_msg2": "You can use the latest Entry Hardware version(%1).",
        "version_update_msg3": "Do you want to update now?",
        "select_the_hardware": "Select the hardware<br />that you would use in the lesson.",
        "select_hardware_button": "Select",
        "select_the_expansion_block": "Select the expansion block that you would use in the lesson.",
        "select_hardware_not_support_info": "Hardware blocks are not available for open classes.",
        "select_hardware_not_support_info2": "Please wait a little bit.",
        "select_expansion_block_button": "Select",
        "expansion_weather_description": "It is a collection of blocks related to weather in Korea such as temperature, precipitation, and fine dust concentration.",
        "expansion_festival_description": "It is a collection of blocks related to various events and festivals by local area.",
        "expansion_translate_description": "It is a collection of blocks that can translate into other languages using the Papago.",
        "expansion_behaviorConductDisaster_description": "It is a collection of blocks about behavior-guidelines that the public should follow when natural disasters occur. (Provided by MPSS)",
        "expansion_behaviorConductLifeSafety_description": "It is a collection of blocks about basic behavior-guidelines that the public should follow for safty in life. (Provided by MPSS)",
        "expansion_emergencyActionGuidelines_description": "It is a collection of blocks about emergency action guidelines for citizens to follow in order to stay safe during natural and social disasters, as well as in everyday life.",
        "expansion_disasterAlert_description": "It is a collection of blocks for disaster alerts, which deliver various information and notifications to protect the safety of the public.",
        "ai_utilize_tts_description": "It is a collection of blocks that can read text in a variety of voice using the Clova.",
        "hardware_need_update_title": "Entry HW update",
        "hardware_need_update_content": "Please update to the latest version,\nif you are using below version.\nEntry website only supported v1.9.0 or later.\nPlease remove the web browser cache,\nif any block doesn't appear after updating.",
        "cannot_delete_function": "Function already in use.\nTo change the return value setting,\nthere must be no object with a function block.",
        "local_variable_deletion_warning": "If you have a local variable in use,\nthe associated block may be deleted.\nDo you really want to change it?",
        "warning_function_aleady_being_edited": "To add a new function,\nclick 'Save' or 'Cancel' to exit\nthe Add function screen.",
        "ai_utilize_audio_description": "It is a collection of blocks that recognize speech using microphone.",
        "ai_utilize_video_description": "It is a collection of blocks that can recognize movement, direction and object to be shot by using camera. (IE / iOS Not Supported)",
        "ai_utilize_pose_landmarker_description": "It is a collection of blocks that detect human bodies using camera.",
        "ai_utilize_face_landmarker_description": "It is a collection of blocks that detect human faces using camera.",
        "ai_utilize_object_detector_description": "It is a collection of blocks that detect objects using camera.",
        "ai_utilize_gesture_recognition_description": "It is a collection of blocks that detect human hands using camera.",
        "sound_empty1": "Click [Add Sound] to add sound.",
        "sound_empty2": "How to add sound",
        "sound_empty3": "1. On the 'Select sound' tab, select the default sound provided by the Entry.",
        "sound_empty4": "2. On the 'Upload files' tab, upload the MP3 file directly.",
        "sound_empty5": "You can cut only the parts you need in the 'Trim' mode, or adjust the volume, speed and pitch in the 'Adjust' mode.",
        "sound_loading": "Loading sound",
        "lecture_header_restart_msg": "Do you want to restart from the beginning?",
        "ai_utilize_train_pop_error": "The model applied to the project has been deactivated or deleted."
    },
    "Users": {
        "auth_failed": "Authentication failed",
        "birth_year": "Birth Year",
        "birth_year_before_1990": "Before 1990s",
        "edit_personal": "Account Settings",
        "email": "Email",
        "email_desc": "Enter your Email address to receive newsletters",
        "email_inuse": "E-mail address is already in-use",
        "email_match": "Please enter a valid email",
        "forgot_password": "Forgot your password?",
        "job": "Job",
        "language": "Language",
        "name": "Full Name",
        "name_desc": "Enter your name",
        "name_not_empty": "You must enter your name",
        "password": "Password",
        "password_desc": "",
        "password_invalid": "Invalid Password",
        "password_long": "Password must be between 4-20 characters long",
        "password_required": "Password can not be blank",
        "project_list": "Project List",
        "my_page": "My page",
        "regist": "Signup Complete",
        "rememberme": "Remember me",
        "repeat_password": "Repeat Password",
        "repeat_password_desc": "Repeat Password",
        "repeat_password_not_match": "Passwords do not match",
        "sex": "Sex",
        "signup_required_for_save": "Signin required for saving a project.",
        "username": "Username",
        "username_desc": "Enter your unique name for signin",
        "username_inuse": "Username already taken",
        "username_long": "Username must be between 4-20 characters long",
        "username_unknown": "Unknown user",
        "already_verified": "Already verified",
        "email_address_unavailable": "The email address is unavailable.",
        "email_address_invalid_for_idpw": "The email address is not available.\n Please try 'Find ID or Password' again to resend. ",
        "email_address_invalid_for_certification": "The email address is not available.\n Please verify your email again.",
        "verification_complete": "Verification has been completed.",
        "reset_password_mail_sent": "Email for password resetting has been sent. Please check your email.",
        "email_not_verified": "This email is not verified. Please verify your email to click 'Verifying email' first.",
        "verification_email_send_complete": "Verifying email has been sent. Please verify your email first.",
        "email_send_failed": "Sending email was failed. Please try again.",
        "email_not_exist": "This email does not exist.",
        "not_valid_email": "Please enter a correct type of email."
    },
    "Workspace": {
        "picture_rotation": "Rotation",
        "picture_size": "Size",
        "thickness": "thickness",
        "follow": "Follow",
        "SaveWithPicture": "You have a unsaved drawing. Do you want to save it?",
        "RecursiveCallWarningTitle": "Limitation of function call",
        "RecursiveCallWarningContent": "Too many functions were called at once. Please reduce the function calls.",
        "SelectShape": "Move",
        "SelectCut": "Cut",
        "Pencil": "Pen",
        "Line": "Line",
        "Rectangle": "Rectangle",
        "Ellipse": "Ellipse",
        "Text": "Text Box",
        "Fill": "Fill",
        "Eraser": "Eraser",
        "Magnifier": "Zoom in/out",
        "block_helper": "Block helper",
        "new_project": "New Project",
        "add_object": "Add objects",
        "download_image_name": "entry block",
        "all": "All",
        "animal": "Animal",
        "arduino_entry": "Program for connect to Arduino",
        "arduino_program": "Arduino program",
        "arduino_sample": "Sample code for Arduino",
        "arduino_driver": "Driver for arduino",
        "cannot_add_object": "Cannot add objects while running a project.",
        "cannot_add_picture": "Cannot add picture while running a project.",
        "cannot_add_sound": "Cannot add sound while running a project.",
        "cannot_add_expansion_block": "Cannot add expansion block while running a project.",
        "add_object_before_edit": "Add object firstly,\nto edit the shape.",
        "add_table_before_edit": "Add table.",
        "cannot_edit_click_to_stop": "Can not modify a project.\nClick to stop",
        "cannot_open_private_project": "Can not load private project. Move to home.",
        "cannot_save_running_project": "Can not save while running a project.",
        "character_gen": "Make an avarta",
        "check_runtime_error": "Please check the block marked with red.",
        "check_browser_error": "This block is not compatible to IE/Safari/iOS",
        "check_browser_error_video": "This block is not compatible to IE / iOS.",
        "check_microphone_error": "There is no microphone connected to the computer",
        "check_webcam_error": "There is no camera connected to the computer",
        "context_download": "Download to PC",
        "context_duplicate": "Duplicate",
        "context_remove": "Remove",
        "context_rename": "Rename",
        "coordinate": "Coord",
        "create_function": "Create Function",
        "direction": "Direction(°)",
        "drawing": "Paint",
        "enter_list_name": "",
        "enter_name": "Enter a new name",
        "enter_new_message": "Enter new message name.",
        "enter_variable_name": "Enter the new variable name (less than 10)",
        "family": "Family",
        "fantasy": "Fantasy/etc",
        "file_new": "New Project",
        "file_open": "Open project",
        "file_upload": "Upload my project",
        "file_upload_login_check_msg": "For the uploading your project you have to sign in",
        "file_save": "Save",
        "file_save_as": "Save as clone",
        "file_save_download": "Download project",
        "func": "Function",
        "function_create": "Add function",
        "function_attribute": "Attribute",
        "function_add": "Add function",
        "interface": "Interface",
        "landscape": "Landscape",
        "list": "List",
        "list_create": "Add list",
        "list_create_placeholder": "Input the name of the list.",
        "list_dup": "The name has been changed automatically.",
        "list_newname": "New name",
        "list_export": "Export",
        "list_import": "Import",
        "list_remove": "Remove list",
        "list_rename": "Rename list",
        "list_rename_failed": "Rename list failed",
        "list_rename_ok": "The name has been changed successfully.",
        "list_too_long": "The name cannot exceed 10 characters.",
        "func_property": "Attribute of the function",
        "message": "Signal",
        "message_add_cancel": "Canceled",
        "message_add_cancel_msg": "Add a message was canceled.",
        "message_add_fail": "Failed",
        "message_add_fail_msg": "Message name conflicted.",
        "message_add_ok": "Message added",
        "message_add_ok_msg": "was successfully added.",
        "message_create": "Add Signal",
        "message_add": "Add Signal",
        "message_create_placeholder": "Input the name of the signal",
        "message_dup": "Message name conflicted.",
        "message_remove": "Remove a message",
        "message_remove_canceled": "Remove a message was canceled",
        "message_rename": "Rename a message",
        "message_rename_failed": "Rename message failed",
        "message_rename_ok": "Successfully rename message.",
        "message_too_long": "Message name too long.",
        "use_block_function": "Assembled inside the function.",
        "use_block_project": "Block : {0}",
        "use_blocks_project": "Blocks : {0}",
        "pose_landmarker_title_text": "Human detection",
        "face_landmarker_title_text": "Face Detection",
        "object_detector_title_text": "Object detection",
        "gesture_recognition_title_text": "Hand detection",
        "sound_start_point": "Start point",
        "sound_end_point": "End point",
        "sound_selection": "Selection",
        "sound_volume": "Volume",
        "sound_speed": "Speed",
        "sound_pitch": "Pitch",
        "no_message_to_remove": "There is no message to remove.",
        "no_use": "Not assembled on object.",
        "no_variable_to_rename": "There is no varibale to remove",
        "object_not_found": "No object is specified in the block.",
        "object_not_found_for_paste": "There is no object to paste.",
        "people": "People",
        "picture_add": "Add Shape",
        "table_add": "Add Table",
        "draw_new_table": "New Table",
        "plant": "Plant",
        "project": "Project",
        "project_copied": "Copy",
        "PROJECTDEFAULTNAME": "['Cool', 'Funny', 'Nice', 'Huge', 'Great', 'Handsome', 'Lucky']",
        "remove_object": "Remove Object",
        "remove_object_msg": "remove was successfully completed.",
        "removed_msg": "was successfully removed",
        "rotate_method": "Rotate",
        "rotation": "Rotation(°)",
        "run": "Run",
        "saved": "Saved",
        "saved_msg": "was successfully saved.",
        "save_failed": "Problem occurred while saving a project. Please try again.",
        "select_library": "Select Object",
        "select_sprite": "Please select at least one sprite to apply.",
        "shape_remove_fail": "Remove a shape was failed.",
        "shape_remove_fail_msg": "At least one or more shapes required.",
        "shape_remove_ok": "Shape Removed",
        "shape_remove_ok_msg": "was removed.",
        "load_expansion_block": "Load Expansion Block",
        "load_ai_utilize_block": "Load AI Block",
        "load_ai_utilize_train_block": "Train AI Model",
        "select_expansion_block": "Select block",
        "deselect_expansion_block_warning": "The selected block cannot be deleted. \nThe specified block is currently in use.",
        "deselect_ai_utilize_block_warning": "The selected block cannot be deleted. \nThe specified block is currently in use.",
        "sound_add": "Add Sound",
        "sound_remove_fail": "Remove a sound was failed.",
        "sound_remove_ok": "Sound Removed",
        "sound_remove_ok_msg": "was removed.",
        "stop": "Stop",
        "pause": "Pause",
        "restart": "Restart",
        "speed": "Speed",
        "tab_attribute": "Attribute",
        "tab_table": "Table",
        "tab_code": "Block",
        "tab_picture": "Shape",
        "tab_sound": "Sound",
        "tab_text": "TextBox",
        "textbox": "Textbox",
        "textbox_edit": "Edit Textbox",
        "textbox_input": "Please input text for apply.",
        "things": "Things",
        "textcoding_tooltip1": "Instructions for 'Entry Python'<br/>is available. Check out !",
        "textcoding_tooltip2": "Code with blocks or by Python<br/>whichever you prefer.",
        "textcoding_tooltip3": "See Python code execution results.",
        "upload": "Upload files",
        "upload_addfile": "Add a file",
        "variable": "Variable",
        "variable_add_calcel": "Canceled",
        "variable_add_calcel_msg": "Add a variable was canceled.",
        "variable_add_fail": "Failed",
        "variable_add_fail_msg1": "Variable name conflicted.",
        "variable_add_fail_msg2": "Variable name is not proper.",
        "variable_add_ok": "Variable added",
        "variable_add_ok_msg": "was successfully added.",
        "variable_create": "Add variable",
        "variable_add": "Add variable",
        "variable_dup": "Variable name was already exists.",
        "variable_newname": "New Name",
        "variable_remove": "Remove variable",
        "variable_remove_canceled": "Remove a variable was canceled",
        "variable_rename": "Rename variable name",
        "variable_rename_failed": "Failed",
        "variable_rename_msg": "'Rename variable was successfully completed.'",
        "variable_rename_ok": "Rename variabled was successfully completed.",
        "variable_select": "Select a variable",
        "variable_too_long": "Variable name too long.",
        "open_analizy_data_import": "Load table",
        "vehicle": "Vehicles",
        "add_object_alert_msg": "Add object firstly",
        "add_object_alert": "Alert",
        "create_variable_block": "Create variable",
        "create_list_block": "Create list",
        "Variable_Timer": "timer",
        "Variable_placeholder_name": "variable name",
        "Message_placeholder_name": "Signal name",
        "Variable_property": "Attribute of the variable",
        "Variable_placeholder_content": "Input the name of the variable.",
        "Variable_use_all_objects": "Use for all objects",
        "Variable_use_this_object": "Use for this object",
        "Variable_used_at_all_objects": "variable used at all objects",
        "variable_create_normal": "Use for variable\n(Stored in Project)",
        "variable_create_cloud": "Use for shared variable\n(Stored in Server)",
        "variable_create_real_time": "Use for real-time variable\n(Stored in Server)",
        "Variable_used_at_special_object": "variable used at special object",
        "Variable_used_objects": "Object used for the variable",
        "draw_new": "Draw new",
        "draw_new_ebs": "Draw new",
        "painter_file": "File ▼",
        "painter_file_save": "Save",
        "painter_file_saveas": "Save as a new picture",
        "new_picture": "New Picture",
        "painter_edit": "Edit ▼",
        "get_file": "get",
        "copy_file": "copy",
        "cut_picture": "cut",
        "paste_picture": "paste",
        "remove_all": "remove all",
        "flip_horizontal": "flip horizontal",
        "flip_vertical": "flip vertical",
        "regular": "Regular",
        "bold": "Bold",
        "font_underline": "underline",
        "font_textblock_strikethrough": "Strikethrough",
        "font_textblock_underline": "Underline",
        "font_textblock_italic": "Italic",
        "font_textblock_bold": "Bold",
        "font_tilt": "tilt",
        "font_cancel": "cancel",
        "font_color": "font color",
        "font_fill": "Fill",
        "font_family": "font",
        "align_left": "left align ",
        "align_center": "center align",
        "align_right": "right align",
        "italic": "Italic",
        "textStyle": "text",
        "add_picture": "Add Shape",
        "select_picture": "Select Library",
        "select_table": "Select Table",
        "select_sound": "Select sound",
        "Size": "Size",
        "show_variable": " show variable",
        "default_value": "default",
        "variable_default_value": "Default value",
        "list_default_value": "Default value",
        "slide": "slide",
        "min_value": "min",
        "max_value": "max",
        "number_of_list": "number of list items",
        "empty_of_list": "No items added.",
        "use_all_objects": "Use for all objects",
        "list_name": "List name",
        "list_property": "Attribute of the list",
        "list_used_specific_objects": "List used for specific object",
        "List_used_all_objects": "List used for all objects",
        "List_used_objects": "Object used for the list",
        "Scene_delete_error": "The scene is, there should be at least one.",
        "Scene_add_error": "The scene is up to 20.",
        "replica_of_object": "'s replicas",
        "will_you_delete_scene": "Deleting scene can not be restored.\nAre you sure you want to delete scene?",
        "will_you_delete_function": "Deleting function can not be restored.\nAre you sure you want to delete function?",
        "duplicate_scene": "duplicate",
        "block_explain": "Block description ",
        "block_intro": "Clicking on the block comes the description of the block . ",
        "blocks_reference": "Blocks Reference",
        "hardware_guide": "Hardware Guide",
        "robot_guide": "Robot Guide",
        "python_guide": "Entry Python Guide",
        "show_list_workspace": "Show list",
        "list_create_normal": "Use for list\n(Stored in Project)",
        "list_create_cloud": "Use for shared list \n(Stored in Server)",
        "list_create_real_time": "Use for real-time list\n(Stored in Server)",
        "confirm_quit": "You didn't saved your changes.",
        "confirm_load_temporary": "There is a project that has ended without saving.\nDo you want to open the unsaved project first?",
        "confirm_lesson_recovery_header": "Lesson Recovery",
        "confirm_lesson_recovery": "You have unsaved lesson. Do you want open it?",
        "login_to_save": "Try to save after login.",
        "cannot_save_in_edit_func": "Can not save while editing function.",
        "new_object": "New Object",
        "arduino_connect": "",
        "arduino_connect_success": "",
        "confirm_load_header": "Project Restoration",
        "uploading_msg": "Uploading",
        "file_size_exceeded": "\nThe variable or list has\ntoo much data to upload.",
        "upload_fail_msg": "Upload failed. Please try again.",
        "upload_not_supported_msg": "Not supported file type.",
        "upload_not_supported_file_msg": "Not supported file type.",
        "file_converting_msg": "​File converting in process",
        "file_converting_fail_msg": "​File conversion has failed",
        "fail_contact_msg": "If the problem persists,</br>contact help@playentry.org",
        "saving_msg": "Saving",
        "saving_fail_msg": "Save failed. Please try again.",
        "loading_msg": "Loading",
        "loading_fail_msg": "Load failed. Please try again.",
        "restore_project_msg": "Project is not saved properly. Would you like to restore this project?",
        "quit_stop_msg": "Program cannot be closed during save.",
        "ent_drag_and_drop": "Drag and drop the file to upload",
        "not_supported_file_msg": "This file format is not supported",
        "broken_file_msg": "File is corrupt or wrong file is loaded",
        "check_audio_msg": "Not supported file type.",
        "check_entry_file_msg": "Only ENT files are loadable",
        "hardware_version_alert_text": "Please update your hardware connector to the latest version.",
        "variable_name_auto_edited_title": "variable name auto-edited",
        "variable_name_auto_edited_content": "variable name cannot exceed 10 characters",
        "list_name_auto_edited_title": "list name auto-edited",
        "list_name_auto_edited_content": "list name cannot exceed 10 characters",
        "cloned_scene": "Cloned_",
        "default_mode": "Standard",
        "practical_course_mode": "Textbook",
        "practical_course": "practical course",
        "select_mode": "Mode",
        "select_mode_popup_title": "Choose 'Create' option",
        "select_mode_popup_lable1": "Standard",
        "select_mode_popup_lable2": "Textbook(Practical Course)",
        "select_mode_popup_desc1": "Create projects with<br/>unlimited Entry features",
        "select_mode_popup_desc2": "Create projects using<br/>'Practical Course' features",
        "practical_course_notice": "Notice",
        "practical_course_desc": "<span class='practical_cource_title'>교과용 만들기</span>는<br />실과 교과서로 소프트웨어를 배울 때<br />필요한 기능만을 제공합니다.",
        "practical_course_desc2": "*기본형 작품 만들기를 이용하면 더 많은 기능을<br />이용해 작품을 만들 수 있습니다.",
        "practical_course_tooltip": "모든 기능을 이용하기 위해서는<br/>기본형을 선택해 주세요.",
        "name_already_exists": "The name already exists.",
        "enter_the_name": "Please enter the name.",
        "object_not_exist_error": "Object does not exist. Please add object and try again.",
        "project_length_error": "The name of project/lesson can be up to 45 characters with spaces.",
        "workspace_tutorial_popup_desc": "<span class='practical_cource_title'>작품 만들기</span>는<br />창의적인 작품을 만들 수 있도록<br /> 다양한 블록과 기능을 제공합니다.",
        "start_guide_tutorial": "Creating Guide",
        "language": "language",
        "file": "file",
        "save": "save",
        "help": "help",
        "print": "print",
        "undo": "undo",
        "redo": "redo",
        "workspace_title_tooltip": "The default project name has changed. You can\nrecognize what project is through the date you create in\nthe project name.",
        "workspace_object_tooltip": "You can change the order of the object by\ndragging the image of the object. (It is the same\nin the ‘Shape’ and ‘Sound’ sections.)",
        "workspace_comment_tooltip": "You can hide or show all the memos\nadded.",
        "workspace_zoom_tooltip": "You can zoom in/out the blocks. If you click ‘=’\nthe block will be back to original size.",
        "workspace_image_tooltip": "Create your own\nproject with new\nfunctions!",
        "playground_block_drop": "Add the blocks in my storage\nto assembly station",
        "container_object_drop": "Add the object in my storage\nto object list",
        "my_storage_block_drop": "Add\nthe blocks\nto my storage",
        "my_storage_object_drop": "Add\nthe object\nto my storage",
        "my_storage": "my storage",
        "my_block": "My Block",
        "red": "Red",
        "green": "Green",
        "blue": "Blue",
        "hue": "Hue",
        "saturation": "Saturation",
        "brightness": "brightness",
        "spoid": "Spoid",
        "palette_mode": "Palette mode",
        "slider_mode": "Slider mode",
        "toast_error_title_object_center": "Caution",
        "toast_error_contents_object_center": "If the center point is far from the object and goes out of the canvas, it returns to its original position.",
        "blocks_comming_soon": "I'm working hard.\nPlease wait a little longer!",
        "data_table": "table",
        "select_all": "모두",
        "now_loading_msg": "Now Loading.\nPlease Wait.",
        "play_my_project": "Let's play what you've created.",
        "goal_project": "Explore Goal Project",
        "look_target_project": "Let's take a look at what you're going to do with the project.",
        "ai_learning_login_required": "Training model is not available \nwhen logged out.",
        "bring_forward": "Bring Forward",
        "send_backward": "Send Backward",
        "check_result_value": "Return a value",
        "check_local_variable": "Use local variable",
        "local_variable": "Local variable",
        "local_variable_dup": "The local variable name changed automatically because it already exists.",
        "local_variable_rename": "Rename completed",
        "local_variable_rename_failed": "Rename failed",
        "local_variable_rename_ok": "The local variable has been renamed.",
        "use_block_objects1": "Object using the function ({0} block(s))",
        "use_block_objects2": "Object using the function ({0})"
    },
    "code": "view code",
    "EntryStatic": {
        "event100": "Event",
        "groupProject": "open group",
        "usage_parallel": "Parallel",
        "usage_expansion": "Expansion",
        "usage_hw": "Hardware",
        "usage_sequence": "Sequence",
        "privateProject": "only owner",
        "privateCurriculum": "only owner",
        "publicCurriculum": "curriculum share",
        "publicProject": "project share",
        "group": "open group",
        "groupCurriculum": "open group",
        "private": "only owner",
        "public": "open lessons",
        "lecture_is_open_true": "open",
        "lecture_is_open_false": "closed",
        "category_all": "All Categories",
        "category_game": "Game",
        "category_animation": "Animation",
        "category_media_art": "Media Art",
        "category_physical": "Physical",
        "category_etc": "etc",
        "category_category_game": "Game",
        "category_category_animation": "Animation",
        "category_category_media_art": "Media Art",
        "category_category_physical": "Physical",
        "category_category_etc": "etc",
        "sort_created": "By Latest",
        "sort_updated": "By Latest",
        "sort_visit": "By Viewers",
        "sort_likeCnt": "By Likes",
        "sort_comment": "By Comments",
        "period_all": "Entire period",
        "period_1": "Today",
        "period_7": "Latest 1 week",
        "period_30": "Latest 1 month",
        "period_90": "Latest 3 months",
        "lecture_required_time_1": "Less than 15 min.",
        "lecture_required_time_2": "15  to 30 min.",
        "lecture_required_time_3": "30 to 45 min.",
        "lecture_required_time_4": "45 to 60 min",
        "lecture_required_time_5": "over 1 hour",
        "usage_event": "Event",
        "usage_signal": "Signal",
        "usage_scene": "Scene",
        "usage_repeat": "Repeat",
        "usage_condition_repeat": "Condition repeat",
        "usage_condition": "Condition",
        "usage_clone": "Cloned Object",
        "usage_rotation": "Rotation",
        "usage_coordinate": "Coordinate",
        "usage_arrow_move": "Arrow move",
        "usage_shape": "Shape",
        "usage_speak": "Speak",
        "usage_picture_effect": "Effect",
        "usage_textBox": "Textbox",
        "usage_draw": "Draw",
        "usage_sound": "Sound",
        "usage_confirm": "Confirm",
        "usage_comp_operation": "Compare operation",
        "usage_logical_operation": "Logical operation",
        "usage_math_operation": "Math operation",
        "usage_random": "Random",
        "usage_timer": "Timer",
        "usage_variable": "Variable",
        "usage_list": "List",
        "usage_ask_answer": " Input/Output",
        "usage_function": "Function",
        "usage_arduino": "Arduino",
        "concept_resource_analytics": "Procedual Thinking",
        "concept_procedual": "Abstractive Thinking",
        "concept_abstractive": "Korean",
        "concept_individual": "English",
        "concept_automation": "Automation",
        "concept_simulation": "Simulation",
        "concept_parallel": "Parallel",
        "subject_korean": "Korean",
        "subject_english": "English",
        "subject_mathmatics": "Mathmatics",
        "subject_social": "Social",
        "subject_science": "Science",
        "subject_music": "Music",
        "subject_paint": "Paint",
        "subject_athletic": "Athletics",
        "subject_courtesy": "Courtesy",
        "subject_progmatic": "Progmatic",
        "lecture_grade_1": "1 th",
        "lecture_grade_2": "2 th",
        "lecture_grade_3": "3 th",
        "lecture_grade_4": "4 th",
        "lecture_grade_5": "5 th",
        "lecture_grade_6": "6 th",
        "lecture_grade_7": "7 th",
        "lecture_grade_8": "8 th",
        "lecture_grade_9": "9 th",
        "lecture_grade_10": "Graduated",
        "lecture_level_1": "Low",
        "lecture_level_2": "Middle",
        "lecture_level_3": "High",
        "listEnable": "list",
        "functionEnable": "function",
        "messageEnable": "message",
        "objectEditable": "object",
        "pictureeditable": "shape",
        "sceneEditable": "scene",
        "soundeditable": "sound",
        "variableEnable": "variable",
        "e_1": "elementary school 1",
        "e_2": "elementary school 2",
        "e_3": "elementary school 3",
        "e_4": "elementary school 4",
        "e_5": "elementary school 5",
        "e_6": "elementary school 6",
        "m_1": "middle school 1",
        "m_2": "middle school 2",
        "m_3": "middle school 3",
        "general": "general",
        "curriculum_is_open_true": "open",
        "curriculum_open_false": "closed",
        "contest2019": "Contest",
        "exhibit": "Contest",
        "notice": "Notice",
        "qna": "Q&A",
        "tips": "Tips & Tricks",
        "free": "Discussions",
        "report": "Suggestions",
        "art_category_all": "All projects",
        "art_category_game": "Game",
        "art_category_animation": "Animation",
        "art_category_physical": "Physical",
        "art_category_etc": "etc",
        "art_category_media": "media art",
        "art_sort_updated": "Most Recent",
        "art_sort_visit": "Views",
        "art_sort_likeCnt": "Likes",
        "art_sort_comment": "Comments",
        "art_period_all": "All",
        "art_period_day": "Today",
        "art_period_week": "Recent week",
        "art_period_month": "Recent month",
        "art_period_three_month": "Recent three month",
        "level_high": "Row",
        "level_mid": "Middle",
        "level_row": "High",
        "discuss_sort_created": "Most Recent",
        "discuss_sort_visit": "Views",
        "discuss_sort_likesLength": "Likes",
        "discuss_sort_commentsLength": "Comments",
        "discuss_period_all": "All",
        "discuss_period_day": "Today",
        "discuss_period_week": "Recent week",
        "discuss_period_month": "Recent month",
        "discuss_period_three_month": "Recent three month"
    },
    "Helper": {
        "when_run_button_click": "When the Start button is clicked, the connected blocks below will run.",
        "when_some_key_pressed": "When the assigned key is pressed, the connected blocks below will run.",
        "mouse_clicked": "When the mouse is clicked, the connected blocks below will run.",
        "mouse_click_cancled": "When the mouse click is released, the connected blocks below will run.",
        "when_object_click": "When the object is clicked, the connected blocks below will run.",
        "when_object_click_canceled": "When the object click is released, the connect blocks below will run.",
        "when_message_cast": "When the signal is received, the connected blocks below will run.",
        "message_cast": "Sends signal selected from the list",
        "message_cast_wait": "Sends signal selected from the list, and wait util the blocks finish running.",
        "when_scene_start": "When the scene starts, the connected blocks below will run.",
        "start_scene": "Selected scene starts.",
        "start_neighbor_scene": "The previous or the next scene starts.",
        "wait_second": "Runs the next block after waiting for the entered amount of time.",
        "repeat_basic": "Repeats the blocks inside for the entered number of times.",
        "repeat_inf": "Repeats the blocks inside infinitely.",
        "repeat_while_true": "Repeats the blocks inside until/while the condition is True/False. ",
        "stop_repeat": "Stops the closest block that encloses this block.\n It works with various C-shaped blocks like 'repeat' block.",
        "continue_repeat": "Skip this repeat and run it from the beginning of the next repeat.",
        "_if": "If the condition is True/False, run the blocks inside.",
        "if_else": "If the condition is True/False, run the blocks inside the 'if' section.\nIf not, run the blocks inside the 'else' section.",
        "restart_project": "The project restarts.",
        "stop_object": "All objects : Stops all the blocks of all the objects.\nThis : Stop all the blcoks of this object.\nThis code : Stop all the blocks that includes this block.\nOther block of this object : Stop the blocks not connected to the blocks of this object.\nOther object : Stop all the blocks of the other objects.",
        "wait_until_true": "Stops running and wait until the condition is True/False.",
        "when_clone_start": "When the new clone of the object is created, the connected blocks below will run.",
        "create_clone": "Self : Create the clone of this object.\nEntrybot : Create the clone of Entrybot.",
        "delete_clone": "Removes the clone of this object using with 'When clone is created'.",
        "remove_all_clones": "Removes all the clones of this object.",
        "move_direction": "Moves in the direction of the arrow by input value.",
        "move_x": "Changes the x-postion of the object by the input value.",
        "move_y": "Changes the y-postion of the object by the input value.",
        "move_xy_time": "Changes the x and y-postion of the object by input value for the input seconds.",
        "locate_object_time": "Moves the object to the position of the selected object for the input seconds.",
        "locate_x": "Moves the object to the entered x-position.",
        "locate_y": "Moves the object to the entered y-position.",
        "locate_xy": "Moves the object to the entered x and y-position.",
        "locate_xy_time": "Moves the object to the entered x and y-position for the input seconds.",
        "locate": "Moves the object to the position of the selected object.",
        "rotate_absolute": "Sets the rotation of the object at an angle of the input degrees.",
        "rotate_by_time": "Rotates the object at an angle of the input degrees for the input seconds.",
        "rotate_relative": "Rotates the object at an angle of the input degrees.",
        "direction_absolute": "Sets the direction of the object at an angle of the input degrees.",
        "direction_relative": "Changes the direction of the object at an angle of the input degrees.",
        "move_to_angle": "Moves the object by the input value in the direction of the input degrees.",
        "see_angle_object": "Turns the object toward the selected object.",
        "bounce_wall": "When object touches the edge of the screen, it bounces back.",
        "show": "Makes the object show on the screen.",
        "hide": "Hides the object from the screen.",
        "dialog_time": "Runs the next block after the object speaks the input content for the input seconds.",
        "dialog": "Runs the next block after the object speaks the input content.",
        "remove_dialog": "Removes the dialog box spoken by the object.",
        "change_to_some_shape": "Changes the object into the selected shape.",
        "change_to_next_shape": "Changes the object into the next shape.",
        "set_effect_volume": "Applies the selected effect to the object by the input value.",
        "set_effect_amount": "Applies the selected effect to the object by the input value.",
        "set_effect": "Sets the selected effect to the object by the input value.",
        "set_entity_effect": "Sets the selected effect to the object by the input value.",
        "add_effect_amount": "Applies the selected effect to the object by the input value.",
        "change_effect_amount": "Sets the selected effect to the object by the input value.",
        "change_scale_percent": "Changes the size of the object by the input value.",
        "set_scale_percent": "Sets the size of the object to the input value.",
        "change_scale_size": "Changes the size of the object by the input value.",
        "set_scale_size": "Sets the size of the object to the input value.",
        "stretch_scale_size": "Stretches the width/length of the object by the input value.",
        "reset_scale_size": "Resets the object to its original size.",
        "flip_x": "Flips the object vertically. ",
        "flip_y": "Flips the object horizontally.",
        "change_object_index": "Bring to front : Bring object to the very front.\nBring one front : Bring object one layer front.\nSend one back : Send object one layer back.\nSend to back : Send object the very back.",
        "set_object_order": "Shows the object in the set order.",
        "brush_stamp": "Clones the object on stage like a stamp.",
        "start_drawing": "Starts drawing along the path of the object.",
        "stop_drawing": "Stops object's drawing.",
        "start_fill": "Starts filling along the path of the object.",
        "stop_fill": "Stops filling.",
        "set_fill_color": "Sets the fill color of the object to the selected color.",
        "set_color": "Sets the brush color of the object to the selected color.",
        "set_random_color": "Sets the brush color of the object to random.",
        "change_thickness": "Changes the brush thickness of the object to the input value.",
        "set_thickness": "Sets the brush thickness of the object to the input value.",
        "change_opacity": "Changes the brush transparency of the object to the input value.",
        "change_brush_transparency": "Changes the brush transparency of the object to the input value.",
        "set_opacity": "Sets the brush transparency of the object to the input value.",
        "set_brush_tranparency": "Sets the brush transparency of the object to the input value.",
        "brush_erase_all": "Removes all the brush effects on the object.",
        "sound_something_with_block": "Plays object's selected sound while the next block runs.",
        "sound_something_second_with_block": "Plays object's selected sound for input seconds while the next block runs.",
        "sound_something_wait_with_block": "Plays object's selected sound then the next block runs after the playing finished.",
        "sound_something_second_wait_with_block": "Plays object's selected sound for input seconds then the next block runs.",
        "sound_volume_change": "Changes the volume of all the sounds played as much as the input percentage.",
        "sound_volume_set": "Sets the volume of all the sounds played as much as the input percentage.",
        "get_sound_speed": "Reports the sound speed.",
        "sound_speed_change": "Changes the speed of all sounds by the input value.",
        "sound_speed_set": "Sets the speed of all sounds to the input value.",
        "sound_silent_all": "Stops all sounds currently playing.",
        "is_clicked": "Checks whether mouse is clicked.",
        "is_object_clicked": "Checks whether object is clicked.",
        "is_press_some_key": "Checks whether an selected key is pressed.",
        "reach_something": "Checks whether the object reaches the selected point.",
        "is_type": "Checks whether the input text is a number. If the input text is a number, it is judged as ’True’.",
        "is_included_in_list": "Checks whether selected list contains the input value.",
        "boolean_basic_operator": "Compare the two values entered.\n= : If the value on the left and the value on the right are the same, it is judged as 'true'.\n!= : If the value on the left and the value on the right are not the same, it is judged as 'true'.\n> : If the value on the left is more than the value on the right, it is judged as 'true'.\n< : If the value on the left is less than the value on the right, it is judged as 'true'.\n≥ : If the value on the left is more than or equal to the value on the right, it is judged as 'true'\n.≤ : If the value on the left is less than or equal to the value on the right, it is judged as 'true'.",
        "function_create": "Define a function by placing frequently used sets of blocks under this block. Place [name] next to [Define function] to give function a name. Pass on number of text values by placing [numeric/text value] block. Pass on boolean value of true or false by placing the [boolean value] block.",
        "function_field_label": "Place inside the [Define function] block and gives function a name.",
        "function_field_string": "Place inside the [Define function] block and the result depends on the input numeric/text value. Grab/copy the [numberic/text value] block in the [Define function] block and use its value in function.",
        "function_field_boolean": "Place inside the [Define function] block and the result depends on the boolean value of true or false. Grab/copy the [numberic/text value] block in the [Define function] block and use its value in function.",
        "function_general": "This is current function block or function blocks created so far.",
        "boolean_and": "Checks whether both conditions are true.",
        "boolean_or": "Checks whether at least one of the two conditions is true.",
        "boolean_not": "Changes the input conditions to its opposite.\n(If the input condition is true, it returns 'False'. And if the input condition is false, it returns 'True'.)",
        "is_boost_mode": "Checks whether the boost mode is turned on or not.\nIf the boost mode is on, it is judged as 'True'.",
        "is_current_device_type": "If the device that runs the project is the selected device, it is judged as 'true'.",
        "is_touch_supported": "If the device that runs the project is a touch screen, it is judged as 'true'.",
        "calc_basic": "Adds two input numbers.",
        "calc_rand": "Selects a random value between the two input numbers.",
        "get_x_coordinate": "Reports the x-position value of the object.",
        "get_y_coordinate": "Reports the y-position value of the object.",
        "coordinate_mouse": "Reports either the x/y coordinate value of the mouse.",
        "coordinate_object": "Reports the x/y coordinate value or various information (direction, rotation, scale, etc.) of the object.",
        "quotient_and_mod": "quotient : The answer after dividing the first input number by the second input number.\nRemainer : The amount left over after division.",
        "get_rotation_direction": "Reports the object’s value of direction and value of movement.",
        "calc_share": "Reports the quotient occurring from first number divided by the second number. ",
        "calc_mod": "Reports the remainder occurring from the first number divided by the second number.",
        "calc_operation": "Reports calculated values of a variety of equations relating to input numbers.",
        "get_date": "Reports the values regarding the current year, month, day, day of the week and time.\n- Year: Returns the current year.\n- Month: Returns the current month.\n- Day: Returns the current day.\n- Day of the week: Returns the current day of the week as a number.\nReturns Sunday, Monday, Tuesdays, Wednesdays, Thursdays, Fridays, Saturdays as 0, 1, 2, 3, 4, 5, 6 in turn.\n- Time: Returns the current time in hours, minutes, and seconds, respectively.",
        "distance_something": "Reports the distance between the object and the selected object.",
        "get_sound_duration": "Reports the time length of the selected sound.",
        "get_user_name": "Reports the username who runs the project.",
        "get_nickname": "Reports the user nickname who runs the project.",
        "get_project_timer_value": "Reports how many seconds have passed since the project started.",
        "choose_project_timer_action": "Start : The timer starts.\nStop : The timer stops.\nReset : The timer resets to 0.\n(If this block is on workspace, the project will show the timer window when it runs.)",
        "reset_project_timer": "Resets the timer to 0.",
        "set_visible_project_timer": "Shows or hides the timer.",
        "ask_and_wait": "The object asks the input text, and then receives an answer as a response.",
        "get_canvas_input_value": "Reports the answer which is taken after the object asked.",
        "set_visible_answer": "Hide or show the response window.",
        "combine_something": "Combines two input texts.",
        "reverse_of_string": "Reports the text that reversed input text.",
        "count_match_string": "Reports the number of letters in a specific text in the input text case sensitively.",
        "get_variable": "Reports the value of the selected variable.",
        "change_variable": "Adds the input value to the selected variable.",
        "set_variable": "Sets the value of the selected variable to the input value.",
        "robotis_carCont_sensor_value": "Left connected sensor : the value of contact (1), non-contact (0).<br/>Right contact sensor: the value of contact (1), non-contact (0).<br/>Final number of sound detection : the value of the number of last live sound detection.<br/>Number of live sound detection : increases by 1 when it detects the next sound within 1 second.<br/>Right infrared sensor: the value is larger when it's closer to an object.<br/>Value of left infrared sensor calibration : the calibration value of the infrared sensor.<br/>Value of right infrared sensor calibration : the calibration value of the infrared sensor.<br/>(*Calibration value - control value of infrared sensor)",
        "robotis_carCont_cm_led": "Turns LED 1 or LED 4 among the 4 LEDs on or off. <br/>Not applicable to LED 2 and LED 3.",
        "robotis_carCont_cm_sound_detected_clear": "Initializes the final amount of detected sound to 0.",
        "robotis_carCont_aux_motor_speed": "Sets the speed of decelerating motor to the value of 0-1023.",
        "robotis_carCont_cm_calibration": "Sets the controlling value of infrared sensor (http://support.robotis.com/ko/: automobile robot> 2. B. control infrared value).",
        "robotis_openCM70_sensor_value": "Final number of sound detection : the value of the final detected sound times.<br/>Number of live sound detection : increases by 1 when it detects the next sound within 1 second.<br/>Status of user button: the value of contact (1), non-contact (0).Final number of sound detection : the value of the number of last live sound detection.<br/>Number of live sound detection : increases by 1 when it detects the next sound within 1 second.<br/>Status of user button : the value of contact (1), non-contact (0).",
        "robotis_openCM70_aux_sensor_value": "Position of servo motor: 0-1023, the value of the middle is 512.<br/>Infrared sensor : the value is larger when it's close to an object.<br/>Contact sensor: the value of contact(1), non-contact(0).<br/>CDS: 0-1023, the value is larger when it's brighter.<br/>Temperature-humidity sensor (humidity) : 0-100, the value is larger when it's more humid.<br/>Temperature-humidity sensor (temperature) : -20 - 100, the value is larger when it's higher in temperature.<br/>Temperature sensor : -20 - 100, the value is larger when it's higher in temperature.<br/>Ultrasound sensor: -<br/>Magnetic sensor : the value of contact(1), non-contact(0).<br/>Motion detector: the value of detected motion(1), non-detected motion(0).<br/>Color sensor: the value of unknown(0), white(1), black(2), red(3), green(4), blue(5), yellow(6).<br/>User device: please refer to ROBOTIS e-manual (http://support.robotis.com/ko/) for the explanation on user sensor production.",
        "robotis_openCM70_cm_buzzer_index": "Plays the scale for 0.1 to 5 seconds.",
        "robotis_openCM70_cm_buzzer_melody": "Plays melody.<br/>If the following sound doesn't play when repeatedly playing melodies, use the block 'flow > wait for X seconds' and execute it again.",
        "robotis_openCM70_cm_sound_detected_clear": "Final number of sound detection ",
        "robotis_openCM70_cm_led": "Turns the red, green, blue LED of the device on or off.",
        "robotis_openCM70_cm_motion": "Executes the motion downloaded on the device.",
        "robotis_openCM70_aux_motor_speed": "Sets the speed of decelerating motor to the value of 0 - 1023.",
        "robotis_openCM70_aux_servo_mode": "Sets the servo motor as wheel mode or joint mode.<br/>The same mode continues to apply once it's set.<br/>Wheel mode designates the servo motor's speed, and spins the servo motor.<br/>Joint mode moves the servo motor's position with the set servo motor speed.",
        "robotis_openCM70_aux_servo_speed": "Sets servo motor's speed to the value of 0 - 1023.",
        "robotis_openCM70_aux_servo_position": "Sets servo motor's position to the value of 0-1023.<br/>Use as servo motor speed",
        "robotis_openCM70_aux_led_module": "Turns the LED of LED module on or off.",
        "robotis_openCM70_aux_custom": "Please refer to the ROBOTIS e-manual (http://support.robotis.com/ko/) for the explanation of user sensor production.",
        "robotis_openCM70_cm_custom_value": "Checks the value by directly inputting the control table address.<br/>Please refer to the ROBOTIS e-manual (http://support.robotis.com/ko/) for the explanation about control table.",
        "robotis_openCM70_cm_custom": "Checks the value by directly inputting the control table address.<br/>Please refer to the ROBOTIS e-manual (http://support.robotis.com/ko/) for the explanation about control table.",
        "show_variable": "Shows the value of the selected variable on the stage.",
        "hide_variable": "Hides the value of the selected variable from the stage.",
        "value_of_index_from_list": "Reports the item at the location of the input value on the selected list.",
        "add_value_to_list": "Adds the input item to the end location of the selected list.",
        "remove_value_from_list": "Deletes the item at the location of the input value from the selected list. ",
        "insert_value_to_list": "Inserts the input item at the location of the input value on the selected list.",
        "change_value_list_index": "Replaces the item at the location of the input value to the input text.",
        "length_of_list": "Reports the number of items contained on the selected list.",
        "show_list": "Shows the selected list on the stage.",
        "hide_list": "Hides the selected list from the stage.",
        "text": "Reports the text in the text box. ",
        "text_read": "Reports the content of the text box or the text box itself.\n(If there is a line break in the content, it will be returned as a space.)",
        "text_write": "Changes the content of the text box into the input text.",
        "text_append": "Adds the input text behind the text box.",
        "text_prepend": "Adds the input text in front of the text box.",
        "text_change_effect": "Applies the selected text effect in the text box.",
        "text_change_font": "Changes the text of the box to the selected font.",
        "text_change_font_color": "Changes the text in the box to the selected color.",
        "text_change_bg_color": "Changes the text box to the selected background color.",
        "text_flush": "Removes all saved text in the text box.",
        "erase_all_effects": "Removes all the effects on the object.",
        "char_at": "Reports the letter of the input text.",
        "length_of_string": "Reports the length of input text including space.",
        "substring": "Reports the text extracted from the input text between two specified indices. (includes space)",
        "replace_string": "Reports the text that replaced all the input text with another input text. (distinguishes uppercase to lowercase)",
        "index_of_string": "Reports the index of first input text in second input text. (includes space)",
        "change_string_case": "Reports the text that converted to uppercase or lowercase.",
        "direction_relative_duration": "Rotates the direction of the object at an angle of the input degrees for the input seconds.",
        "get_sound_volume": "Reports the sound volume.",
        "sound_from_to": "Plays object's selected sound between the input seconds while the next block runs.",
        "sound_from_to_and_wait": "Plays object's selected sound between the input seconds then the next block runs.",
        "Block_info": "Block Info ",
        "Block_click_msg": "Clicking on the block comes the description of the block . ",
        "hamster_beep": "Plays beep sound.",
        "hamster_change_both_wheels_by": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "hamster_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "hamster_change_output_by": "Adds the entered value to the current output value of the selected external port. The result will be in the following range depending on the mode of the external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "hamster_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "hamster_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "hamster_clear_buzzer": "Turns off buzzer sound.",
        "hamster_clear_led": "Turns off the left/right/both LEDs.",
        "hamster_follow_line_until": "Moves along the black/white line on the left/right/front/back, then stops when the robot meets the intersection.",
        "hamster_follow_line_using": "Moves along the black/white line by using the left/right/both floor sensors.",
        "hamster_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "hamster_move_backward_for_secs": "Moves backward for the number of seconds entered.",
        "hamster_move_forward_for_secs": "Moves forward for the number of seconds entered.",
        "hamster_move_forward_once": "Moves one space forward on the board.",
        "hamster_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "hamster_rest_for": "Rests as much as the beat you entered.",
        "hamster_set_both_wheels_to": "Sets the speed of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "hamster_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "hamster_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "hamster_set_led_to": "Turns left/right/both LEDs to the selected color.",
        "hamster_set_output_to": "Sets the output value of the selected external port to the entered value. The value has the following range according to the mode of external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "hamster_set_port_to": "Sets the io mode of the selected external port to the selected mode.",
        "hamster_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "hamster_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "hamster_stop": "Stops both wheels.",
        "hamster_turn_for_secs": "Turns left/right for the number of seconds entered.",
        "hamster_turn_once": "Turns left/right 90 degrees on the board.",
        "hamster_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>left floor: value of left floor sensor (range: 0 to 100, initial value: 0)<br/>right floor: value of right floor sensor (range: 0 to 100, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.<br/>input A: value of signal input to external port A (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)<br/>input B: value of signal input to external port B (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)",
        "roboid_hamster_beep": "Plays beep sound.",
        "roboid_hamster_change_both_wheels_by": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_hamster_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "roboid_hamster_change_output_by": "Adds the entered value to the current output value of the selected external port. The result will be in the following range depending on the mode of the external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "roboid_hamster_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "roboid_hamster_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_hamster_clear_buzzer": "Turns off buzzer sound.",
        "roboid_hamster_clear_led": "Turns off the left/right/both LEDs.",
        "roboid_hamster_follow_line_until": "Moves along the black/white line on the left/right/front/back, then stops when the robot meets the intersection.",
        "roboid_hamster_follow_line_using": "Moves along the black/white line by using the left/right/both floor sensors.",
        "roboid_hamster_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "roboid_hamster_move_backward_for_secs": "Moves backward for the number of seconds entered.",
        "roboid_hamster_move_forward_for_secs": "Moves forward for the number of seconds entered.",
        "roboid_hamster_move_forward_once": "Moves one space forward on the board.",
        "roboid_hamster_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "roboid_hamster_rest_for": "Rests as much as the beat you entered.",
        "roboid_hamster_set_both_wheels_to": "Sets the speed of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_hamster_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "roboid_hamster_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "roboid_hamster_set_led_to": "Turns left/right/both LEDs to the selected color.",
        "roboid_hamster_set_output_to": "Sets the output value of the selected external port to the entered value. The value has the following range according to the mode of external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "roboid_hamster_set_port_to": "Sets the io mode of the selected external port to the selected mode.",
        "roboid_hamster_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "roboid_hamster_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_hamster_stop": "Stops both wheels.",
        "roboid_hamster_turn_for_secs": "Turns left/right for the number of seconds entered.",
        "roboid_hamster_turn_once": "Turns left/right 90 degrees on the board.",
        "roboid_hamster_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>left floor: value of left floor sensor (range: 0 to 100, initial value: 0)<br/>right floor: value of right floor sensor (range: 0 to 100, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.<br/>input A: value of signal input to external port A (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)<br/>input B: value of signal input to external port B (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)",
        "roboid_turtle_button_state": "If the button clicked/double-clicked/long-pressed, true, otherwise false.",
        "roboid_turtle_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "roboid_turtle_change_head_led_by_rgb": "Adds the entered values to the current R, G, B values of the head LED, respectively.",
        "roboid_turtle_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "roboid_turtle_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_turtle_change_wheels_by_left_right": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_turtle_clear_head_led": "Turns off the head LED.",
        "roboid_turtle_clear_sound": "Turns off sound.",
        "roboid_turtle_cross_intersection": "Moves forward for a moment at the black intersection, then finds the black line and moves again.",
        "roboid_turtle_follow_line": "Moves along the selected color line on a white background.",
        "roboid_turtle_follow_line_until": "Moves along the black line on a white background and stops when the color sensor detects the selected color.",
        "roboid_turtle_follow_line_until_black": "Moves along the selected color line on a white background and stops when the color sensor detects black.",
        "roboid_turtle_is_color_pattern": "If the color sensor detects the selected color pattern, true, otherwise false.",
        "roboid_turtle_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "roboid_turtle_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "roboid_turtle_pivot_around_wheel_unit_in_direction": "Pivots around the left/right wheel in the head/tail direction for the number of degrees/seconds/pulses entered.",
        "roboid_turtle_play_note": "It sounds the selected tone and octave.",
        "roboid_turtle_play_note_for_beats": "It sounds the selected tone and octave as much as the beat you entered.",
        "roboid_turtle_play_sound_times": "Plays the selected sound as many times as entered.",
        "roboid_turtle_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "roboid_turtle_rest_for_beats": "Rests as much as the beat you entered.",
        "roboid_turtle_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "roboid_turtle_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "roboid_turtle_set_head_led_to": "Turns the head LED to the selected color.",
        "roboid_turtle_set_head_led_to_rgb": "Sets the R, G, B values of the head LED to the entered values.",
        "roboid_turtle_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "roboid_turtle_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-400 to 400%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_turtle_set_wheels_to_left_right": "Sets the speed of the left and right wheels to the entered values (-400 to 400%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_turtle_stop": "Stops both wheels.",
        "roboid_turtle_touching_color": "If the color sensor detects the selected color, true, otherwise false.",
        "roboid_turtle_turn_at_intersection": "Moves forward for a moment at the black intersection, then turns left/right/back in place, finds the black line and moves again.",
        "roboid_turtle_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "roboid_turtle_turn_unit_with_radius_in_direction": "Turns left/right drawing the circle of the entered radius in the head/tail direction for the number of degrees/seconds/pulses entered.",
        "roboid_turtle_value": "color number: color number detected by the color sensor (range: -1 to 8, initial value: -1)<br/>color pattern: value of the color pattern detected by the color sensor (range: -1 ~ 88, initial value: -1) <br/>floor: value of floor sensor (range: 0 to 100, initial value: 0)<br/>button: status of the button (when pressed 1, otherwise 0, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.",
        "turtle_button_state": "If the button clicked/double-clicked/long-pressed, true, otherwise false.",
        "turtle_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "turtle_change_head_led_by_rgb": "Adds the entered values to the current R, G, B values of the head LED, respectively.",
        "turtle_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "turtle_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "turtle_change_wheels_by_left_right": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "turtle_clear_head_led": "Turns off the head LED.",
        "turtle_clear_sound": "Turns off sound.",
        "turtle_cross_intersection": "Moves forward for a moment at the black intersection, then finds the black line and moves again.",
        "turtle_follow_line": "Moves along the selected color line on a white background.",
        "turtle_follow_line_until": "Moves along the black line on a white background and stops when the color sensor detects the selected color.",
        "turtle_follow_line_until_black": "Moves along the selected color line on a white background and stops when the color sensor detects black.",
        "turtle_is_color_pattern": "If the color sensor detects the selected color pattern, true, otherwise false.",
        "turtle_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "turtle_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "turtle_pivot_around_wheel_unit_in_direction": "Pivots around the left/right wheel in the head/tail direction for the number of degrees/seconds/pulses entered.",
        "turtle_play_note": "It sounds the selected tone and octave.",
        "turtle_play_note_for_beats": "It sounds the selected tone and octave as much as the beat you entered.",
        "turtle_play_sound_times": "Plays the selected sound as many times as entered.",
        "turtle_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "turtle_rest_for_beats": "Rests as much as the beat you entered.",
        "turtle_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "turtle_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "turtle_set_head_led_to": "Turns the head LED to the selected color.",
        "turtle_set_head_led_to_rgb": "Sets the R, G, B values of the head LED to the entered values.",
        "turtle_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "turtle_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-400 to 400%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "turtle_set_wheels_to_left_right": "Sets the speed of the left and right wheels to the entered values (-400 to 400%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "turtle_stop": "Stops both wheels.",
        "turtle_touching_color": "If the color sensor detects the selected color, true, otherwise false.",
        "turtle_turn_at_intersection": "Moves forward for a moment at the black intersection, then turns left/right/back in place, finds the black line and moves again.",
        "turtle_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "turtle_turn_unit_with_radius_in_direction": "Turns left/right drawing the circle of the entered radius in the head/tail direction for the number of degrees/seconds/pulses entered.",
        "turtle_value": "color number: color number detected by the color sensor (range: -1 to 8, initial value: -1)<br/>color pattern: value of the color pattern detected by the color sensor (range: -1 ~ 88, initial value: -1) <br/>floor: value of floor sensor (range: 0 to 100, initial value: 0)<br/>button: status of the button (when pressed 1, otherwise 0, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.",
        "neobot_sensor_value": "Indicates the input value from ports IN1 - IN3 and the battery information as number from 0 to 255.",
        "neobot_sensor_convert_scale": "The expressed scale of the selected port's change of input value as the value of a particular scale can be adjusted.",
        "neobot_left_motor": "Sets the wheel direction and speed of the motor connected to L motor port.",
        "neobot_stop_left_motor": "Stops the motor connected to L motor port.",
        "neobot_right_motor": "Sets the wheel direction and speed of the motor connected to R motor port.",
        "neobot_stop_right_motor": "Stops the motor connected to R motor port.",
        "neobot_all_motor": "The speed, time, and direction towards front, back, left and right, when connecting 2 motors to L and R motor ports can be set and used as wheels. ",
        "neobot_stop_all_motor": "Stops the motor connected to both L and R motor ports.",
        "neobot_set_servo": "The angle within 0 - 180 degrees when connecting servo motor to OUT1 - OUT3 can be adjusted",
        "neobot_set_output": "The output voltage when connecting lighting block and electronic circuit to OUT1 - OUT3 can be set.</br>0 indicates 0V, and 1 ~ 255 indicates 2.4 ~ 4.96V.",
        "neobot_set_fnd": "Numbers from 0 to 99 with FND can be indicated.",
        "neobot_set_fnd_off": "Number indicated on FND can be turned off.",
        "neobot_play_note_for": "Notes in semitone units of the melody can be played by utilizing frequency oscillation. ",
        "rotate_by_angle_dropdown": "Rotates the object by the input number of degrees.",
        "chocopi_control_button": "This block will be true if the button is pressed.<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_control_event": "You can attach blocks to process when the button is pressed or released <br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_control_joystick": "Joystick X,Y and potentiometer has range of  0~4095.<br/>so, around 2047 will be center value.<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_dc_motor": "Two DC motors can be connected to 'DC motor' module<br/> The motor will be supplied with maximum 5V.<br/>Maximum value is 100 (100%), is negative value is used then it will rotate opposite direction.<br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_led": "LED number start from 1 and is the connecting order from the LED module.<br/>You can assign RGB values from 0 to 255<br/>RGB(Red Green Blue) order<br/>To watch an LED with bright light can be painful,<br/>so, please use small number like 0 to 5.<br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_motion_photogate_event": "Two photogates can be connected to 'Motion' module<br/>A photogate is a device with light sensor facing light source in opposite side<br/>You can attach blocks when an object blocks or unblocks light sensor<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_motion_photogate_status": "Two photogates can be connected to 'Motion' module<br/>A photogate is a device with light sensor facing light source in opposite side<br/>This block will be <b>true if an object blocks sensor</b><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_motion_photogate_time": "Two photogates can be connected to 'Motion' module<br/>A photogate is a device with light sensor facing light source in opposite side<br/>This block will have the time when an object blocked or unblocked the sensor<br/>It can measure time with resolution of 1/10000 sec<br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_motion_value": "'Motion' module has three infrared sensors<br/>The value has range of 0~4095, the more reflection from object, the smaller the value is<br/>It can be used to measure approximate distance between the sensor and an object <br/>Acceleration and angular acceleration value ranges from -32768 to 32767.<br/>You can measure inclination of the sensor using these values.<br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_sensor": "Temperature value is Celsius.<br/>Relative humidity value ranges from 0 to 100%.<br/>Light value ranges 0~4095 in log scale.<br/>Analog value ranges from 0 to 4095.<br/><br/>Port number(P1~P8) is automatically selected internally.\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_servo_motor": "'Servo' module can be connected to four servo motors<br/>Servo motors are provided with 5V<br/>You can assign 0~200 in degree unit.<br/>If a contineous rotational servo motor is connected, it's speed is determined by the degree value.<br/>Center value is from 90 to 100 varying by motor model.<br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_touch_event": "Touch module has #1~12 connecting pads.<br/>You can attach block to process when these pads are touched or untouched.<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_touch_status": "It will be true if the pad is touched.<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "chocopi_touch_value": "The value will be smaller if the capacitance of the obeject is larger.<br/>If many people hold each other's hand and touch, the value will be smaller<br/>'Capacitance' means how many electric particles the object can hold.<br/><br/><br/>Port number(P1~P8) is automatically selected internally\nIt is needed only when multiple modules with the same kind are used",
        "boolean_and_or": "AND : Checks whether both conditions are true.\nOR : Checks whether at least one of the two conditions is true.",
        "check_weather": "\nChecks whether the weather information of the selected date and region matches the actual weather conditions.",
        "check_finedust": "\nChecks whether the current fine dust information of the selected region matches the actual fine dust grade.",
        "get_weather_data": "\nReports various weather information values (the lowest temperature, the highest temperature, humidity, precipitation, precipitation probability, wind speed) of the selected date and region.",
        "get_current_weather_data": "\nReports the current weather information (temperature, fine dust grade) of the selected region.",
        "get_today_temperature": "\nReports the today temperature of selected area and time zone.",
        "check_city_weather": "Checks whether the weather information of the selected date and region matches the actual weather conditions.",
        "check_city_finedust": "Checks whether the current fine dust information of the selected region matches the actual fine dust grade.",
        "get_city_weather_data": "Reports various weather information values (the lowest temperature, the highest temperature, humidity, precipitation, precipitation probability, wind speed) of the selected date and region.",
        "get_current_city_weather_data": "Reports the current weather information (temperature, fine dust grade) of the selected region.",
        "get_today_city_temperature": "Report the today temperature of selected area and time zone.",
        "get_cur_weather": "\nReports the current weather in the selected area.",
        "get_cur_wind": "\nReports the current wind direction in the selected area.",
        "get_cur_weather_data": "\nReports the current weather information in the selected area.\n- Weather information : temperature(℃), fine dust concentration(PM10, ㎍)",
        "check_cur_weather": "\nChecks whether the current weather in the selected area matches the selected weather conditions. If so, it is judged as 'True'.",
        "check_cur_finddust": "\nChecks whether the current fine dust grade in the selected area matches the selected fine dust grade. If so, it is judged as 'True'.",
        "get_day_weather": "\nReports the daily weather in the selected area.",
        "get_day_weather_data": "\nReports the daily weather information in the selected area.\n- Weather information: the lowest temperature(℃), the highest temperature(℃), humidity(%), precipitation(mm), precipitation probability(%), wind speed(m/s)",
        "check_day_weather": "\nChecks whether the daily weather in the selected area matches the selected weather conditions. If so, it is judged as 'True'. ",
        "get_time_weather": "\nReports the weather by hour(every 3 hours) in the selected area.",
        "get_time_weather_data": "\nReports the weather information by hour(every 3 hours) in the selected area.\n- Weather information: the lowest temperature(℃), the highest temperature(℃), humidity(%), precipitation(mm), precipitation probability(%), wind speed(m/s)",
        "check_time_weather": "\nChecks whether the weather by hour in the selected area matches the selected weather conditions. If so, it is judged as 'True'. ",
        "count_festival": "Translate the input text into the selected language. You can enter up to 20 charactors. ",
        "get_festival_info": "Detects the language of the input text. You can enter up to 20 charactors.",
        "get_translated_string": "The number of events held on the selected date and region.",
        "check_language": "Reports the information(Title, area, start date, end date, address, overview, homepage) about events held on the selected date and region.",
        "count_disaster_behavior": "\nThe number of behavior-guideline's when selected natural disaster occurs.",
        "get_disaster_behavior": "\nReports the information about behavior-guidelines when selected natural disaster occurs.",
        "count_lifeSafety_behavior": "\nThe number of behavior-guideline's when selected life problem occurs.",
        "get_lifeSafety_behavior": "\nReports the information about behavior-guidelines when selected life problem occurs.",
        "count_disaster_guideline": "The number of guidelines in the selected natural disaster.\n\n- Natural disaster: typhoon, flood, heavy rain, strong wind, heavy snow, cold wave, rough seas, yellow dust, heat wave, drought, earthquake, tsunami, tidal wave, landslide, volcanic eruption",
        "get_disaster_guideline": "Reports the information about the guidelines of the selected natural disaster.\n\n- Natural disaster: typhoon, flood, heavy rain, strong wind, heavy snow, cold wave, rough seas, yellow dust, heat wave, drought, earthquake, tsunami, tidal wave, landslide, volcanic eruption",
        "count_social_disaster_guideline": "Reports the information about the guidelines of the selected social disaster.\n\n- Social disaster: marine pollution, large-scale water pollution, water shortage, utility tunnel disaster, livestock disease, infectious disease, railway and subway, financial IT system, nuclear power plant accident, chemical accident, fire, wildfire, building collapse, dam collapse, explosion, aircraft accident, CBRN incident, power outage, electricity·gas, passenger ship, water accident, terrorism, power shortage",
        "get_social_disaster_guideline": "Reports the information about the guidelines of the selected social disaster.\n\n- Social disaster: marine pollution, large-scale water pollution, water shortage, utility tunnel disaster, livestock disease, infectious disease, railway and subway, financial IT system, nuclear power plant accident, chemical accident, fire, wildfire, building collapse, dam collapse, explosion, aircraft accident, CBRN incident, power outage, electricity·gas, passenger ship, water accident, terrorism, power shortage\"",
        "count_safety_accident_guideline": "The number of methods in the selected life safety accident.\n\n- Life safety accidents: first aid, CPR, fire extinguisher, food poisoning, hiking, children's playground, missing·kidnapping, sexual violence, school violence, domestic violence, detention·abduction, traffic accident, elevator, fine dust, fire hydrant, home safety inspection",
        "get_safety_accident_guideline": "first aid, CPR, fire extinguisher, food poisoning, hiking, children's playground, missing·kidnapping, sexual violence, school violence, domestic violence, detention·abduction, traffic accident, elevator, fine dust, fire hydrant, home safety inspection",
        "count_disaster_alert": "The number of disaster alerts sent today.\n\n- Emergency level: All, Safety information, Emergency disaster, Urgent disaster",
        "get_disaster_alert": "Reports the details of selected emergency level and order among disaster alerts sent today.\n\n- Emergency level: All, Safety information, Emergency disaster, Urgent disaster\n- Detail: Content, Area of reception, Emergency level, Type of disaster, Date and time",
        "check_disaster_alert": "If disaster alerts were sent today, it is judged as 'True'.\n\n- Emergency level: All, Safety information, Emergency disaster, Urgent disaster",
        "read_text": "Read the entered text in setted voice.",
        "set_tts_property": "Set the selected voice to selected speed and selected pitch. \n The selected voice will be set up to selected speed and selected pitch.",
        "read_text_wait_with_block": "Read the entered text in setted voice then the next block runs after the reading finished.",
        "check_microphone": "Connected to microphone?",
        "speech_to_text_convert": "Converts person's speech input through microphone into text.",
        "speech_to_text_get_value": "Reports the value of the person's speech to text. If no speech is input or an error occurs during recognition, it will report null values.",
        "get_microphone_volume": "Reports the volume of sound input through microphone.",
        "video_draw_webcam": "Show or hide the video screen. (IE / iOS Not Supported)",
        "video_check_webcam": "Check whether video is connected with the computer. (IE / iOS Not Supported)",
        "video_change_cam": "Switch the camera that input video.",
        "video_set_camera_opacity_option": "Set the transparency effect to the video screen by the input value.(IE / iOS Not Supported)",
        "video_flip_camera": "Flips the video screen horizontally or vertically. (IE / iOS Not Supported)",
        "video_toggle_model": "Start or stop the selected recognition model. Face Recognition: Recognizes a person's face to know where the eyes, nose, mouth, and ear are located, or the expected gender, age, and emotion. Human Recognition: Recognizes a person's body to know where each part is located Object Recognition: Shows the recognized object type. (Person or thing) (IE / iOS Not Supported)",
        "video_toggle_ind": "Show location and index of the detected humans/faces/objects on the screen. (IE / iOS Not Supported)",
        "video_number_detect": "Reports number of humans/faces/objects detected on the video screen. (IE / iOS Not Supported)",
        "video_object_detected": "Check whether selected object is recognized. (IE / iOS Not Supported)",
        "video_is_model_loaded": "Check whether human/face/object is detected. (IE / iOS Not Supported)",
        "video_detected_face_info": "Reports the estimated value of the selected face area among the faces in the input order. If it is not recognized, it is outputted as 0 unconditionally. (Gender, Age, Emotion)  (IE / iOS Not Supported)",
        "video_motion_value": "Reports the motion or direction value detected on the selected object or screen.  (IE / iOS Not Supported)",
        "video_face_part_coord": "Reports the position value of the selected face area among the faces in the input order. If it is not recognized, it is outputted as 0 unconditionally. (Left eye, Right eye, Nose, Left mouse, Right mouse, Top Lip, Bottom Lip)  (IE / iOS Not Supported)",
        "video_body_part_coord": "Reports number of human detected on the video screen. (Face, Right shoulder, Right elbow, Right wrist, Left shoulder, Left elbow, Left wrist, Right hip, Right knee, Right ankle, Left hip, Left knee, Left ankle)  (IE / iOS Not Supported)",
        "append_row_to_table": "Adds a row(column) to the end of the selected table. All cell values ​​in the added row(column) are 0.",
        "insert_row_to_table": "Adds a row(column) to the entered order of the selected table. All cell values ​​in the added row(column) are 0. The rows(columns) after the added row(column) are pushed back one by one.",
        "delete_row_from_table": "Deletes the row(column) in the entered order of the selected table.",
        "set_value_from_table": "Replaces the attribute of the entered row with the values ​​entered in the selected table.",
        "save_current_table": "Save the table as it is. Even if you stop the project, your changes in the table are maintained.",
        "get_table_count": "The number of rows(columns) in the selected table.",
        "get_value_from_table": "The selected attribute value of the entered row in the selected table. Instead of an attribute value block, you can also combine a value block (meaning a column).",
        "get_value_from_last_row": "The selected attribute value of the last row in the selected table. Instead of an attribute value block, you can also combine a value block (meaning a column).",
        "calc_values_from_table": "Reports calculated value of the selected attributes in the selected table. (Sum, Maximum, Minimum, Average, Standard deviation, Median)",
        "open_table": "Open the window of the selected table.",
        "open_table_wait": "Open the window of the selected table for the seconds entered.",
        "open_table_chart": "Opens the chart of the selected table.",
        "change_rgb_to_hex": "Reports the value of the entered red, green, and blue values converted to HEX value.",
        "change_hex_to_rgb": "Reports the HEX value entered converted to either red, green, or blue.",
        "close_table_chart": "Closes the table chart.",
        "get_coefficient": "Correlation coefficient between two attributes in the selected table. The closer the correlation coefficient is to 1 (-1), the stronger the positive (negative) linear correlation.",
        "set_value_from_cell": "Replaces the cell with the values ​​entered in the selected table.",
        "get_value_from_cell": "The cell value in the selected table.",
        "get_value_v_lookup": "Searches for a value in selected column of a table and returns a corresponding value from a specified column in the same row.",
        "insert_data_for_test": "Enters the data and classifies using the trained model.",
        "insert_text_block_for_test": "Classifies the entered value ​​using the trained model.",
        "test_result": "This is the classification result of the entered data using the model. The resulting value is expressed as the model's class name (text).",
        "accuracy_of_result": "This is the confidence score for the selected class of the entered data. The values ​​are expressed in numbers.",
        "is_group": "Determines 'True' if the classification result of the data entered is the selected class.",
        "retrain_model": "Retrains the model. If you have changed the model settings, or have modified the contents of the table consisting the input data, the model is retrained based on the changed contents.",
        "model_is_trained": "If the model has trained, it is determined as 'True'. If the model is being trained or hasn't trained, it is determined as 'False'.",
        "set_train_visible": "Shows or hides the window displaying the state of the model on the screen.",
        "set_train_chart": "Opens or closes the chart window that displays the train data and clusters of the trained model on a two-dimensional coordinate plane.",
        "set_regression_option": "Changes the model's training condition. The changed training condition is applied when the model is retrained with the'Retrain model' block.",
        "get_regression_predict_1": "Returns the value predicted by the model using the entered feature value.",
        "get_regression_predict_2": "Returns the value predicted by the model using the entered feature value.",
        "get_regression_predict_3": "Returns the value predicted by the model using the entered feature value.",
        "get_regression_accuracy": "Returns the model's coefficient of determination as a value.",
        "set_cluster_option_k": "Sets the number of clusters by replacing them with the entered value. The changed number of clusters will be applied when the model is retrained with the 'Retrain model' block.",
        "set_cluster_option_centroids": "Changes the standard of the cluster's initial centroid with the standard selected. The changed centroid standard is applied when the model is retrained with the 'Retrain model' block.",
        "get_cluster_centriod_count": "Returns the number of clusters in the model as a value.",
        "get_cluster_centriod_value": "Returns the feature value for the the centroid of the specified cluster. If you have multiple features, you can select them from the drop-down list.",
        "get_cluster_centriod_index_1": "Returns which cluster the entered feature value belongs to among the clustered clusters by the model. Values ​​are expressed as text (cluster name).",
        "get_cluster_centriod_index_2": "Returns which cluster the entered feature value belongs to among the clustered clusters by the model. Values ​​are expressed as text (cluster name).",
        "get_cluster_centriod_index_3": "Returns which cluster the entered feature value belongs to among the clustered clusters by the model. Values ​​are expressed as text (cluster name).",
        "set_number_learning_option_k": "Sets the number of of neighbors by replacing them with the entered value. The changed number of neighbors will be applied when the model is retrained wirh the 'Retrain model' block.",
        "get_number_learning_predict_1": "The result value of the classification of the data entered by the model. The value is expressed by the class name (text).",
        "get_number_learning_predict_2": "The result value of the classification of the data entered by the model. The value is expressed by the class name (text).",
        "get_number_learning_predict_3": "The result value of the classification of the data entered by the model. The value is expressed by the class name (text).",
        "get_number_learning_predict_param_1": "The classification confidence score for the selected class of the data entered. The value is expressed in numbers.",
        "get_number_learning_predict_param_2": "The classification confidence score for the selected class of the data entered. The value is expressed in numbers.",
        "get_number_learning_predict_param_3": "The classification confidence score for the selected class of the data entered. The value is expressed in numbers.",
        "is_number_learning_group_1": "Determines 'True' if the classification result of the data entered is the selected class.",
        "is_number_learning_group_2": "Determines 'True' if the classification result of the data entered is the selected class.",
        "is_number_learning_group_3": "Determines 'True' if the classification result of the data entered is the selected class.",
        "albert_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>front oid: value of front oid sensor (range: -1 ~ 65535, initial value: -1)<br/>rear oid: value of rear oid sensor (range: -1 ~ 65535, initial value: -1)<br/>x position: x-coordinate value of robot's position on the board (range: -1 ~ 39999, initial value: -1)<br/>y position: y-coordinate value of robot's position on the board (range: -1 ~ 39999, initial value: -1)<br/>orientation: orientation angle value (degree) of robot on the board (range: -179 ~ 180, initial value: -200)<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "albert_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "albert_is_oid_value": "If the oid value detected by the oid sensor is equal to the entered number, true, otherwise false.",
        "albert_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "albert_move_forward_for_secs": "Moves forward for the entered seconds.",
        "albert_move_backward_for_secs": "Moves backward for the entered seconds.",
        "albert_turn_for_secs": "Turns left/right in place for the entered seconds.",
        "albert_change_both_wheels_by": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "albert_set_both_wheels_to": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "albert_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "albert_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "albert_stop": "Stops both wheels.",
        "albert_set_pad_size_to": "Sets the width and height of the board.",
        "albert_move_to_x_y_on_board": "Moves to the entered x, y position on the board.",
        "albert_set_orientation_on_board": "Turns toward the entered angle (degrees) on the board.",
        "albert_set_eye_to": "Turns left/right/both eyes to the selected color.",
        "albert_clear_eye": "Turns off the left/right/both eyes.",
        "albert_body_led": "Turns on/off the body led.",
        "albert_front_led": "Turns on/off the front led.",
        "albert_beep": "Plays beep sound.",
        "albert_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "albert_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "albert_clear_buzzer": "Turns off buzzer sound.",
        "albert_play_note": "It sounds the selected tone and octave.",
        "albert_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "albert_rest_for": "Rests as much as the beat you entered.",
        "albert_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "albert_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "albertai_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>mic touch: value of mic touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>volume up touch: value of volume up touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>volume down touch: value of volume down touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>play touch: value of play touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>back touch: value of back touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>oid mode: oid mode value (0: far, 1: position mode, 2: oid version 2, 3: oid version 3, 15: not oid, initial value: 0)<br/>oid: value of oid sensor (range: -1 ~ 268435455, initial value: -1)<br/>lift: value of lift sensor (when lifted 1, otherwise 0, initial value: 0)<br/>x position: x-coordinate value of robot's position on the board (range: -1 ~ 268435454, initial value: -1)<br/>y position: y-coordinate value of robot's position on the board (range: -1 ~ 268435454, initial value: -1)<br/>orientation: orientation angle value (degree) of robot on the board (range: -179 ~ 180, initial value: -200)<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "albertai_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "albertai_touch_state": "If the touch sensor clicked/long-pressed/long-long-pressed, true, otherwise false.",
        "albertai_is_oid": "If the oid value detected by the oid sensor is equal to the entered number, true, otherwise false.",
        "albertai_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>tap: If tapped, true, otherwise false<br/>lift: If lifted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "albertai_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "albertai_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "albertai_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "albertai_pivot_around_unit_in_direction": "Pivots around the left/right wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "albertai_change_both_wheels_by": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "albertai_set_both_wheels_to": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "albertai_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "albertai_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "albertai_stop": "Stops both wheels.",
        "albertai_move_to_x_y_on_board": "Moves to the entered x, y position on the board.",
        "albertai_set_orientation_on_board": "Turns toward the entered angle (degrees) on the board.",
        "albertai_set_eye_to": "Turns left/right/both eyes to the selected color.",
        "albertai_pick_eye": "Turns left/right/both eyes to the selected color.",
        "albertai_change_eye_by_rgb": "Adds the entered values to the current R, G, B values of left/right/both eyes, respectively.",
        "albertai_set_eye_to_rgb": "Sets the R, G, B values of left/right/both eyes to the entered values.",
        "albertai_clear_eye": "Turns off the left/right/both eyes.",
        "albertai_play_sound_times": "Plays the selected sound as many times as entered.",
        "albertai_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "albertai_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "albertai_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "albertai_clear_sound": "Turns off sound.",
        "albertai_play_note": "It sounds the selected tone and octave.",
        "albertai_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "albertai_rest_for": "Rests as much as the beat you entered.",
        "albertai_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "albertai_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "brown_touching_color": "If the color sensor detects the selected color, true, otherwise false.",
        "brown_is_color_pattern": "If the color sensor detects the selected color pattern, true, otherwise false.",
        "brown_button_state": "If the button clicked/double-clicked/long-pressed, true, otherwise false.",
        "brown_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>tap: If tapped, true, otherwise false<br/>free fall: If free fall, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "brown_value": "color number: color number detected by the color sensor (range: -2 to 8, initial value: -1)<br/>color pattern: value of the color pattern detected by the color sensor (range: -1 ~ 88, initial value: -1)<br/>color r: red component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color g: green component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color b: blue component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>floor: value of floor sensor (range: 0 to 100, initial value: 0)<br/>button: status of the button (when pressed 1, otherwise 0, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>temperature: temperature value inside the robot (range: -41 to 87 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "brown_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "brown_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "brown_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "brown_pivot_around_wheel_unit_in_direction": "Pivots around the left/right wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "brown_turn_unit_with_radius_in_direction": "Turns left/right drawing the circle of the entered radius in the forward/backward direction for the number of seconds/pulses entered.",
        "brown_change_wheels_by_left_right": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "brown_set_wheels_to_left_right": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "brown_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "brown_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "brown_follow_line": "Moves along the black line on a white background.",
        "brown_follow_line_until": "Moves along the black line on a white background and stops when the color sensor detects the selected color.",
        "brown_cross_intersection": "Moves forward for a moment at the black intersection, then finds the black line.",
        "brown_turn_at_intersection": "Moves forward for a moment at the black intersection, then turns left/right/back in place and finds the black line.",
        "brown_jump_line": "Turns left/right 90 degrees in place and moves forward. Stops when the color sensor detects the black line and turns to its original direction.",
        "brown_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "brown_stop": "Stops both wheels.",
        "brown_set_led_to": "Turns the LED to the selected color.",
        "brown_pick_led": "Turns the LED to the selected color.",
        "brown_change_led_by_rgb": "Adds the entered values to the current R, G, B values of the LED, respectively.",
        "brown_set_led_to_rgb": "Sets the R, G, B values of the LED to the entered values.",
        "brown_clear_led": "Turns off the LED.",
        "brown_play_sound_times": "Plays the selected sound as many times as entered.",
        "brown_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "brown_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "brown_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "brown_clear_sound": "Turns off sound.",
        "brown_play_note": "It sounds the selected tone and octave.",
        "brown_play_note_for_beats": "It sounds the selected tone and octave as much as the beat you entered.",
        "brown_rest_for_beats": "Rests as much as the beat you entered.",
        "brown_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "brown_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "byrobot_controller_3_4_controller_buzzer_hz": "",
        "byrobot_controller_3_4_controller_buzzer_hz_delay": "",
        "byrobot_controller_3_4_controller_buzzer_hz_reserve": "",
        "byrobot_controller_3_4_controller_buzzer_off": "",
        "byrobot_controller_3_4_controller_buzzer_scale": "",
        "byrobot_controller_3_4_controller_buzzer_scale_delay": "",
        "byrobot_controller_3_4_controller_buzzer_scale_reserve": "",
        "byrobot_controller_3_4_controller_if_button_press": "",
        "byrobot_controller_3_4_controller_if_joystick_direction": "",
        "byrobot_controller_3_4_controller_light_color_input": "",
        "byrobot_controller_3_4_controller_light_color_preset": "",
        "byrobot_controller_3_4_controller_light_manual_single_input": "",
        "byrobot_controller_3_4_controller_light_manual_single_off": "",
        "byrobot_controller_3_4_controller_value_button": "",
        "byrobot_controller_3_4_controller_value_joystick": "",
        "byrobot_controller_3_4_controller_vibrator_delay": "",
        "byrobot_controller_3_4_controller_vibrator_off": "",
        "byrobot_controller_3_4_controller_vibrator_on_delay": "",
        "byrobot_controller_3_4_controller_vibrator_on_reserve": "",
        "byrobot_controller_3_4_controller_vibrator_reserve": "",
        "byrobot_drone_3_10_controller_buzzer_hz": "",
        "byrobot_drone_3_10_controller_buzzer_hz_delay": "",
        "byrobot_drone_3_10_controller_buzzer_hz_reserve": "",
        "byrobot_drone_3_10_controller_buzzer_off": "",
        "byrobot_drone_3_10_controller_buzzer_scale": "",
        "byrobot_drone_3_10_controller_buzzer_scale_delay": "",
        "byrobot_drone_3_10_controller_buzzer_scale_reserve": "",
        "byrobot_drone_3_10_controller_if_button_press": "",
        "byrobot_drone_3_10_controller_if_joystick_direction": "",
        "byrobot_drone_3_10_controller_light_color_preset": "",
        "byrobot_drone_3_10_controller_light_manual_single_input": "",
        "byrobot_drone_3_10_controller_light_manual_single_off": "",
        "byrobot_drone_3_10_controller_value_button": "",
        "byrobot_drone_3_10_controller_value_joystick": "",
        "byrobot_drone_3_10_controller_vibrator_delay": "",
        "byrobot_drone_3_10_controller_vibrator_off": "",
        "byrobot_drone_3_10_controller_vibrator_on_delay": "",
        "byrobot_drone_3_10_controller_vibrator_on_reserve": "",
        "byrobot_drone_3_10_controller_vibrator_reserve": "",
        "byrobot_drone_3_10_drone_control_headless": "",
        "byrobot_drone_3_10_drone_control_drone_landing": "",
        "byrobot_drone_3_10_drone_control_drone_reset_heading": "",
        "byrobot_drone_3_10_drone_control_drone_stop": "",
        "byrobot_drone_3_10_drone_control_drone_takeoff": "",
        "byrobot_drone_3_10_drone_control_quad": "",
        "byrobot_drone_3_10_drone_control_quad_delay": "",
        "byrobot_drone_3_10_drone_control_quad_one": "",
        "byrobot_drone_3_10_drone_control_quad_one_delay": "",
        "byrobot_drone_3_10_drone_light_color_input": "",
        "byrobot_drone_3_10_drone_light_color_select": "",
        "byrobot_drone_3_10_drone_light_color_preset": "",
        "byrobot_drone_3_10_drone_light_manual_single_input": "",
        "byrobot_drone_3_10_drone_light_manual_single_off": "",
        "byrobot_drone_3_10_drone_motor_stop": "",
        "byrobot_drone_3_10_drone_motorsingle": "",
        "byrobot_drone_3_10_drone_motorsingle_input": "",
        "byrobot_drone_3_10_drone_battle_ir_message": "",
        "byrobot_drone_3_10_drone_value_attitude": "",
        "byrobot_drone_3_10_drone_value_etc": "",
        "byrobot_drone_3_10_drone_value_motion": "",
        "byrobot_drone_3_10_drone_value_ir": "",
        "byrobot_drone_3_10_drone_value_sensor": "",
        "byrobot_drone_4_controller_buzzer_hz": "",
        "byrobot_drone_4_controller_buzzer_hz_delay": "",
        "byrobot_drone_4_controller_buzzer_hz_reserve": "",
        "byrobot_drone_4_controller_buzzer_off": "",
        "byrobot_drone_4_controller_buzzer_scale": "",
        "byrobot_drone_4_controller_buzzer_scale_delay": "",
        "byrobot_drone_4_controller_buzzer_scale_reserve": "",
        "byrobot_drone_4_controller_display_clear": "",
        "byrobot_drone_4_controller_display_clear_all": "",
        "byrobot_drone_4_controller_display_draw_circle": "",
        "byrobot_drone_4_controller_display_draw_line": "",
        "byrobot_drone_4_controller_display_draw_point": "",
        "byrobot_drone_4_controller_display_draw_rect": "",
        "byrobot_drone_4_controller_display_draw_string": "",
        "byrobot_drone_4_controller_display_draw_string_align": "",
        "byrobot_drone_4_controller_if_button_press": "",
        "byrobot_drone_4_controller_if_joystick_direction": "",
        "byrobot_drone_4_controller_light_color_input": "",
        "byrobot_drone_4_controller_light_color_select": "",
        "byrobot_drone_4_controller_light_color_preset": "",
        "byrobot_drone_4_controller_light_manual_single_input": "",
        "byrobot_drone_4_controller_light_manual_single_off": "",
        "byrobot_drone_4_controller_value_button": "",
        "byrobot_drone_4_controller_value_joystick": "",
        "byrobot_drone_4_controller_vibrator_delay": "",
        "byrobot_drone_4_controller_vibrator_off": "",
        "byrobot_drone_4_controller_vibrator_on_delay": "",
        "byrobot_drone_4_controller_vibrator_on_reserve": "",
        "byrobot_drone_4_controller_vibrator_reserve": "",
        "byrobot_drone_4_drone_control_headless": "",
        "byrobot_drone_4_drone_control_drone_landing": "",
        "byrobot_drone_4_drone_control_drone_reset_heading": "",
        "byrobot_drone_4_drone_control_drone_stop": "",
        "byrobot_drone_4_drone_control_drone_takeoff": "",
        "byrobot_drone_4_drone_control_quad": "",
        "byrobot_drone_4_drone_control_quad_delay": "",
        "byrobot_drone_4_drone_control_quad_one": "",
        "byrobot_drone_4_drone_control_quad_one_delay": "",
        "byrobot_drone_4_drone_control_position_one": "",
        "byrobot_drone_4_drone_control_position_turn": "",
        "byrobot_drone_4_drone_control_position_location": "",
        "byrobot_drone_4_drone_control_position_location_turn": "",
        "byrobot_drone_4_drone_light_color_input": "",
        "byrobot_drone_4_drone_light_color_select": "",
        "byrobot_drone_4_drone_light_color_preset": "",
        "byrobot_drone_4_drone_light_manual_single_input": "",
        "byrobot_drone_4_drone_light_manual_single_off": "",
        "byrobot_drone_4_drone_motor_stop": "",
        "byrobot_drone_4_drone_motorsingle": "",
        "byrobot_drone_4_drone_motorsingle_input": "",
        "byrobot_drone_4_drone_value_attitude": "",
        "byrobot_drone_4_drone_value_etc": "",
        "byrobot_drone_4_drone_value_motion": "",
        "byrobot_drone_4_drone_value_position": "",
        "byrobot_drone_4_drone_value_sensor": "",
        "byrobot_drone_8_controller_buzzer_hz": "",
        "byrobot_drone_8_controller_buzzer_hz_delay": "",
        "byrobot_drone_8_controller_buzzer_hz_reserve": "",
        "byrobot_drone_8_controller_buzzer_off": "",
        "byrobot_drone_8_controller_buzzer_scale": "",
        "byrobot_drone_8_controller_buzzer_scale_delay": "",
        "byrobot_drone_8_controller_buzzer_scale_reserve": "",
        "byrobot_drone_8_controller_display_clear": "",
        "byrobot_drone_8_controller_display_clear_all": "",
        "byrobot_drone_8_controller_display_draw_circle": "",
        "byrobot_drone_8_controller_display_draw_line": "",
        "byrobot_drone_8_controller_display_draw_point": "",
        "byrobot_drone_8_controller_display_draw_rect": "",
        "byrobot_drone_8_controller_display_draw_string": "",
        "byrobot_drone_8_controller_display_draw_string_align": "",
        "byrobot_drone_8_controller_if_button_press": "",
        "byrobot_drone_8_controller_if_joystick_direction": "",
        "byrobot_drone_8_controller_light_color_input": "",
        "byrobot_drone_8_controller_light_color_select": "",
        "byrobot_drone_8_controller_light_color_preset": "",
        "byrobot_drone_8_controller_light_manual_single_input": "",
        "byrobot_drone_8_controller_light_manual_single_off": "",
        "byrobot_drone_8_controller_value_button": "",
        "byrobot_drone_8_controller_value_joystick": "",
        "byrobot_drone_8_controller_vibrator_delay": "",
        "byrobot_drone_8_controller_vibrator_off": "",
        "byrobot_drone_8_controller_vibrator_on_delay": "",
        "byrobot_drone_8_controller_vibrator_on_reserve": "",
        "byrobot_drone_8_controller_vibrator_reserve": "",
        "byrobot_drone_8_drone_control_headless": "",
        "byrobot_drone_8_drone_control_drone_landing": "",
        "byrobot_drone_8_drone_control_drone_reset_heading": "",
        "byrobot_drone_8_drone_control_drone_stop": "",
        "byrobot_drone_8_drone_control_drone_takeoff": "",
        "byrobot_drone_8_drone_control_quad": "",
        "byrobot_drone_8_drone_control_quad_delay": "",
        "byrobot_drone_8_drone_control_quad_one": "",
        "byrobot_drone_8_drone_control_quad_one_delay": "",
        "byrobot_drone_8_drone_control_position_one": "",
        "byrobot_drone_8_drone_control_position_turn": "",
        "byrobot_drone_8_drone_control_position_location": "",
        "byrobot_drone_8_drone_control_position_location_turn": "",
        "byrobot_drone_8_drone_light_color_input": "",
        "byrobot_drone_8_drone_light_color_select": "",
        "byrobot_drone_8_drone_light_color_preset": "",
        "byrobot_drone_8_drone_light_manual_single_input": "",
        "byrobot_drone_8_drone_light_manual_single_off": "",
        "byrobot_drone_8_drone_motor_stop": "",
        "byrobot_drone_8_drone_motorsingle": "",
        "byrobot_drone_8_drone_motorsingle_input": "",
        "byrobot_drone_8_drone_value_attitude": "",
        "byrobot_drone_8_drone_value_etc": "",
        "byrobot_drone_8_drone_value_motion": "",
        "byrobot_drone_8_drone_value_position": "",
        "byrobot_drone_8_drone_value_sensor": "",
        "byrobot_drone_8_drone_value_card": "",
        "chocopi_map_range": "Usage example: If you want to set a sprite position x according to joystic x position between -100 and 100, you can put five values as Joystic X, 0, 4095, -100, 100.",
        "hamster_gripper": "Opens or closes the gripper.",
        "hamster_release_gripper": "Turns off the gripper so that it can be moved freely.",
        "hamster_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "hamster_play_note": "It sounds the selected tone and octave.",
        "hamster_s_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "hamster_s_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "hamster_s_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>left floor: value of left floor sensor (range: 0 to 100, initial value: 0)<br/>right floor: value of right floor sensor (range: 0 to 100, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.<br/>input A: value of signal input to external port A (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)<br/>input B: value of signal input to external port B (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)",
        "hamster_s_move_forward_once": "Moves one space forward on the board.",
        "hamster_s_turn_once": "Turns left/right 90 degrees on the board.",
        "hamster_s_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "hamster_s_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "hamster_s_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "hamster_s_pivot_around_unit_in_direction": "Pivots around the left/right pen/wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "hamster_s_turn_unit_with_radius_in_direction": "Turns left/right so that the left/right pen draws the circle of the entered radius in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "hamster_s_change_both_wheels_by": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "hamster_s_set_both_wheels_to": "Sets the speed of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "hamster_s_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "hamster_s_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "hamster_s_follow_line_using": "Moves along the black/white line by using the left/right/both floor sensors.",
        "hamster_s_follow_line_until": "Moves along the black/white line on the left/right/front/back, then stops when the robot meets the intersection.",
        "hamster_s_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "hamster_s_set_following_gain_to": "Sets the directional variation (1 to 8) 선을 따라 이동하는 방향 변화량(1 ~ 8)을 설정합니다. 숫자가 클수록 급커브를 잘 따라가지만 직선에서 좌우로 더 흔들립니다.",
        "hamster_s_stop": "Stops both wheels.",
        "hamster_s_set_led_to": "Turns left/right/both LEDs to the selected color.",
        "hamster_s_pick_led": "Turns left/right/both LEDs to the selected color.",
        "hamster_s_change_led_by_rgb": "Adds the entered values to the current R, G, B values of left/right/both LEDs, respectively.",
        "hamster_s_set_led_to_rgb": "Sets the R, G, B values of left/right/both LEDs to the entered values.",
        "hamster_s_clear_led": "Turns off the left/right/both LEDs.",
        "hamster_s_play_sound_times": "Plays the selected sound as many times as entered.",
        "hamster_s_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "hamster_s_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "hamster_s_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "hamster_s_clear_sound": "Turns off sound.",
        "hamster_s_play_note": "It sounds the selected tone and octave.",
        "hamster_s_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "hamster_s_rest_for": "Rests as much as the beat you entered.",
        "hamster_s_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "hamster_s_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "hamster_s_set_port_to": "Sets the io mode of the selected external port to the selected mode.",
        "hamster_s_change_output_by": "Adds the entered value to the current output value of the selected external port. The result will be in the following range depending on the mode of the external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "hamster_s_set_output_to": "Sets the output value of the selected external port to the entered value. The value has the following range according to the mode of external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "hamster_s_gripper": "Opens or closes the gripper.",
        "hamster_s_release_gripper": "Turns off the gripper so that it can be moved freely.",
        "hamster_s_write_serial": "Sends strings via serial communication.",
        "hamster_s_read_serial_until": "Read the strings received by serial communication.",
        "hamster_s_set_serial_rate_to": "Sets the speed of serial communication.",
        "roboid_hamster_gripper": "Opens or closes the gripper.",
        "roboid_hamster_release_gripper": "Turns off the gripper so that it can be moved freely.",
        "roboid_hamster_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "roboid_hamster_play_note": "It sounds the selected tone and octave.",
        "roboid_hamster_s_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "roboid_hamster_s_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "roboid_hamster_s_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>left floor: value of left floor sensor (range: 0 to 100, initial value: 0)<br/>right floor: value of right floor sensor (range: 0 to 100, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.<br/>input A: value of signal input to external port A (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)<br/>input B: value of signal input to external port B (range: analog input 0 to 255, digital input 0 or 1, initial value: 0)",
        "roboid_hamster_s_move_forward_once": "Moves one space forward on the board.",
        "roboid_hamster_s_turn_once": "Turns left/right 90 degrees on the board.",
        "roboid_hamster_s_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "roboid_hamster_s_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "roboid_hamster_s_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "roboid_hamster_s_pivot_around_unit_in_direction": "Pivots around the left/right pen/wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "roboid_hamster_s_turn_unit_with_radius_in_direction": "Turns left/right so that the left/right pen draws the circle of the entered radius in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "roboid_hamster_s_change_both_wheels_by": "Adds the entered values to the current speed values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_hamster_s_set_both_wheels_to": "Sets the speed of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_hamster_s_change_wheel_by": "Adds the entered value to the current speed value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "roboid_hamster_s_set_wheel_to": "Sets the speed of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "roboid_hamster_s_follow_line_using": "Moves along the black/white line by using the left/right/both floor sensors.",
        "roboid_hamster_s_follow_line_until": "Moves along the black/white line on the left/right/front/back, then stops when the robot meets the intersection.",
        "roboid_hamster_s_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "roboid_hamster_s_set_following_gain_to": "Sets the directional variation (1 to 8) 선을 따라 이동하는 방향 변화량(1 ~ 8)을 설정합니다. 숫자가 클수록 급커브를 잘 따라가지만 직선에서 좌우로 더 흔들립니다.",
        "roboid_hamster_s_stop": "Stops both wheels.",
        "roboid_hamster_s_set_led_to": "Turns left/right/both LEDs to the selected color.",
        "roboid_hamster_s_pick_led": "Turns left/right/both LEDs to the selected color.",
        "roboid_hamster_s_change_led_by_rgb": "Adds the entered values to the current R, G, B values of left/right/both LEDs, respectively.",
        "roboid_hamster_s_set_led_to_rgb": "Sets the R, G, B values of left/right/both LEDs to the entered values.",
        "roboid_hamster_s_clear_led": "Turns off the left/right/both LEDs.",
        "roboid_hamster_s_play_sound_times": "Plays the selected sound as many times as entered.",
        "roboid_hamster_s_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "roboid_hamster_s_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "roboid_hamster_s_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "roboid_hamster_s_clear_sound": "Turns off sound.",
        "roboid_hamster_s_play_note": "It sounds the selected tone and octave.",
        "roboid_hamster_s_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "roboid_hamster_s_rest_for": "Rests as much as the beat you entered.",
        "roboid_hamster_s_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "roboid_hamster_s_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "roboid_hamster_s_set_port_to": "Sets the io mode of the selected external port to the selected mode.",
        "roboid_hamster_s_change_output_by": "Adds the entered value to the current output value of the selected external port. The result will be in the following range depending on the mode of the external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "roboid_hamster_s_set_output_to": "Sets the output value of the selected external port to the entered value. The value has the following range according to the mode of external port.<br/>Servo output: valid range from 1 to 180 degrees; if 0, output 0 without PWM pulse<br/>PWM output: 0 to 100%, duty ratio (%) of ON state in PWM waveform<br/>Digital output: LOW when 0, otherwise HIGH",
        "roboid_hamster_s_gripper": "Opens or closes the gripper.",
        "roboid_hamster_s_release_gripper": "Turns off the gripper so that it can be moved freely.",
        "roboid_hamster_s_write_serial": "Sends strings via serial communication.",
        "roboid_hamster_s_read_serial_until": "Read the strings received by serial communication.",
        "roboid_hamster_s_set_serial_rate_to": "Sets the speed of serial communication.",
        "roboid_turtle_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "roboid_turtle_pick_head_led": "Turns the head LED to the selected color.",
        "sally_touching_color": "If the color sensor detects the selected color, true, otherwise false.",
        "sally_is_color_pattern": "If the color sensor detects the selected color pattern, true, otherwise false.",
        "sally_button_state": "If the button clicked/double-clicked/long-pressed, true, otherwise false.",
        "sally_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>tap: If tapped, true, otherwise false<br/>free fall: If free fall, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "sally_value": "color number: color number detected by the color sensor (range: -2 to 8, initial value: -1)<br/>color pattern: value of the color pattern detected by the color sensor (range: -1 ~ 88, initial value: -1)<br/>color r: red component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color g: green component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color b: blue component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>floor: value of floor sensor (range: 0 to 100, initial value: 0)<br/>button: status of the button (when pressed 1, otherwise 0, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -32768 to 32767, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>temperature: temperature value inside the robot (range: -41 to 87 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "sally_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "sally_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "sally_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "sally_pivot_around_wheel_unit_in_direction": "Pivots around the left/right wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "sally_turn_unit_with_radius_in_direction": "Turns left/right drawing the circle of the entered radius in the forward/backward direction for the number of seconds/pulses entered.",
        "sally_change_wheels_by_left_right": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "sally_set_wheels_to_left_right": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "sally_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "sally_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "sally_follow_line": "Moves along the black line on a white background.",
        "sally_follow_line_until": "Moves along the black line on a white background and stops when the color sensor detects the selected color.",
        "sally_cross_intersection": "Moves forward for a moment at the black intersection, then finds the black line.",
        "sally_turn_at_intersection": "Moves forward for a moment at the black intersection, then turns left/right/back in place and finds the black line.",
        "sally_jump_line": "Turns left/right 90 degrees in place and moves forward. Stops when the color sensor detects the black line and turns to its original direction.",
        "sally_set_following_speed_to": "Sets the speed (1 to 8) to move along the line. The larger the number, the faster the movement.",
        "sally_stop": "Stops both wheels.",
        "sally_set_led_to": "Turns the LED to the selected color.",
        "sally_pick_led": "Turns the LED to the selected color.",
        "sally_change_led_by_rgb": "Adds the entered values to the current R, G, B values of the LED, respectively.",
        "sally_set_led_to_rgb": "Sets the R, G, B values of the LED to the entered values.",
        "sally_clear_led": "Turns off the LED.",
        "sally_play_sound_times": "Plays the selected sound as many times as entered.",
        "sally_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "sally_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "sally_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "sally_clear_sound": "Turns off sound.",
        "sally_play_note": "It sounds the selected tone and octave.",
        "sally_play_note_for_beats": "It sounds the selected tone and octave as much as the beat you entered.",
        "sally_rest_for_beats": "Rests as much as the beat you entered.",
        "sally_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "sally_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "turtle_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "turtle_pick_head_led": "Turns the head LED to the selected color.",
        "uoalbert_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>x acceleration: x-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The direction in which the robot moves forward is the positive direction of the x axis.<br/>y acceleration: y-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The left direction of the robot is the positive direction of the y axis.<br/>z acceleration: z-axis value of acceleration sensor (range: -8192 to 8191, initial value: 0) The upward direction of the robot is the positive direction of the z axis.<br/>touch: value of touch sensor (when touched 1, otherwise 0, initial value: 0)<br/>oid: value of oid sensor (range: -1 ~ 65535, initial value: -1)<br/>x position: x-coordinate value of robot's position on the board (range: -1 ~ 39999, initial value: -1)<br/>y position: y-coordinate value of robot's position on the board (range: -1 ~ 39999, initial value: -1)<br/>light: value of light sensor (range: 0 to 65535, initial value: 0) The brighter, the larger the value.<br/>temperature: temperature value inside the robot (range: -40 to 88 degrees Celsius, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "uoalbert_hand_found": "If there is a hand or object in front of the proximity sensor, true, otherwise false",
        "uoalbert_touch_state": "If the touch sensor clicked/long-pressed/long-long-pressed, true, otherwise false.",
        "uoalbert_is_oid": "If the oid value detected by the oid sensor is equal to the entered number, true, otherwise false.",
        "uoalbert_boolean": "tilt forward: If tilted forward, true, otherwise false<br/>tilt backward: If tilted backward, true, otherwise false<br/>tilt left: If tilted to the left, true, otherwise false<br/>tilt right: If tilted to the right, true, otherwise false<br/>tilt flip: If upside-down, true, otherwise false<br/>not tilt: If not tilted, true, otherwise false<br/>battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "uoalbert_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "uoalbert_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "uoalbert_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "uoalbert_pivot_around_unit_in_direction": "Pivots around the left/right wheel in the forward/backward direction for the number of degrees/seconds/pulses entered.",
        "uoalbert_change_both_wheels_by": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "uoalbert_set_both_wheels_to": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "uoalbert_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "uoalbert_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "uoalbert_stop": "Stops both wheels.",
        "uoalbert_set_board_size": "Sets the width and height of the board.",
        "uoalbert_set_eye_to": "Turns left/right/both eyes to the selected color.",
        "uoalbert_pick_eye": "Turns left/right/both eyes to the selected color.",
        "uoalbert_change_eye_by_rgb": "Adds the entered values to the current R, G, B values of left/right/both eyes, respectively.",
        "uoalbert_set_eye_to_rgb": "Sets the R, G, B values of left/right/both eyes to the entered values.",
        "uoalbert_clear_eye": "Turns off the left/right/both eyes.",
        "uoalbert_play_sound_times": "Plays the selected sound as many times as entered.",
        "uoalbert_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "uoalbert_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to two decimal places.",
        "uoalbert_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to two decimal places. Entering the number 0 turns off the buzzer sound.",
        "uoalbert_clear_sound": "Turns off sound.",
        "uoalbert_play_note": "It sounds the selected tone and octave.",
        "uoalbert_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "uoalbert_rest_for": "Rests as much as the beat you entered.",
        "uoalbert_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "uoalbert_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "zerone_is_gesture": "If the gesture sensor detects the selected gesture, true, otherwise false.",
        "zerone_touching_color": "If the color sensor detects the selected color, true, otherwise false.",
        "zerone_boolean": "battery normal: If the battery is enough, true, otherwise false<br/>battery low: If the battery is low, true, otherwise false<br/>battery empty: If the battery is empty, true, otherwise false",
        "zerone_value": "left proximity: value of left proximity sensor (range: 0 to 255, initial value: 0)<br/>right proximity: value of right proximity sensor (range: 0 to 255, initial value: 0)<br/>front proximity: value of front proximity sensor (range: 0 to 255, initial value: 0)<br/>rear proximity: value of rear proximity sensor (range: 0 to 255, initial value: 0)<br/>gesture: gesture number detected by the gesture sensor (range: -1 ~ 6, initial value: -1)<br/>color number: color number detected by the color sensor (range: -1 to 6, initial value: -1)<br/>color r: red component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color g: green component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>color b: blue component of color detected by the color sensor (range: 0 ~ 255, initial value: 0)<br/>signal strength: signal strength of Bluetooth communication (range: -128 to 0 dBm, initial value: 0) As the signal strength increases, the value increases.",
        "zerone_start_sensor": "Selects the sensor mode between the gesture sensor and the color sensor.",
        "zerone_move_forward_unit": "Moves forward for the number of cm/seconds/pulses entered.",
        "zerone_move_backward_unit": "Moves backward for the number of cm/seconds/pulses entered.",
        "zerone_turn_unit_in_place": "Turns left/right in place for the number of degrees/seconds/pulses entered.",
        "zerone_change_both_wheels_by": "Adds the entered values to the current velocity values (%) of the left and right wheels respectively. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "zerone_set_both_wheels_to": "Sets the velocity of the left and right wheels to the entered values (-100 to 100%), respectively. If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "zerone_change_wheel_by": "Adds the entered value to the current velocity value (%) of the left/right/both wheels. If the result is positive, the wheel rotates forward; if negative, the wheel rotates backward.",
        "zerone_set_wheel_to": "Sets the velocity of the left/right/both wheels to the entered value (-100 to 100%). If you enter a positive value, the wheel rotates forward. If you enter a negative value, the wheel rotates backward. Entering the number 0 stops it.",
        "zerone_stop": "Stops both wheels.",
        "zerone_set_led_to": "Turns the selected LED to the selected color.",
        "zerone_pick_led": "Turns the selected LED to the selected color.",
        "zerone_change_led_by_rgb": "Adds the entered values to the current R, G, B values of the selected LED, respectively.",
        "zerone_set_led_to_rgb": "Sets the R, G, B values of the selected LED to the entered values.",
        "zerone_clear_led": "Turns off the selected LED.",
        "zerone_play_sound_times": "Plays the selected sound as many times as entered.",
        "zerone_play_sound_times_until_done": "Plays the selected sound as many times as entered, and waits for completion.",
        "zerone_change_buzzer_by": "Adds the entered value to the current pitch (Hz) of the buzzer sound. You can enter up to one decimal place.",
        "zerone_set_buzzer_to": "Sets the pitch of the buzzer sound to the entered value (Hz). You can enter up to one decimal place. Entering the number 0 turns off the buzzer sound.",
        "zerone_clear_sound": "Turns off sound.",
        "zerone_play_note": "It sounds the selected tone and octave.",
        "zerone_play_note_for": "It sounds the selected tone and octave as much as the beat you entered.",
        "zerone_rest_for": "Rests as much as the beat you entered.",
        "zerone_change_tempo_by": "Adds the entered value to the current BPM (beats per minute) of the playing or resting speed.",
        "zerone_set_tempo_to": "Sets the playing or resting speed to the entered BPM (beats per minute).",
        "media_pipe_video_screen": "Shows or hides the video screen.",
        "media_pipe_switch_camera": "Switches the camera that films the video.",
        "check_connected_camera": "Checks whether camera is conncected with the computer. If the camera is connected to the computer, it is judged as 'True'.",
        "media_pipe_flip_camera": "Flips the video screen horizontally or vertically.",
        "media_pipe_set_opacity_camera": "Sets the transparency effect of video screen to the input value. It can be set in the range from 0 to 100.\n(The default value is 50. Values under 0 is treated as 0 and over 100 is treated as 100.)",
        "media_pipe_motion_value": "Reports the motion or direction value detected on the selected object or screen.\n- Motion: The larger and faster the movement, the larger the value.\n- Direction: Positive when moving right or up, and negative when moving left or down",
        "when_pose_landmarker": "When human detected, the connected blocks below will run.",
        "pose_landmarker": "Start or stop the human detection model.\n- Human Detection: Detects a human and determines where each body parts are located.",
        "draw_detected_pose": "Shows or hides the location and order of the detected humans on the screen.",
        "check_detected_pose": "If the human is detected, it is judged as 'True'.",
        "count_detected_pose": "Reports the number of the humans detected on the video screen.",
        "locate_to_pose": "Moves the object to the position of the selected body part.",
        "locate_time_to_pose": "Moves the object to the position of the selected body part for the input seconds.",
        "axis_detected_pose": "Reports the location value of the selected body part of the human in the order entered.\n(Body parts: face, neck, left eye, right eye, left ear, right ear, left shoulder, right shoulder, left elbow, right elbow, left wirst, right wrist, left hip, right hip, left knee, right knee, left ankle, right ankle)",
        "when_face_landmarker": "When face detected, the connected blocks below will run.",
        "face_landmarker": "Start or stop the face detection model.\n- Face Detection: Detects a human's face and determines where the eyes, nose, mouth, and ear are located.",
        "draw_detected_face": "Shows or hides the location and order of the detected faces on the screen.",
        "check_detected_face": "If the face is detected, it is judged as 'True'.",
        "count_detected_face": "Reports the number of the faces detected on the video screen.",
        "locate_to_face": "Moves the object to the position of the selected face part.",
        "locate_time_to_face": "Moves the object to the position of the selected body part for the input seconds.",
        "check_detected_gender": "If the selected face is the selected gender, it is judged as 'True'.",
        "check_compare_age": "If the age of the selected face matches the formula, it is judged as 'True'.",
        "check_detected_emotion": "If the selected face is the selected emotion, it is judged as 'True'.",
        "axis_detected_face": "Reports the location value of the selected face area of the face in the order entered. (Face area: left eye, right eye, nose, left corner of lips, right corner of lips, upper lip, lower lip)",
        "get_detected_face_value": "Reports the estimated value of the gender/age/emotion of the face in the order entered. If it is not detected, it returns 0.",
        "when_object_detector": "When object detected, the connected blocks below will run.",
        "object_detector": "Start or stop the object detection model.\n- Object Detection: Detects the type of object.",
        "draw_detected_object": "Shows or hides the location and order of the detected object on the screen.",
        "check_detected_object": "If the object is detected, it is judged as 'True'.",
        "count_detected_object": "Reports the number of the objects detected on the video screen.",
        "is_detected_among_objects": "If the selected object is detected, it is judged as 'True'.",
        "when_hand_detection": "When hand detected, the connected blocks below will run.",
        "hand_detection": "Start or stop hand detection model.\n- Hand Detection: Detects a human’s hand and determines where each hand parts are located.",
        "draw_detected_hand": "Shows or hides the location of the hand on the screen.",
        "check_detected_hand": "If the hand is detected, it is judged as 'True'.",
        "count_detected_hand": "Reports the number of hand detected on the video screen.",
        "locate_to_hand": "Moves the object to the position of the selected part of the hand.",
        "locate_time_to_hand": "Moves the object to the position of the selected part of the hand for the input seconds.",
        "axis_detected_hand": "Reports the location value of the selected part of the hand in the order entered.",
        "is_which_hand": "If the hand in the order you entered is the selected hand, it is judged as 'True'.",
        "get_which_hand": "Reports the value of the hand in the order you entered.",
        "is_which_gesture": "If the hand in the order you entered is the gesture you selected, it is judged as 'True'.",
        "get_which_gesture": "Reports the gesture of the hand in the order you entered.",
        "link_to_entry_wiki": "link to entry wiki",
        "wiki_link_start": "https://docs.playentry.org/user/block_start.html",
        "wiki_link_flow": "https://docs.playentry.org/user/block_flow.html",
        "wiki_link_moving": "https://docs.playentry.org/user/block_motion.html",
        "wiki_link_looks": "https://docs.playentry.org/user/block_looks.html",
        "wiki_link_brush": "https://docs.playentry.org/user/block_brush.html",
        "wiki_link_text": "https://docs.playentry.org/user/block_text.html",
        "wiki_link_sound": "https://docs.playentry.org/user/block_sound.html",
        "wiki_link_judgement": "https://docs.playentry.org/user/block_decision.html",
        "wiki_link_calc": "https://docs.playentry.org/user/block_figures.html",
        "wiki_link_variable": "https://docs.playentry.org/user/block_variable.html",
        "wiki_link_function": "https://docs.playentry.org/user/block_function.html",
        "wiki_link_analysis": "https://docs.playentry.org/user/block_table.html",
        "wiki_link_ai_utilize_translate": "https://docs.playentry.org/user/block_ai_translate.html",
        "wiki_link_ai_utilize_tts": "https://docs.playentry.org/user/block_ai_tts.html",
        "wiki_link_ai_utilize_stt": "https://docs.playentry.org/user/block_ai_stt.html",
        "wiki_link_ai_utilize_video": "https://docs.playentry.org/user/block_ai_human.html",
        "wiki_link_ai_utilize_pose": "https://docs.playentry.org/user/block_ai_human.html",
        "wiki_link_ai_utilize_face": "https://docs.playentry.org/user/block_ai_face.html",
        "wiki_link_ai_utilize_object": "https://docs.playentry.org/user/block_ai_object.html",
        "wiki_link_ai_utilize_hand": "https://docs.playentry.org/user/block_ai_hand.html",
        "wiki_link_emergencyActionGuidelines": "https://docs.playentry.org/user/block_extn_guideline.html",
        "wiki_link_weather": "https://docs.playentry.org/user/block_extn_weather.html",
        "wiki_link_disasterAlert": "https://docs.playentry.org/user/block_extn_alert.html",
        "wiki_link_festival": "https://docs.playentry.org/user/block_extn_festival.html",
        "wiki_link_hardware": "https://docs.playentry.org/user/block_hardware.html",
        "wiki_link_ai_image": "https://docs.playentry.org/user/block_model_image.html",
        "wiki_link_ai_text": "https://docs.playentry.org/user/block_model_text.html",
        "wiki_link_ai_speech": "https://docs.playentry.org/user/block_model_sound.html",
        "wiki_link_ai_cluster": "https://docs.playentry.org/user/block_model_clustering.html",
        "wiki_link_ai_utilize": "https://docs.playentry.org/user/block_model_classification.html",
        "wiki_link_ai_regression": "https://docs.playentry.org/user/block_model_prediction.html"
    },
    "Category": {
        "entrybot_friends": "Entrybot friends",
        "people": "People",
        "animal": "Animal",
        "animal_flying": "Flying",
        "animal_land": "Land",
        "animal_water": "Water",
        "animal_others": "Others",
        "plant": "Plant",
        "plant_flower": "Flowers",
        "plant_grass": "Grass",
        "plant_tree": "Tree",
        "plant_others": "Others",
        "vehicles": "Vehicles",
        "vehicles_flying": "Flying",
        "vehicles_land": "Land",
        "vehicles_water": "Water",
        "vehicles_others": "Others",
        "architect": "Building",
        "architect_building": "Structure",
        "architect_monument": "Monument",
        "architect_others": "Others",
        "food": "Food",
        "food_vegetables": "Fruits/Vegetables",
        "food_meat": "Meat",
        "food_drink": "Drink",
        "food_others": "Others",
        "environment": "Environment",
        "environment_nature": "Nature",
        "environment_space": "Space",
        "environment_others": "Others",
        "stuff": "Things",
        "stuff_living": "Living",
        "stuff_hobby": "Hobby",
        "stuff_others": "Others",
        "fantasy": "Fantasy",
        "interface": "Interface",
        "interface_website": "Website",
        "interface_game": "Game",
        "interface_others": "Others",
        "background": "Background",
        "background_outdoor": "Outdoor",
        "background_indoor": "Indoor",
        "background_nature": "Nature",
        "background_others": "Others"
    },
    "Device": {
        "arduino": "arduino",
        "hamster": "hamster",
        "roboid": "roboid",
        "turtle": "turtle",
        "albert": "albert",
        "robotis_carCont": "",
        "robotis_openCM70": "",
        "sensorBoard": "Entry Sensor Board",
        "trueRobot": "TrueTrueRobot",
        "CODEino": "CODEino",
        "bitbrick": "bitbrick",
        "creamo": "creamo",
        "playcode": "playcode",
        "funboard": "funboard",
        "bitBlock": "bitBlock",
        "xbot_epor_edge": "XBOT",
        "dplay": "DPLAY",
        "iboard": "iboard",
        "nemoino": "NEMOino",
        "ev3": "EV3",
        "robotori": "robotori",
        "smartBoard": "smartBoard",
        "chocopi": "ChocoPi",
        "rokoboard": "rokoboard",
        "altino": "알티노",
        "mechatro": "mechatro"
    },
    "General": {
        "apply": "Apply",
        "clear": "Clear",
        "turn_on": "turn on",
        "turn_off": "turn off",
        "left": "left",
        "right": "right",
        "param_string": "string",
        "both": "both",
        "transparent": "transparent",
        "black": "black",
        "brown": "brown",
        "red": "red",
        "yellow": "yellow",
        "green": "green",
        "skyblue": "sykblue",
        "blue": "blue",
        "purple": "purple",
        "white": "white",
        "note_c": "C",
        "note_d": "D",
        "note_e": "E",
        "note_f": "F",
        "note_g": "G",
        "note_a": "A",
        "note_b": "B",
        "questions": "Question",
        "clock": "clock",
        "counter_clock": "counterclock",
        "font_size": "font size",
        "second": "&quot;",
        "alert_title": "Alert",
        "confirm_title": "Confirm",
        "update_title": "Alert",
        "recent_download": "Download",
        "recent_download2": "Download the latest version",
        "latest_version": "You are running the latest version.",
        "dont_show_again": "Do not show this again"
    },
    "Fonts": {
        "jeju_hallasan": "Jeju Hallasan",
        "gothic_coding": "Gothic Coding",
        "batang": "Batang",
        "gothic": "Nanum Gothic",
        "myeongjo": "Nanum Myeongjo",
        "pen_script": "Nanum Pen Script",
        "square_round": "Nanum SquareRound",
        "jalnan": "jalnan",
        "designhouse": "designhouse",
        "malssami815": "Malssami815",
        "dunggeunmo": "DungGeunMo",
        "hs_bombaram": "HS Bombaram",
        "yisunshin": "YiSunShin",
        "goyang": "Goyang",
        "flower_road": "SangSangFlowerRoad",
        "uhbeemysen": "UhBeemysen",
        "sd_comic_stencil": "Sandoll Comicstencil",
        "sd_childfundkorea": "Sandoll Childfundkorea",
        "sd_cinema_theater": "Sandoll Cinema Theater",
        "sd_mapssi": "Sandoll Mapssi",
        "sd_shabang": "Sandoll Shabang",
        "sd_woodcarving": "Sandoll Woodcarving",
        "sd_yongbi": "Sandoll Yongbi",
        "maruburi": "MaruBuri",
        "nanumbarunpen": "NanumBarunpen.",
        "notosans": "NotoSans",
        "d2coding": "D2Coding"
    },
    "Hw": {
        "note": "note",
        "leftWheel": "left wheel",
        "rightWheel": "right wheel",
        "leftEye": "left eye",
        "rightEye": "right eye",
        "led": "LED",
        "led_en": "LED",
        "body": "body",
        "front": " front",
        "port_en": "port",
        "port_ko": "",
        "sensor": "sensor",
        "light": "light",
        "temp": "temp",
        "switch_": "sw_",
        "right_ko": "",
        "right_en": "R",
        "left_ko": "",
        "left_en": "L",
        "up_ko": "",
        "up_en": "U",
        "down_ko": "",
        "down_en": "D",
        "output": "output",
        "left": "left",
        "right": "right",
        "sub": "servo",
        "motor": "motor",
        "": "",
        "buzzer": "buzzer",
        "IR": "infrared",
        "acceleration": "acceleration",
        "analog": "analog",
        "angular_acceleration": "angular acceleration",
        "button": "button",
        "humidity": "humidity",
        "joystick": "joystick",
        "port": "port",
        "potentiometer": "potentiometer",
        "servo": "servo"
    },
    "template": {
        "albert_hand_found": "hand found?",
        "albert_is_oid_value": "%1 oid %2?",
        "albert_value": "%1",
        "albert_move_forward_for_secs": "move forward %1 secs %2",
        "albert_move_backward_for_secs": "move backward %1 secs %2",
        "albert_turn_for_secs": "turn %1 %2 secs %3",
        "albert_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "albert_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "albert_change_wheel_by": "change %1 wheel by %2 %3",
        "albert_set_wheel_to": "set %1 wheel to %2 %3",
        "albert_stop": "stop %1",
        "albert_set_pad_size_to": "set board size to width: %1 height: %2 %3",
        "albert_move_to_x_y_on_board": "move %1 to x: %2 y: %3 on board %4",
        "albert_set_orientation_on_board": "turn towards %1 degrees on board %2",
        "albert_set_eye_to": "set %1 eye to %2 %3",
        "albert_clear_eye": "clear %1 eye %2",
        "albert_body_led": "turn body led %1 %2",
        "albert_front_led": "turn front led %1 %2",
        "albert_beep": "beep %1",
        "albert_change_buzzer_by": "change buzzer by %1 %2",
        "albert_set_buzzer_to": "set buzzer to %1 %2",
        "albert_clear_buzzer": "clear buzzer %1",
        "albert_play_note_for": "play note %1 %2 for %3 beats %4",
        "albert_rest_for": "rest for %1 beats %2",
        "albert_change_tempo_by": "change tempo by %1 %2",
        "albert_set_tempo_to": "set tempo to %1 bpm %2",
        "albert_move_forward": "move forward %1",
        "albert_move_backward": "move backward %1",
        "albert_turn_around": "turn %1 %2",
        "albert_set_led_to": "set %1 led %2 %3",
        "albert_clear_led": "clear %1 led %2",
        "albert_change_wheels_by": "%1 %2 %3",
        "albert_set_wheels_to": "%1 %2 %3",
        "arduino_text": "%1",
        "arduino_get_sensor_number": "%1  ",
        "arduino_get_port_number": "%1  ",
        "arduino_get_digital_toggle": "%1  ",
        "arduino_get_pwm_port_number": "%1  ",
        "arduino_get_number_sensor_value": "Analog %1 Sensor value  ",
        "arduino_ext_get_analog_value": "Analog %1 Sensor value",
        "arduino_ext_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "arduino_ext_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "arduino_ext_toggle_led": "Digital %1 Pin %2 %3",
        "arduino_ext_digital_pwm": "Digital %1 Pin %2 %3",
        "arduino_ext_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "arduino_ext_set_servo": "Set servo pin %1 angle as %2 %3",
        "arduino_ext_get_digital": "Digital %1 Sensor value",
        "blacksmith_get_analog_value": "Read analog %1 pin sensor value",
        "blacksmith_get_analog_mapping": "Map analog %1 pin sensor value from %2 ~ %3 to %4 ~ %5",
        "blacksmith_get_digital_bluetooth": "Bluetooth RX 2 value",
        "blacksmith_get_digital_ultrasonic": "Read ultrasonic Trig %1 Echo %2 sensor value",
        "blacksmith_get_digital_toggle": "Digital %1 pin sensor value",
        "blacksmith_set_digital_toggle": "Digital %1 pin %2 %3",
        "blacksmith_set_digital_pwm": "Digital pwm %1 Pin %2 %3",
        "blacksmith_set_digital_servo": "Set servo pin %1 angle as %2 %3",
        "blacksmith_set_digital_buzzer": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "messageAddButton": "%1",
        "blacksmith_set_digital_lcd": "LCD %1 line %2 appear %3",
        "blacksmith_set_digital_bluetooth": "Bluetooth TX 3 Pin %1 data send %2",
        "dplay_get_number_sensor_value": "Analog %1 Sensor value  ",
        "nemoino_get_number_sensor_value": "Analog %1 Sensor value  ",
        "sensorBoard_get_number_sensor_value": "Analog %1 Sensor value  ",
        "truetrue_get_accsensor": "3-AXIS Accelerometer %1 Sensor value",
        "truetrue_get_bottomcolorsensor": "Bottom Color %1 Sensor value",
        "truetrue_get_frontcolorsensor": "Front Color %1 Sensor value",
        "truetrue_get_linesensor": "Line %1 Sensor value",
        "truetrue_get_proxisensor": "Proximity %1 Sensor value",
        "truetrue_set_colorled": "Set Color LED Red %1  Green %2 Blue %3 %4",
        "truetrue_set_dualmotor": "Set DC motor left %1  right %2 during %3 seconds %4",
        "truetrue_set_led_colorsensor": "LED for %1 color sensor %2 %3",
        "truetrue_set_led_linesensor": "LED for line sensor %1 %2",
        "truetrue_set_led_proxi": "LED for %1 proximity sensor %2 %3",
        "truetrue_set_linetracer": "Line tracing mode %1 %2",
        "truetrue_set_singlemotor": "Set DC motor %1  speed %2 %3",
        "CODEino_get_number_sensor_value": "Analog %1 Sensor value  ",
        "ardublock_get_number_sensor_value": "Analog %1 Sensor value  ",
        "arduino_get_digital_value": "Digital %1 Sensor value  ",
        "dplay_get_digital_value": "Digital %1 Sensor value  ",
        "nemoino_get_digital_value": "Digital %1 Sensor value  ",
        "sensorBoard_get_digital_value": "Digital %1 Sensor value  ",
        "CODEino_get_digital_value": "Digital %1 Pin value  ",
        "CODEino_set_digital_value": "Digital %1 Pin %2 %3",
        "CODEino_set_pwm_value": "Digital %1 Pin %2 %3",
        "ardublock_get_digital_value": "Digital %1 Sensor value  ",
        "arduino_toggle_led": "Digital %1 Pin %2 %3",
        "dplay_toggle_led": "Digital %1 Pin %2 %3",
        "nemoino_toggle_led": "Digital %1 Pin %2 %3",
        "sensorBoard_toggle_led": "Digital %1 Pin %2 %3",
        "CODEino_toggle_led": "Digital %1 Pin %2 %3",
        "arduino_toggle_pwm": "Digital %1 Pin %2 %3",
        "dplay_toggle_pwm": "Digital %1 Pin %2 %3",
        "nemoino_toggle_pwm": "Digital %1 Pin %2 %3",
        "sensorBoard_toggle_pwm": "Digital %1 Pin %2 %3",
        "CODEino_toggle_pwm": "Digital %1 Pin %2 %3",
        "ardublock_toggle_pwm": "Digital %1 Pin %2 %3",
        "arduino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "dplay_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "nemoino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "sensorBoard_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "CODEino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "CODEino_set_rgb_value": "Set color LED %1 by %2 %3",
        "CODEino_set_rgb_add_value": "Add color LED %1 by %2 %3",
        "CODEino_set_rgb_off": "Turn off LED %1",
        "CODEino_set__led_by_rgb": "Turn on color LED, Red %1 Green %2 Blue %3 %4",
        "CODEino_rgb_set_color": "Select %1 for color LED %2",
        "CODEino_led_by_value": "Turn on LED %1",
        "ardublock_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "joystick_get_number_sensor_value": "Analog %1 Sensor value  ",
        "joystick_get_digital_value": "Digital %1 Sensor value  ",
        "joystick_toggle_led": "Digital %1 Pin %2 %3",
        "joystick_toggle_pwm": "Digital %1 Pin %2 %3",
        "joystick_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "sensorBoard_get_named_sensor_value": "%1  Sensor value",
        "sensorBoard_is_button_pressed": "Pressed %1 button?",
        "sensorBoard_led": "%1  LED %2   %3",
        "arduino_download_connector": "%1",
        "download_guide": "%1",
        "arduino_download_source": "%1",
        "arduino_connected": "%1",
        "arduino_connect": "%1",
        "arduino_reconnect": "%1",
        "CODEino_get_sensor_number": "%1  ",
        "CODEino_get_named_sensor_value": "  %1  Sensor value ",
        "CODEino_get_sound_status": "Sound is  %1  ",
        "CODEino_get_light_status": "Light is  %1  ",
        "CODEino_is_button_pressed": " Operation  %1  ",
        "CODEino_get_accelerometer_direction": " 3-AXIS Accelerometer  %1  ",
        "CODEino_get_accelerometer_value": " 3-AXIS Accelerometer  %1 -axis value ",
        "CODEino_get_analog_value": "Analog %1 Sensor value",
        "iboard_button": "Pressed %1 button?",
        "iboard_digital_pwm": "Digital %1 Pin %2 %3",
        "iboard_get_analog_value": "Analog %1 Sensor value  ",
        "iboard_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "iboard_get_digital": "Digital %1 Sensor value  ",
        "iboard_led": "Digital %1 Pin %2 %3",
        "iboard_motor": "Digital %1 Pin %2 %3",
        "iboard_pwm_led": "Digital %1 Pin %2 %3",
        "iboard_rgb_led": " %1 LED %2 %3",
        "iboard_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "iboard_toggle_led": "Digital %1 Pin %2 %3",
        "bitbrick_sensor_value": "Value %1",
        "bitbrick_is_touch_pressed": "Pressed %1 button? ",
        "bitbrick_turn_off_color_led": "Turn off color LED %1",
        "bitbrick_turn_on_color_led_by_rgb": "Turn on color LED R %1 G %2 B %3 %4",
        "bitbrick_turn_on_color_led_by_picker": "Select %1 for color LED %2",
        "bitbrick_turn_on_color_led_by_value": "Turn on color LED, select %1 %2",
        "bitbrick_buzzer": "Buzz for %1 secs %2",
        "bitbrick_turn_off_all_motors": "Turn off all motors %1",
        "bitbrick_dc_speed": "DC motor %1 speed %2 %3",
        "bitbrick_dc_direction_speed": "DC motor %1 %2 direction speed %3 %4",
        "bitbrick_servomotor_angle": "Servo motor %1 angle %2 %3",
        "bitbrick_convert_scale": "Convert %1 value from %2~%3 to %4~%4",
        "start_drawing": "Start drawing %1",
        "stop_drawing": "Stop drawing %1",
        "start_fill": "Start filling %1",
        "stop_fill": "Stop filling %1",
        "set_fill_color": "Set fill color to %1 %2",
        "set_color": "Set brush color to %1 %2",
        "set_random_color": "Set brush color to random %1",
        "change_thickness": "Change thickness by %1 %2",
        "set_thickness": "Set thickness to %1 %2",
        "change_opacity": "Change opacity by %1 % %2",
        "set_opacity": "Set opacity to %1 % %2",
        "brush_erase_all": "Erase all brush %1",
        "brush_stamp": "Stamp %1",
        "change_brush_transparency": "Change transparency by %1 % %2",
        "set_brush_tranparency": "Set transparency to %1 % %2",
        "number": "%1",
        "angle": "%1",
        "color": "%1",
        "get_x_coordinate": "%1",
        "get_y_coordinate": "%1",
        "get_angle": "%1",
        "get_rotation_direction": "%1  ",
        "distance_something": "%1 %2 %3",
        "coordinate_mouse": "%1 %2 %3",
        "coordinate_object": "%1 %2 %3 %4",
        "calc_basic": "%1 %2 %3",
        "calc_plus": "%1 %2 %3",
        "calc_minus": "%1 %2 %3",
        "calc_times": "%1 %2 %3",
        "calc_divide": "%1 %2 %3",
        "calc_mod": "%1 %2 %3",
        "calc_share": "%1 %2 %3",
        "calc_operation": "%1 %2 %3 %4",
        "calc_rand": "%1 %2 %3 %4 %5",
        "get_date": "%1 %2 %3",
        "get_sound_duration": "%1 %2 %3",
        "get_nickname": "Nickname",
        "get_user_name": "Username",
        "reset_project_timer": "%1",
        "set_visible_project_timer": "%1 %2 %3 %4",
        "timer_variable": "%1 %2",
        "get_project_timer_value": "%1 %2",
        "char_at": "%1 %2 %3 %4 %5",
        "length_of_string": "%1 %2 %3",
        "reverse_of_string": "%1 %2 %3",
        "substring": "%1 %2 %3 %4 %5 %6 %7",
        "count_match_string": "%2 %3 %4 %1",
        "replace_string": "%1 %2 %3 %4 %5 %6 %7",
        "change_string_case": "%1 %2 %3 %4 %5",
        "index_of_string": "%1 %2 %3 %4 %5",
        "combine_something": "%1 %2 %3 %4 %5",
        "get_sound_volume": "%1 %2",
        "quotient_and_mod": " %1 %6 %3 %2 %5 %4",
        "choose_project_timer_action": "%1 %2 %3 %4",
        "wait_second": "Wait %1 seconds %2",
        "repeat_basic": "Repeat   %1 times %2",
        "hidden_loop": "Repeat   %1 times %2",
        "repeat_inf": "Repeat infinitely %1",
        "stop_repeat": "Stop repeat %1",
        "continue_repeat": "Skip this repeat %1",
        "wait_until_true": "Wait until %1 %2",
        "_if": "If %1 then %2",
        "if_else": "If %1 then %2 %3 else",
        "create_clone": "Create %1 's clone %2",
        "delete_clone": "Remove this clone %1",
        "when_clone_start": "%1 When clone is created",
        "stop_run": "Exit program %1",
        "repeat_while_true": "Repeat %2 %1 %3",
        "stop_object": "Stop %1 %2",
        "restart_project": "Restart Project %1",
        "remove_all_clones": "Remove all clone %1",
        "functionAddButton": "%1",
        "function_field_label": "%1%2",
        "function_field_string": "%1%2",
        "function_field_boolean": "%1%2",
        "get_block_count": "The number of blocks in %1",
        "change_rgb_to_hex": "HEX Value of R: %1 G: %2 B: %3",
        "change_hex_to_rgb": "%2 Value of HEX %1",
        "media_pipe_video_screen": "%1 video screen %2",
        "media_pipe_title": "%1",
        "media_pipe_switch_camera": "Switch to %1 camera %2",
        "check_connected_camera": "Connected to camera?",
        "media_pipe_flip_camera": "Flip video screen %1 %2",
        "media_pipe_set_opacity_camera": "Set video transparency effect to %1 %2",
        "media_pipe_motion_value": "%2 value detected on %1",
        "pose_landmarker_title": "%1",
        "when_pose_landmarker": "%1 When human detected",
        "pose_landmarker": "%1 human detection %2",
        "draw_detected_pose": "%1 detected human %2",
        "check_detected_pose": "Detected human?",
        "count_detected_pose": "Number of detected human",
        "locate_to_pose": "Go to %2 of %1 th human %3",
        "locate_time_to_pose": "For %1 secs go to %3 of %2 th human %4",
        "axis_detected_pose": "%3 coordinate of %1 th human's %2",
        "face_landmarker_title": "%1",
        "when_face_landmarker": "%1 When face detected",
        "face_landmarker": "%1 face detection %2",
        "draw_detected_face": "%1 detected face %2",
        "check_detected_face": "Detected face?",
        "count_detected_face": "Number of detected face",
        "locate_to_face": "Go to %2 of %1 th face %3",
        "locate_time_to_face": "For %1 secs go to %3 of %2 th face %4",
        "check_detected_gender": "Is the gender of %1 th face %2?",
        "check_compare_age": "Is the age of %1 th face %2 %3?",
        "check_detected_emotion": "Is the emotion of %1 th face %2?",
        "axis_detected_face": "%3 coordinate of %1 the face`s %2",
        "get_detected_face_value": "%2 of %1 th face",
        "object_detector_title": "%1",
        "when_object_detector": "%1 When object detected",
        "object_detector": "%1 object detection %2",
        "draw_detected_object": "%1 detected object %2",
        "check_detected_object": "Detected object?",
        "count_detected_object": "Number of detected object",
        "is_detected_among_objects": "%1 detected among the objects?",
        "hand_detection_title": "%1",
        "when_hand_detection": "%1 When hand detected",
        "hand_detection": "%1 hand detection %2",
        "draw_detected_hand": "%1 detected hand %2",
        "check_detected_hand": "Detected hand?",
        "count_detected_hand": "Number of detected hand",
        "locate_to_hand": "Go to %3 of %2 of in %1 th hand %4",
        "locate_time_to_hand": "For %1 secs go to %4 of %3 of in %2 th hand %5",
        "axis_detected_hand": "%4 coordinate of %3 of %2 in %1 th hand",
        "is_which_hand": "Is %1 th hand %2?",
        "is_which_gesture": "Is the gesture of %1 th hand %2 ?",
        "get_which_hand": "%1 th hand",
        "get_which_gesture": "The gesture of %1 th hand",
        "function_param_string": "Character/Number",
        "function_param_boolean": "Judgement",
        "function_create": "define function %1 %2",
        "function_create_value": "Define function %1 %2 %3 Return %4",
        "function_general": "function %1",
        "function_value": "Function",
        "expansionBlockAddButton": "%1",
        "aiUtilizeBlockAddButton": "%1",
        "aiUtilizeModelTrainButton": "%1",
        "weather_title": "%1",
        "check_weather": "%1 %2's weather is %3?",
        "check_finedust": "Current %1's fine dust grade is %2?",
        "get_weather_data": "%1 %2's %3",
        "get_current_weather_data": "Current %1's %2",
        "get_today_temperature": "Today %1's %2h temperature(℃)",
        "check_city_weather": "%1 %2 %3's weather is %4?",
        "check_city_finedust": "Current %1 %2's fine dust grade is %3?",
        "get_city_weather_data": "%1 %2 %3's %4",
        "get_current_city_weather_data": "Current %1 %2's %3",
        "get_today_city_temperature": "Today %1 %2's %3h temperature(℃)",
        "get_cur_weather": "Current weather in %1",
        "get_cur_wind": "Current wind direction in %1",
        "get_cur_weather_data": "Current %2 in %1",
        "check_cur_weather": "Is current weather in %1 %2?",
        "check_cur_finddust": "Is current fine dust grade in %1 %2?",
        "get_day_weather": "Weather in %2 %3 %1",
        "get_day_weather_data": "%3 in %2 %1",
        "check_day_weather": "Is %1 weather in %2 %3?",
        "get_time_weather": "%2 o'clock weather in %1",
        "get_time_weather_data": "%2 o'clock %3 in %1",
        "check_time_weather": "Is %2 o'clock weather in %1 %3?",
        "translate_title": "%1",
        "get_translated_string": "Translate %1 %2 into %3",
        "check_language": "language of %1",
        "festival_title": "%1",
        "count_festival": "%1 %2's number of events",
        "get_festival_info": "%4 of item %3 of event in %1 %2",
        "behaviorConductDisaster_title": "%1",
        "count_disaster_behavior": "%1 %2 behavior-guidelines's number",
        "get_disaster_behavior": "value of item %3 of %1 %2 behavior-guidelines",
        "behaviorConductLifeSafety_title": "%1",
        "count_lifeSafety_behavior": "%1 %2 behavior-guidelines's number",
        "get_lifeSafety_behavior": "value of item %3 of %1 how to %2",
        "disaster_alert_title_text": "Disaster alert",
        "count_disaster_alert": "number of %1 disaster alerts today",
        "get_disaster_alert": "%3 of %2 th disaster alert in %1 today",
        "check_disaster_alert": "was %1 disaster alert sent today?",
        "tts_title": "%1",
        "audio_title": "%1",
        "video_title": "%1",
        "read_text": "read %1 %2",
        "set_tts_property": "set in a %1 voice at %2 speed and %3 pitch %4",
        "read_text_wait_with_block": "read %1 and wait %2",
        "load_expansion_block": "add",
        "load_ai_utilize_block": "Load AI Block",
        "load_ai_utilize_train_block": "Train AI Model",
        "expansion_block_descriptions": "The expansion block works normally when the Internet is connected.",
        "aiUtilize_block_descriptions": "The A.I. Utilization block works normally when the Internet is connected.",
        "weather_title_text": "weather",
        "translate_title_text": "translate",
        "festival_title_text": "festival",
        "learning_title_image": "%1",
        "learning_title_speech": "%1",
        "learning_title_text": "%1",
        "learning_title_number": "%1",
        "learning_title_regression": "%1",
        "learning_title_cluster": "%1",
        "insert_data_for_test": "Classify with the trained model %1",
        "insert_text_block_for_test": "Classify %1 with the trained model %2",
        "test_result": "Classification result",
        "accuracy_of_result": "Confidence of %1",
        "is_group": "Is the classification result %1?",
        "retrain_model": "Retrain model %1",
        "model_is_trained": "Has the model trained?",
        "set_train_visible": "%1 Model %2",
        "set_train_chart": "%1 model chart window %2",
        "set_regression_option": "Change %1 training condition to %2 %3",
        "get_regression_predict_1": "Predicted value of %1 %2",
        "get_regression_predict_2": "Predicted value of %1 %2 %3 %4",
        "get_regression_predict_3": "Predicted value of %1 %2 %3 %4 %5 %6",
        "get_regression_accuracy": "Coefficient of determination",
        "set_cluster_option_k": "Change the number of clusters to %1 %2",
        "set_cluster_option_centroids": "Change centroid standard to %1 %2",
        "get_cluster_centriod_count": "Number of clusters",
        "get_cluster_centriod_value": "Value of %2 of cluster %1 centroid",
        "get_cluster_centriod_index_1": "Clusters of %1 %2",
        "get_cluster_centriod_index_2": "Clusters of %1 %2 %3 %4",
        "get_cluster_centriod_index_3": "Clusters of %1 %2 %3 %4 %5 %6",
        "set_number_learning_option_k": "Change the number of neighbors to %1 %2",
        "get_number_learning_predict_1": "Classification results of %1 %2",
        "get_number_learning_predict_2": "Classification results of %1 %2 %3 %4",
        "get_number_learning_predict_3": "Classification results of %1 %2 %3 %4 %5 %6",
        "get_number_learning_predict_param_1": "%4 for %3 of %1 %2",
        "get_number_learning_predict_param_2": "%6 for %5 of %1 %2 %3 %4",
        "get_number_learning_predict_param_3": "%8 for %7 of %1 %2 %3 %4 %5 %6",
        "is_number_learning_group_1": "Is the classification result of %1 %2 %3?",
        "is_number_learning_group_2": "Is the classification result of %1 %2 %3 %4 %5?",
        "is_number_learning_group_3": "Is the classification result of %1 %2 %3 %4 %5 %6 %7?",
        "audio_title_text": "Audio Sensing",
        "voice_title_text": "Speech recognition",
        "check_microphone": "If the microphone is connected to the computer, it is judged as 'True'.",
        "speech_to_text_convert": "Recognize the voice %1",
        "speech_to_text_get_value": "Speech-to-text value",
        "get_microphone_volume": "Microphone volume value",
        "video_title_text": "Video Detection",
        "video_draw_webcam": "%1 the video screen",
        "video_check_webcam": "connected with video?",
        "video_change_cam": "Switch to %1 camera %2",
        "video_set_camera_opacity_option": "Set video transparency effect to %1 %2",
        "video_flip_camera": "Flip video screen %1 %2",
        "video_toggle_model": "%1 recognition %2 %3",
        "video_toggle_ind": "%2 detected %1 %3",
        "video_number_detect": "Number of detected %1",
        "video_object_detected": "Is %1 recognized among objects?",
        "video_is_model_loaded": "detected %1?",
        "video_detected_face_info": "%2 of %1 th face",
        "video_motion_value": "Video %2 value on %1",
        "video_face_part_coord": "%3 coordinate of %2 in %1 th face",
        "video_body_part_coord": "%3 coordinate of %1 th human's %2",
        "behaviorConductDisaster_title_text": "desaster",
        "behaviorConductLifeSafety_title_text": "lifeSafety",
        "emergencyActionGuidelines_title_text": "Emergency action guidelines",
        "count_disaster_guideline": "number of guidelines in natural disaster %1 %2",
        "get_disaster_guideline": "%3 th item of guidelines in natural disaster %1 %2",
        "count_social_disaster_guideline": "number of guidelines in social disaster %1 %2",
        "get_social_disaster_guideline": "%3 th item of guidelines in social disaster %1 %2",
        "count_safety_accident_guideline": "number of guidelines in life safety accident %1 %2",
        "get_safety_accident_guideline": "%3 th item of guidelines in life safety accident %1 %2",
        "tts_title_text": "read",
        "hamster_hand_found": "hand found?",
        "hamster_value": "%1",
        "hamster_move_forward_once": "move forward once on board %1",
        "hamster_turn_once": "turn %1 once on board %2",
        "hamster_move_forward_for_secs": "move forward for %1 secs %2",
        "hamster_move_backward_for_secs": "move backward for %1 secs %2",
        "hamster_turn_for_secs": "turn %1 for %2 secs %3",
        "hamster_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "hamster_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "hamster_change_wheel_by": "change %1 wheel by %2 %3",
        "hamster_set_wheel_to": "set %1 wheel to %2 %3",
        "hamster_follow_line_using": "follow %1 line using %2 floor sensor %3",
        "hamster_follow_line_until": "follow %1 line until %2 intersection %3",
        "hamster_set_following_speed_to": "set following speed to %1 %2",
        "hamster_stop": "stop %1",
        "hamster_set_led_to": "set %1 led to %2 %3",
        "hamster_clear_led": "clear %1 led %2",
        "hamster_beep": "beep %1",
        "hamster_change_buzzer_by": "change buzzer by %1 %2",
        "hamster_set_buzzer_to": "set buzzer to %1 %2",
        "hamster_clear_buzzer": "clear buzzer %1",
        "hamster_play_note_for": "play note %1 %2 for %3 beats %4",
        "hamster_rest_for": "rest for %1 beats %2",
        "hamster_change_tempo_by": "change tempo by %1 %2",
        "hamster_set_tempo_to": "set tempo to %1 bpm %2",
        "hamster_set_port_to": "set port %1 to %2 %3",
        "hamster_change_output_by": "change output %1 by %2 %3",
        "hamster_set_output_to": "set output %1 to %2 %3",
        "roboid_hamster_beep": "Hamster %1: beep %2",
        "roboid_hamster_change_both_wheels_by": "Hamster %1: change wheels by left: %2 right: %3 %4",
        "roboid_hamster_change_buzzer_by": "Hamster %1: change buzzer by %2 %3",
        "roboid_hamster_change_output_by": "Hamster %1: change output %2 by %3 %4",
        "roboid_hamster_change_tempo_by": "Hamster %1: change tempo by %2 %3",
        "roboid_hamster_change_wheel_by": "Hamster %1: change %2 wheel by %3 %4",
        "roboid_hamster_clear_buzzer": "Hamster %1: clear buzzer %2",
        "roboid_hamster_clear_led": "Hamster %1: clear %2 led %3",
        "roboid_hamster_follow_line_until": "Hamster %1: follow %2 line until %3 intersection %4",
        "roboid_hamster_follow_line_using": "Hamster %1: follow %2 line using %3 floor sensor %4",
        "roboid_hamster_hand_found": "Hamster %1: hand found?",
        "roboid_hamster_move_backward_for_secs": "Hamster %1: move backward for %2 secs %3",
        "roboid_hamster_move_forward_for_secs": "Hamster %1: move forward for %2 secs %3",
        "roboid_hamster_move_forward_once": "Hamster %1: move forward once on board %2",
        "roboid_hamster_play_note_for": "Hamster %1: play note %2 %3 for %4 beats %5",
        "roboid_hamster_rest_for": "Hamster %1: rest for %2 beats %3",
        "roboid_hamster_set_both_wheels_to": "Hamster %1: set wheels to left: %2 right: %3 %4",
        "roboid_hamster_set_buzzer_to": "Hamster %1: set buzzer to %2 %3",
        "roboid_hamster_set_following_speed_to": "Hamster %1: set following speed to %2 %3",
        "roboid_hamster_set_led_to": "Hamster %1: set %2 led to %3 %4",
        "roboid_hamster_set_output_to": "Hamster %1: set output %2 to %3 %4",
        "roboid_hamster_set_port_to": "Hamster %1: set port %2 to %3 %4",
        "roboid_hamster_set_tempo_to": "Hamster %1: set tempo to %2 bpm %3",
        "roboid_hamster_set_wheel_to": "Hamster %1: set %2 wheel to %3 %4",
        "roboid_hamster_stop": "Hamster %1: stop %2",
        "roboid_hamster_turn_for_secs": "Hamster %1: turn %2 for %3 secs %4",
        "roboid_hamster_turn_once": "Hamster %1: turn %2 once on board %3",
        "roboid_hamster_value": "Hamster %1: %2",
        "roboid_turtle_button_state": "Turtle %1: button %2 ?",
        "roboid_turtle_change_buzzer_by": "Turtle %1: change buzzer by %2 %3",
        "roboid_turtle_change_head_led_by_rgb": "Turtle %1: change head led by r: %2 g: %3 b: %4 %5",
        "roboid_turtle_change_tempo_by": "Turtle %1: change tempo by %2 %3",
        "roboid_turtle_change_wheel_by": "Turtle %1: change %2 wheel by %3 %4",
        "roboid_turtle_change_wheels_by_left_right": "Turtle %1: change wheels by left: %2 right: %3 %4",
        "roboid_turtle_clear_head_led": "Turtle %1: clear head led %2",
        "roboid_turtle_clear_sound": "Turtle %1: clear sound %2",
        "roboid_turtle_cross_intersection": "Turtle %1: cross black intersection %2",
        "roboid_turtle_follow_line": "Turtle %1: follow %2 line %3",
        "roboid_turtle_follow_line_until": "Turtle %1: follow black line until %2 %3",
        "roboid_turtle_follow_line_until_black": "Turtle %1: follow %2 line until black %3",
        "roboid_turtle_is_color_pattern": "Turtle %1: color pattern %2 %3 ?",
        "roboid_turtle_move_backward_unit": "Turtle %1: move backward %2 %3 %4",
        "roboid_turtle_move_forward_unit": "Turtle %1: move forward %2 %3 %4",
        "roboid_turtle_pivot_around_wheel_unit_in_direction": "Turtle %1: pivot around %2 wheel %3 %4 in %5 direction %6",
        "roboid_turtle_play_note": "Turtle %1: play note %2 %3 %4",
        "roboid_turtle_play_note_for_beats": "Turtle %1: play note %2 %3 for %4 beats %5",
        "roboid_turtle_play_sound_times": "Turtle %1: play sound %2 %3 times %4",
        "roboid_turtle_play_sound_times_until_done": "Turtle %1: play sound %2 %3 times until done %4",
        "roboid_turtle_rest_for_beats": "Turtle %1: rest for %2 beats %3",
        "roboid_turtle_set_buzzer_to": "Turtle %1: set buzzer to %2 %3",
        "roboid_turtle_set_following_speed_to": "Turtle %1: set following speed to %2 %3",
        "roboid_turtle_set_head_led_to": "Turtle %1: set head led to %2 %3",
        "roboid_turtle_set_head_led_to_rgb": "Turtle %1: set head led to r: %2 g: %3 b: %4 %5",
        "roboid_turtle_set_tempo_to": "Turtle %1: set tempo to %2 bpm %3",
        "roboid_turtle_set_wheel_to": "Turtle %1: set %2 wheel to %3 %4",
        "roboid_turtle_set_wheels_to_left_right": "Turtle %1: set wheels to left: %2 right: %3 %4",
        "roboid_turtle_stop": "Turtle %1: stop %2",
        "roboid_turtle_touching_color": "Turtle %1: touching %2 ?",
        "roboid_turtle_turn_at_intersection": "Turtle %1: turn %2 at black intersection %3",
        "roboid_turtle_turn_unit_in_place": "Turtle %1: turn %2 %3 %4 in place %5",
        "roboid_turtle_turn_unit_with_radius_in_direction": "Turtle %1: turn %2 %3 %4 with radius %5 cm in %6 direction %7",
        "roboid_turtle_value": "Turtle %1: %2",
        "turtle_button_state": "button %1 ?",
        "turtle_change_buzzer_by": "change buzzer by %1 %2",
        "turtle_change_head_led_by_rgb": "change head led by r: %1 g: %2 b: %3 %4",
        "turtle_change_tempo_by": "change tempo by %1 %2",
        "turtle_change_wheel_by": "change %1 wheel by %2 %3",
        "turtle_change_wheels_by_left_right": "change wheels by left: %1 right: %2 %3",
        "turtle_clear_head_led": "clear head led %1",
        "turtle_clear_sound": "clear sound %1",
        "turtle_cross_intersection": "cross black intersection %1",
        "turtle_follow_line": "follow %1 line %2",
        "turtle_follow_line_until": "follow black line until %1 %2",
        "turtle_follow_line_until_black": "follow %1 line until black %2",
        "turtle_is_color_pattern": "color pattern %1 %2 ?",
        "turtle_move_backward_unit": "move backward %1 %2 %3",
        "turtle_move_forward_unit": "move forward %1 %2 %3",
        "turtle_pivot_around_wheel_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
        "turtle_play_note": "play note %1 %2 %3",
        "turtle_play_note_for_beats": "play note %1 %2 for %3 beats %4",
        "turtle_play_sound_times": "play sound %1 %2 times %3",
        "turtle_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "turtle_rest_for_beats": "rest for %1 beats %2",
        "turtle_set_buzzer_to": "set buzzer to %1 %2",
        "turtle_set_following_speed_to": "set following speed to %1 %2",
        "turtle_set_head_led_to": "set head led to %1 %2",
        "turtle_set_head_led_to_rgb": "set head led to r: %1 g: %2 b: %3 %4",
        "turtle_set_tempo_to": "set tempo to %1 bpm %2",
        "turtle_set_wheel_to": "set %1 wheel to %2 %3",
        "turtle_set_wheels_to_left_right": "set wheels to left: %1 right: %2 %3",
        "turtle_stop": "stop %1",
        "turtle_touching_color": "touching %1 ?",
        "turtle_turn_at_intersection": "turn %1 at black intersection %2",
        "turtle_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "turtle_turn_unit_with_radius_in_direction": "turn %1 %2 %3 with radius %4 cm in %5 direction %6",
        "turtle_value": "%1",
        "is_clicked": "%1",
        "is_object_clicked": "%1",
        "is_press_some_key": "%1 %2",
        "reach_something": "%1 %2 %3",
        "is_type": "%1 %2 %3 %4",
        "boolean_comparison": "%1 %2 %3",
        "boolean_equal": "%1 %2 %3",
        "boolean_bigger": "%1 %2 %3",
        "boolean_smaller": "%1 %2 %3",
        "boolean_and_or": "%1 %2 %3",
        "boolean_and": "%1 %2 %3",
        "boolean_or": "%1 %2 %3",
        "boolean_not": "%1 %2 %3",
        "is_boost_mode": "%1",
        "is_current_device_type": "is the project running on %1 ?",
        "is_touch_supported": "touch screen?",
        "true_or_false": "%1",
        "True": "%1  ",
        "False": "%1  ",
        "boolean_basic_operator": "%1 %2 %3",
        "show": "show shape %1",
        "hide": "hide shape %1",
        "dialog_time": "%3 %1 for %2 second(s) %4",
        "dialog": "%2 %1 %3",
        "remove_dialog": "Remove speech %1",
        "change_to_nth_shape": "Change shape to %1 %2",
        "change_to_next_shape": "Change to %1 shape %2",
        "set_effect_volume": "Change %1 effect by %2 %3",
        "set_effect": "Set %1 effect to %2 %3",
        "erase_all_effects": "Remove all effects %1",
        "change_scale_percent": "Change size by %1 %2",
        "set_scale_percent": "Set size to %1 %2",
        "change_scale_size": "Change scale by %1 %2",
        "set_scale_size": "Set scale to %1 %2",
        "stretch_scale_size": "Stretch %1 by %2 %3",
        "reset_scale_size": "Reset size %1",
        "flip_y": "Flip horizontally %1",
        "flip_x": "Flip vertically %1",
        "set_object_order": "go to %1 th layer %2",
        "get_pictures": "%1  ",
        "change_to_some_shape": "Change shape to %1 %2",
        "add_effect_amount": "Apply %1 effect by %2 %3",
        "change_effect_amount": "Set %1 effect to %2 %3",
        "set_effect_amount": "Change %1 effect by %2 %3",
        "set_entity_effect": "Set %1 effect to %2 %3",
        "change_object_index": "bring to %1 %2",
        "move_direction": "Move %1 forward %2",
        "move_x": "Change X by %1 %2",
        "move_y": "Change Y by %1 %2",
        "locate_xy_time": "Moving while %1 seconds to x: %2 y: %3 %4",
        "rotate_by_angle": "Rotate by %1 degree %2",
        "rotate_by_angle_dropdown": "Rotate by %1 degree %2",
        "see_angle": "Set direction to %1 %2",
        "see_direction": "Rotate to the %1 %2",
        "locate_xy": "Move to the X: %1 Y: %2 %3",
        "locate_x": "Move to the X: %1 %2",
        "locate_y": "Move to the Y: %1 %2",
        "locate": "Move to %1 %2",
        "move_xy_time": "For %1 secs move to X: %2 Y: %3 %4",
        "rotate_by_angle_time": "Rotate while %1 seconds by %2 degree %3",
        "bounce_wall": "if on edge, bounce %1",
        "flip_arrow_horizontal": "Flip horizontally by arrow direction %1",
        "flip_arrow_vertical": "Flip vertically by arrow direction %1",
        "see_angle_object": "Turn towards %1 %2",
        "see_angle_direction": "See angle to %1 degree %2",
        "rotate_direction": "Change direction by  %1 %2",
        "locate_object_time": "for %1 secs move to %2 %3",
        "rotate_absolute": "Set rotation to %1 %2",
        "rotate_relative": "Rotate %1 %2",
        "direction_absolute": "Set direction to %1 %2",
        "direction_relative": "Change direction by  %1 %2",
        "move_to_angle": "Rotate %1 and move %2 %3",
        "rotate_by_time": "For %1 secs rotate %2 %3",
        "direction_relative_duration": "For %1 secs set direction to %2 %3",
        "neobot_sensor_value": "%1 value",
        "neobot_turn_left": "Rotate left motor %1 %2 %3",
        "neobot_stop_left": "Stop left motor %1",
        "neobot_turn_right": "Rotate right motor %1 %2 %3",
        "neobot_stop_right": "Stop right motor %1",
        "neobot_run_motor": "Run %1 motor for %2 secs",
        "neobot_servo_1": "Move the servo motor connected to SERVO1 to %2 with the speed of %1 %3",
        "neobot_servo_2": "Move the servo motor connected to SERVO2 to %2 with the speed of %1 %3",
        "neobot_play_note_for": "Make a sound the melody %1 to %2 octave(s) as %3 %4",
        "neobot_set_sensor_value": "%1 value of the port to %2 %3",
        "robotis_openCM70_cm_custom_value": "Custom address ( %1 ) value %2",
        "robotis_openCM70_sensor_value": "Controller value %1",
        "robotis_openCM70_aux_sensor_value": "Value %1   %2",
        "robotis_openCM70_cm_buzzer_index": "Play %1 controller scale value for %2 seconds %3 ",
        "robotis_openCM70_cm_buzzer_melody": "Play controller melody %1 times %2",
        "robotis_openCM70_cm_sound_detected_clear": "Initialize the final number of sound detection  %1",
        "robotis_openCM70_cm_led": "Controller %1 LED %2 %3",
        "robotis_openCM70_cm_motion": "Play the motion %1 times",
        "robotis_openCM70_aux_motor_speed": "Set the speed of decelerating motor of %1 to %2 , and the output value to %3  %4",
        "robotis_openCM70_aux_servo_mode": "Set the mode of %1 servo motor to %2  %3",
        "robotis_openCM70_aux_servo_speed": "Set the speed of servo motor of %1 to %2 , and the output value to %3  %4",
        "robotis_openCM70_aux_servo_position": "Set the position of %1 servo motor to %2  %3",
        "robotis_openCM70_aux_led_module": "Set the LED module of %1 as %2  %3",
        "robotis_openCM70_aux_custom": "Set the user device of %1 as %2  %3",
        "robotis_openCM70_cm_custom": "Set the custom address ( %1 ) as %2  %3",
        "robotis_carCont_sensor_value": "Value   %1",
        "robotis_carCont_cm_led": "%1 LED 4,  %2 LED %3",
        "robotis_carCont_cm_sound_detected_clear": "Initialize the final number of sound detection  %1",
        "robotis_carCont_aux_motor_speed": "Set the speed of decelerating motor of %1 to %2, and the output value to %3  %4",
        "robotis_carCont_cm_calibration": "Set %1 value of infrared sensor calibration to %2  %3",
        "roduino_get_analog_number": "%1  ",
        "roduino_get_port_number": "%1  ",
        "roduino_get_analog_value": "Analog %1 Sensor value  ",
        "roduino_get_digital_value": "Digital %1 Sensor value  ",
        "roduino_set_digital": "Digital %1 Pin %2 %3",
        "roduino_motor": "%1 %2 %3",
        "roduino_set_color_pin": "Color Sensor R : %1, G : %2, B : %3 %4",
        "roduino_get_color": "Color Sensor %1 Detected ",
        "roduino_on_block": " On ",
        "roduino_off_block": " Off ",
        "schoolkit_get_in_port_number": "%1  ",
        "schoolkit_get_out_port_number": "%1  ",
        "schoolkit_get_servo_port_number": "%1  ",
        "schoolkit_get_input_value": "Digital %1 Sensor value  ",
        "schoolkit_set_output": "Digital %1 Pin %2 %3",
        "schoolkit_motor": "%1 Speed %2 %3 %4",
        "schoolkit_set_servo_value": "Servo %1 Pin %2˚ %3",
        "schoolkit_on_block": " On ",
        "schoolkit_off_block": " Off ",
        "when_scene_start": "%1 When scene started",
        "start_scene": "Start %1 scene %2",
        "start_neighbor_scene": "Start %1 scene %2",
        "sound_something": "Play %1 Sound %2",
        "sound_something_second": "Play %1 sound for %2 secs %3",
        "sound_something_wait": "Play %1 Sound and wait %2",
        "sound_something_second_wait": "Play %1 Sound for %2 secs and wait %3",
        "sound_volume_change": "Change volume by %1 % %2",
        "sound_volume_set": "Set volume to %1 % %2",
        "sound_silent_all": "Stop all sounds %1",
        "play_bgm": "Play %1 as background music %2",
        "stop_bgm": "Stop background music %1",
        "get_sound_speed": "Speed",
        "sound_speed_change": "Change speed by %1 %2",
        "sound_speed_set": "Set speed at %1 times %2",
        "get_sounds": "%1  ",
        "sound_something_with_block": "Play %1 Sound %2",
        "sound_something_second_with_block": "Play %1   sound for %2 secs %3",
        "sound_something_wait_with_block": "Play %1 Sound and wait %2",
        "sound_something_second_wait_with_block": "Play %1 Sound for   %2 secs and wait %3",
        "sound_from_to": "Play %1 sound from %2 to %3 secs %4",
        "sound_from_to_and_wait": "Play %1 sound from %2 to %3 secs and wait %4",
        "when_run_button_click": "%1 When run",
        "press_some_key": "%1 When key %2 pressed %3",
        "when_some_key_pressed": "%1 When key %2 pressed",
        "mouse_clicked": "%1 When mouse clicked",
        "mouse_click_cancled": "%1 When mouse click released",
        "when_object_click": "%1 When object clicked",
        "when_object_click_canceled": "%1 When object click released",
        "when_some_key_click": "%1 When press some key",
        "when_message_cast": "%1 When %2 message received",
        "message_cast": "Send %1 message %2",
        "message_cast_wait": "Send %1  message and wait %2",
        "text": "%1",
        "text_read": "Textbox %1’s contents",
        "text_write": "Writing that %1 %2",
        "text_append": "After writing that %1 %2",
        "text_prepend": "Add %1 in front of that %2",
        "text_change_effect": "%2 %1 effect to text box %3",
        "text_change_font": "Change font to %1 %2",
        "text_change_font_color": "Change text color to %1 %2",
        "text_change_bg_color": "Change background color to %1 %2",
        "text_flush": "Remove all text %1",
        "analizyDataAddButton": "%1",
        "append_row_to_table": "Add a %2 to table %1 %3",
        "insert_row_to_table": "Insert %3 to %2 th row in table %1 %4",
        "delete_row_from_table": "Remove %2 th %3 in table %1 %4",
        "set_value_from_table": "Change %3 in table %1 %2 th row to %4 %5",
        "save_current_table": "Save table %1 as it is %2",
        "get_table_count": "number of %2 in table %1",
        "get_value_from_table": "%3 value of %2 th row in table %1",
        "get_value_from_last_row": "%2 value of the last row in table %1",
        "calc_values_from_table": "%3 of %2 in table %1",
        "open_table": "Open table %1 window %2",
        "open_table_wait": "Open table %1 window for %2 second(s) %3",
        "open_table_chart": "Open chart %2 of table %1 %3",
        "close_table_chart": "Close table chart %1",
        "get_coefficient": "correlation coefficient between %2 and %3 in table %1",
        "set_value_from_cell": "Change %2 cell in table %1 to %3 %4",
        "get_value_from_cell": "value of %2 cell in table %1",
        "get_value_v_lookup": "%4 value of the row that %2 is %3 in table %1",
        "variableAddButton": "%1",
        "listAddButton": "%1",
        "change_variable": "Plus to %1 by %2 %3",
        "set_variable": "Set %1 to %2 %3",
        "show_variable": "Show variable %1 value %2",
        "hide_variable": "Hide variable %1 value %2",
        "get_variable": "%2 %1",
        "ask_and_wait": "Ask %1 and wait %2",
        "get_canvas_input_value": "%1  ",
        "add_value_to_list": "add %1 to the list %2 %3",
        "remove_value_from_list": "remove %1 th element from %2 %3",
        "insert_value_to_list": "insert %1 to %2 %3 th position %4",
        "change_value_list_index": "change %1 %2 th element to %3 %4",
        "value_of_index_from_list": "%1 %2 %3 %4 %5",
        "length_of_list": "%1 %2 %3",
        "show_list": "Show list %1 %2",
        "hide_list": "Hide list %1 %2",
        "options_for_list": "%1  ",
        "set_visible_answer": "response %1 %2",
        "is_included_in_list": "%1 %2 %3 %4 %5",
        "xbot_digitalInput": "%1",
        "xbot_analogValue": "%1",
        "xbot_digitalOutput": "Digital %1 PIN, Ouput Value %2 %3",
        "xbot_analogOutput": "Analog %1 %2 %3",
        "xbot_servo": "Servo Motor %1 , Angle %2 %3",
        "xbot_oneWheel": "Wheel(DC) Motor %1 , Speed %2 %3",
        "xbot_twoWheel": "Wheel(DC) Motor Right(2) Speed: %1 Left(1) Speed: %2 %3",
        "xbot_rgb": "RGB LED Color from Red %1 Green %2 Blue %3 %4",
        "xbot_rgb_picker": "RGB LED Color from %1   %2",
        "xbot_buzzer": "play note %1   %2 for %3 sec of Melody Playing %4",
        "xbot_lcd": "LCD %1 th Line ,  Text %2 %3",
        "run": "",
        "mutant": "test mutant block",
        "jr_start": "%1",
        "jr_repeat": "Repeat %1 %2",
        "jr_item": "Gather flower %1",
        "cparty_jr_item": "Pick up %1",
        "jr_north": "Up %1",
        "jr_east": "Right %1",
        "jr_south": "Down %1",
        "jr_west": "Left %1",
        "jr_start_basic": "%1 %2",
        "jr_go_straight": "Go forward %1",
        "jr_turn_left": "Turn left %1",
        "jr_turn_right": "Turn right %1",
        "jr_go_slow": "Go slow %1",
        "jr_repeat_until_dest": "Repeat until meeting up with %1 %2",
        "jr_if_construction": "If %1 in front %2",
        "jr_if_speed": "If %1 in front %2",
        "maze_step_start": "%1 When Run",
        "maze_step_jump": "Skip%1",
        "maze_step_jump2": "Jump%1",
        "maze_step_jump_pinkbean": "Jump%1",
        "maze_step_for": "Repeat %1 times %2",
        "test": "%1 this is test block %2",
        "maze_repeat_until_1": "Repeat until meeting up with %1  %2",
        "maze_repeat_until_2": "Repeat until meeting up with all %1  %2",
        "maze_step_if_1": "If %1 is in front %2",
        "maze_step_if_2": "If %1 is in front %2",
        "maze_call_function": "Import promise %1",
        "maze_define_function": "Promise %1",
        "maze_step_if_3": "If %1 is in front %2",
        "maze_step_if_4": "If %1 is in front %2",
        "maze_step_move_step": "Move one step forward %1",
        "maze_step_rotate_left": "Turn to the left %1",
        "maze_step_rotate_right": "Turn to the right %1",
        "maze_step_forward": "Go forward %1",
        "maze_turn_right": "look right side %1",
        "maze_turn_left": "look left side %1",
        "maze_ladder_climb": "Climb ladder%1",
        "maze_attack_lupin": "Attack %1 %2",
        "maze_attack_both_side": "Attack both sides%1",
        "maze_attack_pepe": "Attack %1 %2",
        "maze_attack_yeti": "Attack %1 %2",
        "maze_attack_mushroom": "Attack %1 %2",
        "maze_attack_peti": "Attack %1 %2",
        "maze_eat_item": "Take food%1",
        "maze_step_if_mushroom": "If there is %1 one space forward %2",
        "maze_step_if_yeti": "If there is %1 in front %2 %3 else",
        "maze_step_if_left_monster": "If there is a monster in the left side attack range %1 %2 else",
        "maze_step_if_right_monster": "If there is a monster in the right side attack range %1 %2 else",
        "maze_step_if_lupin": "If there is %1 two spaces forward %2",
        "maze_step_if_else_road": "If there is road one space forward %1 %2else",
        "maze_step_if_else_mushroom": "If there is %1 one space forward %2 %3 else",
        "maze_step_if_else_lupin": "If there is %1 two spaces forward %2 %3 else",
        "maze_step_if_else_ladder": "If there is %1 one space forward %2 %3 else",
        "maze_rotate_left": "Spin to the left %1",
        "maze_rotate_right": "Spin to the right %1",
        "maze_moon_kick": "Kick %1",
        "maze_repeat_until_3": "Repeat until meeting up with %1  %2",
        "maze_repeat_until_4": "Repeat until meeting up with %1  %2",
        "maze_repeat_until_5": "Repeat until meeting up with %1  %2",
        "maze_repeat_until_6": "Repeat until arriving to %1  %2",
        "maze_repeat_until_7": "Repeat until reaching %1 %2",
        "maze_repeat_until_goal": "Repeat until arrival to destination%1",
        "maze_repeat_until_beat_monster": "Repeat until all monsters are defeated %1",
        "maze_radar_check": "%2 is in %1",
        "maze_cony_flower_throw": "Throw flower %1",
        "maze_brown_punch": "Punch %1",
        "maze_iron_switch": "Control obstacles %1",
        "maze_james_heart": "Send hearts %1",
        "maze_step_if_5": "If there is no road in front %2",
        "maze_step_if_6": "If %1 isn't in front %2",
        "maze_step_if_7": "If %1 is in front %2",
        "maze_step_if_8": "If it is %1  %2",
        "maze_step_if_else": "If it is %1  %2  %3 or",
        "test_wrapper": "%1 this is test block %2",
        "basic_button": "%1",
        "ai_move_right": "move forward %1",
        "ai_move_up": "go above %1",
        "ai_move_down": "go under %1",
        "ai_repeat_until_reach": "repeat until destination %1",
        "ai_if_else_1": "if %1 in front %2 %3 else",
        "ai_boolean_distance": "%1 radar %2 %3",
        "ai_distance_value": "%1 radar",
        "ai_boolean_object": "is %1 object %2 ?",
        "ai_use_item": "use item %1",
        "ai_boolean_and": "%1 %2 %3",
        "ai_True": "%1",
        "ai_if_else": "If %1 then %2 %3 else",
        "smartBoard_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "smartBoard_get_named_sensor_value": "%1 Sensor value",
        "smartBoard_is_button_pressed": "Pressed %1 button?",
        "smartBoard_set_dc_motor_direction": "%1 DC Motor direction %2 %3",
        "smartBoard_set_dc_motor_speed": "%1 DC Motor Speed %2 %3",
        "smartBoard_set_dc_motor_pwm": "%1 DC Motor set speed %2 %3",
        "smartBoard_set_servo_speed": "%1 RC Servo Motor Speed %2 %3",
        "smartBoard_set_servo_angle": "%1 RC Servo Motor set angle %2 %3",
        "smartBoard_set_number_eight_pin": "%1 port %2 %3",
        "smartBoard_set_gs1_pwm": "Set PWM port of GS1 port %1 %2",
        "robotori_digitalInput": "%1",
        "robotori_analogInput": "%1",
        "robotori_digitalOutput": "Digital %1 PIN, Output Value %2 %3",
        "robotori_analogOutput": "Analog %1 %2 %3",
        "robotori_servo": "Servo Motor Angle %1 %2",
        "robotori_dc_direction": "DC Motor %1 Direction %2 %3",
        "dadublock_get_analog_value": "Analog %1 Sensor value",
        "dadublock_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
        "dadublock_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "dadublock_toggle_led": "Digital %1 Pin %2 %3",
        "dadublock_digital_pwm": "Digital %1 Pin %2 %3",
        "dadublock_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "dadublock_set_servo": "Set servo pin %1 angle as %2 %3",
        "coconut_stop_motor": "stop motor %1",
        "coconut_move_motor": "move %1 %2",
        "coconut_turn_motor": "turn %1 %2",
        "coconut_move_for_secs": "move %1 for time %2 %3",
        "coconut_turn_for_secs": "turn %1 for %2 secs %3",
        "coconut_turn_to_led": "turn %1 RGB %2 %3",
        "coconut_move_outmotor": "external Motor %1 speed %2 %3",
        "coconut_set_led_to": "turn on RGB %1 %2 %3",
        "coconut_clear_led": "turn off RGB %1 %2",
        "coconut_set_led_clear": "turn off RGB %1 %2 %3",
        "coconut_set_led_time": "turn on RGB %1 %2 for time %3 %4",
        "coconut_beep": "buzzer on %1",
        "coconut_buzzer_time": "play buzzer for time %1 %2",
        "coconut_buzzer_set_hz": "play buzzer on frequency %1 Hz for time %2 %3",
        "coconut_clear_buzzer": "buzzer off %1",
        "coconut_play_buzzer": "play buzzer on note %1 octave %2 %3 beat %4 %5",
        "coconut_rest_buzzer": "rest beat %1 %2",
        "coconut_play_buzzer_led": "play buzzer on note %1 octave %2 %3 beat %4 RGB %5 %6 %7",
        "coconut_play_midi": "play melody %1 %2",
        "coconut_floor_sensor": "line tracer %1",
        "coconut_floor_sensing": "line tracer detect %1 %2",
        "coconut_following_line": "follow the line %1",
        "coconut_front_sensor": "IR distance sensor %1",
        "coconut_front_sensing": "detecting obstacle %1 %2",
        "coconut_obstruct_sensing": "detecting obstacle",
        "coconut_avoid_mode": "avoid mode %1",
        "coconut_dotmatrix_set": "LED Matrix %1 ( ROW %2, COL %3 ) %4",
        "coconut_dotmatrix_on": "turn on all LED Matrix %1",
        "coconut_dotmatrix_off": "LED Matrix clear all %1",
        "coconut_dotmatrix_num": "LED Matrix show %1 %2",
        "coconut_dotmatrix_small_eng": "LED Matrix show small letter %1 %2",
        "coconut_dotmatrix_big_eng": "LED Matrix show capital letters %1 %2",
        "coconut_dotmatrix_kor": "LED Matrix show Korean %1 %2",
        "coconut_light_sensor": "light sensor",
        "coconut_tem_sensor": "temperature",
        "coconut_ac_sensor": "3-Axis Accelerometer %1 angle",
        "coconut_outled_sensor": "set external LED pin %1 for time %2 %3",
        "coconut_outspk_sensor": "set Speaker pin %1 frequency %2 (Hz) duration %3 seconds %4",
        "coconut_outspk_sensor_off": "stop Speaker pin %1 %2",
        "coconut_outinfrared_sensor": "external IR sensor %1",
        "coconut_outcds_sensor": "external Cds sensor %1",
        "coconut_servomotor_angle": "set servo pin %1 angle as %2 %3",
        "chocopi_control_button": "%1 controller %2 is pressed",
        "chocopi_control_event": "%1 When %2 controller %3 is %4",
        "chocopi_control_joystick": "%1 controller %2 value",
        "chocopi_dc_motor": "%1 DC motor #%2  %3 % direction %4 %5",
        "chocopi_led": "%1 LED #%2 RGB(%3 %4 %5) %6",
        "chocopi_motion_photogate_event": "%1 When %2 photogate %3 is %4",
        "chocopi_motion_photogate_status": "%1 photogate #%2 is blocked",
        "chocopi_motion_photogate_time": "time when %1 photogate %2 was %3",
        "chocopi_motion_value": "%1 motion %2 value",
        "chocopi_sensor": "%1 sensor %2",
        "chocopi_servo_motor": "%1 set servo motor #%2 %3 degree %4",
        "chocopi_touch_event": "%1 When %2 touch pad%3 is %4",
        "chocopi_touch_status": "%1 touch pad%2 is touched",
        "chocopi_touch_value": "%1 touch pad%2 value",
        "dadublock_car_digital_pwm": "디지털 %1 번 핀을 %2 (으)로 정하기 %3",
        "dadublock_car_get_analog_value": "아날로그 %1 번 센서값",
        "dadublock_car_get_analog_value_map": "아날로그 %1번 센서값의 범위를 %2 ~ %3 에서 %4 ~ %5 (으)로 바꾼값  ",
        "dadublock_car_get_digital": "디지털 %1 번 센서값",
        "dadublock_car_get_irsensor": "적외선 %1 번 센서값",
        "dadublock_car_get_ultrasonic_value": "울트라소닉 Trig %1번핀 Echo %2번핀 센서값",
        "dadublock_car_motor": "모터 %1 번을 %2 (으)로 %3 %의 속도로 움직이기 %4",
        "dadublock_car_motor_stop": "모터 %1 번 멈추기 %2",
        "dadublock_car_set_servo": "서보모터 %1 번 핀을 %2 의 각도로 정하기 %3",
        "dadublock_car_set_tone": "디지털 %1 번 핀 을 %2 음으로 %3의 옥타브로 %4 만큼 연주하기 %5",
        "dadublock_car_toggle_led": "디지털 %1 번 핀 %2 %3",
        "dadublock_get_digital": "디지털 %1 번 센서값",
        "ev3_get_sensor_value": "%1's value",
        "ev3_touch_sensor": "%1's touch sensor activated?",
        "ev3_color_sensor": "%1's %2 value",
        "ev3_motor_power": "%1's value print as %2 %3",
        "ev3_motor_power_on_time": "%1's value for %2seconds %3 printed %4",
        "ev3_motor_degrees": "%1's value in %2 direction turn %3 degrees %4",
        "rokoboard_get_sensor_value_by_name": "%1 value",
        "ardublock_digital_pwm": "Digital %1 Pin %2 %3",
        "ardublock_get_analog_value": "Analog %1 Sensor value",
        "ardublock_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "ardublock_get_digital": "Digital %1 Sensor value",
        "ardublock_get_left_cds_analog_value": "Left CDS %1 Sensor value",
        "ardublock_get_right_cds_analog_value": "Left CDS  %1 Sensor value",
        "ardublock_get_sound_analog_value": "Analog Sound %1 Sensor value",
        "ardublock_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "ardublock_set_left_motor": "Left motor direction to %1 speed %2 set %3",
        "ardublock_set_right_motor": "Right motor direction to %1 speed %2 set %3",
        "ardublock_set_servo": "Set servo pin %1 angle as %2 %3",
        "ardublock_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "ardublock_toggle_led": "Digital %1 Pin %2 %3",
        "ardublock_toggle_left_led": "Left Light %1 Pin %2 %3",
        "ardublock_toggle_right_led": "Right Light %1 Pin %2 %3",
        "mkboard_digital_pwm": "Digital %1 Pin %2 %3",
        "mkboard_get_analog_value": "Analog %1 Sensor value",
        "mkboard_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mkboard_get_digital": "Digital %1 Sensor value",
        "mkboard_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mkboard_set_servo": "Set servo pin %1 angle as %2 %3",
        "mkboard_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "mkboard_toggle_led": "Digital %1 Pin %2 %3",
        "mkboard_set_lcd": "1602 LCD Row %1, Column %2 Value %3 %4",
        "mkboard_lcd_command": "1602 LCD : Execute %1 command %2",
        "altino_analogValue": "altino %1 sensor value",
        "altino_dot_display": "electronic scoreboard %1 display %2",
        "altino_dot_display_line": "1col %1 2col %2 3col %3 4col %4 5col %5 6col %6 7col %7 8col %8 display %9",
        "altino_light": "%1 light %2  %3",
        "altino_rear_wheel": "rear motor right %1 left %2 setting %3",
        "altino_sound": "%1 octave %2 play  %3",
        "altino_steering": "direction %1 setting %2",
        "jdkit_altitude": "드론을 %1 높이만큼 날리기 %2",
        "jdkit_button": "%1번 버튼 값 읽어오기",
        "jdkit_connect": "드론 연결 상태 읽어오기",
        "jdkit_emergency": "드론을 즉시 멈추기 %1",
        "jdkit_gyro": "보드 %1 기울기 값 읽어오기",
        "jdkit_joystick": "조이스틱 %1 읽기",
        "jdkit_led": "%1 LED %2  %3",
        "jdkit_motor": "%1 모터를 %2 세기로 돌리기 %3",
        "jdkit_ready": "드론 비행 준비 상태 읽어오기",
        "jdkit_rollpitch": "드론을 %1 방향 %2 세기로 움직이기 %3",
        "jdkit_throttle": "드론 프로펠러를 %1 만큼 세기로 돌리기 %2",
        "jdkit_tune": "%1 음을  %2 초동안 소리내기 %3",
        "jdkit_ultrasonic": "거리(초음파)값 읽어오기",
        "jdkit_yaw": "드론을 %1 만큼 회전하기 %2",
        "memaker_digital_pwm": "Digital %1 Pin %2 %3",
        "memaker_get_analog_value": "Analog %1 Sensor value",
        "memaker_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "memaker_get_digital": "Digital %1 Sensor value",
        "memaker_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "memaker_set_lcd": "1602 LCD Row %1, Column %2 Value %3 %4",
        "memaker_set_servo": "Set servo pin %1 angle as %3",
        "memaker_toggle_led": "Digital %1 Pin %2 %3",
        "memaker_lcd_command": "1602 LCD Command %1 execute %2",
        "edumaker_digital_pwm": "디지털 %1 번 핀을 %2 (으)로 정하기 %3",
        "edumaker_get_analog_value": "아날로그 %1 번 센서값",
        "edumaker_get_analog_value_map": "%1 의 범위를 %2 ~ %3 에서 %4 ~ %5 로 바꾼값",
        "edumaker_get_digital": "디지털 %1 번 센서값",
        "edumaker_get_ultrasonic_value": "울트라소닉 Trig %1 Echo %2 센서값",
        "edumaker_set_servo": "디지털 %1 번 핀의 서보모터를 %2 의 각도로 정하기 %3",
        "edumaker_set_tone": "디지털 %1 번 핀의 버저를 %2 %3 음으로 %4 초 연주하기 %5",
        "edumaker_toggle_led": "디지털 %1 번 핀 %2 %3",
        "creamo_get_number_sensor_value": "PWM_Block %1 Sensor value",
        "creamo_get_port_number": "%1",
        "creamo_get_pwm_port_number": "%1",
        "creamo_motor_port_number": "%1",
        "creamo_toggle_led": "LED_Block %1 Pin %2 %3",
        "creamo_toggle_motor": "Motor_Block %1 pin %2 %3",
        "creamo_toggle_pwm": "Digital %1 Pin %2 %3",
        "mechatro_get_dc_motor_current": "Get 1%motor current",
        "mechatro_get_digital": "%1",
        "mechatro_get_sensor_value": "Analog %1 Sensor value",
        "mechatro_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mechatro_set_blue_pw": "Change PW of Bluetooth to %1%2%3%4 %5",
        "mechatro_set_dc_motor": "Set %1 motor speed to %2 %3",
        "mechatro_set_digital": "Digital %1 Pin %2 %3",
        "mechatro_set_pwm": "Digital %1 Pin %2 %3",
        "mechatro_set_servo_position": "Set servo pin %1 angle as %2 %3",
        "mechatro_set_servo_speed": "Set servo pin %1 speed %2 degree per second %3",
        "mechatro_set_threshold": "Set %1 threshold : %2%3",
        "mechatro_set_tone": "Play tone pin %1 on note %2 octave %3 %4",
        "mechatro_set_tone_time": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "funboard_buzzer_onoff": "buzzer %1 %2",
        "funboard_buzzer_second": "buzzer%1%2seconds%3",
        "funboard_buzzer_tone_simple": "play note%1%2,%3sec of Melody Playing%4",
        "funboard_color_led_on_pwm": "%1COLOR  LED %2 % %3",
        "funboard_color_led_onoff": "%1COLOR  LED %2 %3",
        "funboard_convert_scale": "Convert %1 value from %2~%3 to %4~%5",
        "funboard_dotmatrix_1column": "%1column %2set %3",
        "funboard_dotmatrix_1row": "%1row %2set %3",
        "funboard_dotmatrix_1row_1column": "%1%2 %3set %4",
        "funboard_dotmatrix_64_display": "%1 (8x8)display%2",
        "funboard_dotmatrix_big_eng": "capital letters %1 %2",
        "funboard_dotmatrix_char_display": "char%1display%2",
        "funboard_dotmatrix_extra_char": "char %1 %2",
        "funboard_dotmatrix_intensity": "Intensity %1% %2",
        "funboard_dotmatrix_kor": "∷∷  korean %1 %2",
        "funboard_dotmatrix_num": "number %1 %2",
        "funboard_dotmatrix_onoff": "turn all %1 %2",
        "funboard_dotmatrix_scroll_option": "scroll direction%1%2",
        "funboard_dotmatrix_scroll_rapid": "scroll rapid %1% %2",
        "funboard_dotmatrix_set": "%1row %2column  %3 %4",
        "funboard_dotmatrix_small_eng": "small letter %1 %2",
        "funboard_dotmatrix_string_display": "string%1display%2",
        "funboard_dotmatrix_string_display_scroll": "string%1display%2scroll%3",
        "funboard_dotmatrix_symbol": "symbol %1 %2",
        "funboard_get_analog_sensor_2state": "%1 value %2",
        "funboard_get_digital_button_value": "%1 button value",
        "funboard_get_number_sensor_value": "%1 value",
        "funboard_get_touch_button_value": "%1 touch button value",
        "funboard_set_digital_buzzer": "Play tone octave %1 note %2 beat %3 %4",
        "funboard_what_button_pressed": "%1 button pressed.",
        "funboard_what_touch_button_pressed": "%1 touch button pressed.",
        "learning_title_image_str": "Classification: Image model",
        "learning_title_speech_str": "Classification: Voice model",
        "learning_title_text_str": "Classification: Text model",
        "learning_title_number_str": "Classification: Number model",
        "learning_title_regression_str": "Prediction: Number model",
        "learning_title_cluster_str": "Clustering: Number model",
        "KrcBuzzerOnOff": "Speakers Beep %1 Playing Second %2",
        "KrcSetMotorSpeed": "Set DC motor left speed %1  right speed %2 %3",
        "KrcMotorStop": "Stop DC Motor %1",
        "KrcSetServo": "Servo motor %1 port angle %2 movement %3",
        "KrcDigitalOnOff": "Setting up digital %1 port %2 %3",
        "KrcGetDgitalValue": "Read digital %1 port",
        "KrcGetAnalogValue": "Analog %1 port read",
        "KrcGetUsonicValue": "Analog type (US-016)High sound sensor %1 port read",
        "KrcSetLcdString": "lcd Display %3 on line %1 and line %2 %4",
        "KrcSetLcdBacklight": "Enter lcd backlight %1 %2",
        "KrcSetLcdClear": "Clear lcd %1",
        "KrcGetAnalogMapping": "%1 value %2 to %3 ; to %4 to %5 conversion value ",
        "LineCodingStart": "Start saving to the %1 %2",
        "LineCodingStop": "End saving to lint racer %1",
        "LineCodingLineEasy": "Go %1 %2",
        "LineCodingEasySet": "To set the %1 %2 %3",
        "LineCodingEasyTimeSet": "Set %1mS to go straight at the intersection %2",
        "LineCodingEasyMotor": "Moving %2mS in the direction of motor %1 %3",
        "LineCodingRestart": "restart(%1); %2 %2",
        "LineCodingDelay": "delay(%1); %2",
        "LineCodingLine": "line(%1, %2, %3); %4",
        "LineCodingTurn": "%1(%2, %3); %4",
        "LineCodingMotor": "motor(%1, %2, %3); %4",
        "LineCodingBmotor": "%1(%2, %3, %4); %5",
        "LineCodingWheel": "wheel(%1, %2); %3",
        "LineCodingServo": "sservo(%1, %2, %3); %4",
        "LineCodingDigitalOnOff": "Setting up digital %1 port %2 %3",
        "LineCodingMelody": "Play speaker %1 octave %2 sound %3 seconds %4",
        "LineCodingMotorStop": "motorstop(%1, %2); %3",
        "LineCodingBlackForwardF": "blackforwardf(%1,%2,%3,%4);%5",
        "LineCodingGetDgitalValue": "Read digital %1 port",
        "LineCodingGetAnalogValue": "Analog %1 port read",
        "LineCodingGetAnalogMapping": "%1 value %2 to %3 ; to %4 to %5 conversion value ",
        "LineCodingRemotRx": " Code that runs when controller button %1, %2 is pressed %3",
        "LineCodingLineDelay": "linedelay(%1, %2, %3); %4",
        "LineCodingABSH": "lineabsh(%1, %2, %3, %4, %5, %6); %7",
        "LineCodingBuzzerOnOff": "buzzer(%1, %2, %3); %4",
        "LineCodingLED": "led(%1, %2, %3, %4); %5",
        "LineCodingSetLcdString": "lcd Display %3 on line %1 and line %2 %4",
        "LineCodingSetLcdClear": "Clear lcd %1",
        "LineCodingFFmotor": "ffmotor(%1, %2); %3",
        "LineCodingBBmotor": "bbmotor(%1, %2); %3",
        "RichShield_get_Analog_value": "Get Analog %1 pin value",
        "RichShield_set_digital_toggle": "Digital %1 pin %2 %3",
        "RichShield_get_digital": "Digital %1 pin sensor value %2",
        "RichShield_get_digital_toggle": "Digital %1 pin sensor value %2",
        "RichShield_LCD_event": "LCD Display(1602)-I2C",
        "RichShield_LCD_Control_init": "LCD %1 :  Address set to %2",
        "RichShield_LCD_Control_Display": "LCD %1 line %2 appear %3",
        "RichShield_FND_event": "FND 4digit (TM1637)- CLK:D5, DIO:D4",
        "RichShield_FND_Control_init": "FND %1 : Digital CLK %2  , DIO %3 pin setting",
        "RichShield_FND_Control_diplay_brightness": "FND %1 : Brightness %2 level setting",
        "RichShield_FND_Control_display_onoff": "FND %1 : Power %2",
        "RichShield_FND_Control_diplay_char": "FND %1 : %2 display:zero-fill %3  %4 sec waiting",
        "RichShield_DHT_event": "Humidity/Temperature(DHT11/22)-Digital 12 pin",
        "RichShield_DHT_Control_Init_Process": "Humidity/Temperature %1 : Digital %2 Pin, Version %3",
        "RichShield_DHT_Control_Read_Temper": "Humidity/Temperature %1 : read Temperature %2",
        "Krypton0_turnon_motor": "Motors move to %1 as %2 speed %3",
        "Krypton0_move_to_direction_during_secs": "Motors move to %1 during %2 sec %3",
        "Krypton0_turnoff_motor": "Stop Motors %1",
        "Krypton0_change_direction_during_secs": "Motors go to %1 during %2 secs %3",
        "Krypton0_change_speed": "Motor change from speed of %1 to %2 %3",
        "Krypton0_play_sound": "Kripton play %1 audio %2",
        "Krypton0_get_sensor_data": "Port %1 read sensor %2 value",
        "Krypton0_button_pressed": "Port %1 of Button is pressed? %2",
        "Krypton0_turnon_led": "Port %1 of LED Turn %2 %3",
        "albert_boolean": "%1?",
        "albert_play_note": "play note %1 %2 %3",
        "albertai_value": "%1",
        "albertai_hand_found": "hand found?",
        "albertai_touch_state": "%1 touch sensor %2 ?",
        "albertai_is_oid": "oid %1?",
        "albertai_boolean": "%1?",
        "albertai_move_forward_unit": "move forward %1 %2 %3",
        "albertai_move_backward_unit": "move backward %1 %2 %3",
        "albertai_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "albertai_pivot_around_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
        "albertai_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "albertai_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "albertai_change_wheel_by": "change %1 wheel by %2 %3",
        "albertai_set_wheel_to": "set %1 wheel to %2 %3",
        "albertai_stop": "stop %1",
        "albertai_move_to_x_y_on_board": "move %1 to x: %2 y: %3 on board %4",
        "albertai_set_orientation_on_board": "turn towards %1 degrees on board %2",
        "albertai_set_eye_to": "set %1 eye to %2 %3",
        "albertai_pick_eye": "set %1 eye to %2 %3",
        "albertai_change_eye_by_rgb": "change %1 eye by r: %2 g: %3 b: %4 %5",
        "albertai_set_eye_to_rgb": "set %1 eye to r: %2 g: %3 b: %4 %5",
        "albertai_clear_eye": "clear %1 eye %2",
        "albertai_play_sound_times": "play sound %1 %2 times %3",
        "albertai_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "albertai_change_buzzer_by": "change buzzer by %1 %2",
        "albertai_set_buzzer_to": "set buzzer to %1 %2",
        "albertai_clear_sound": "clear sound %1",
        "albertai_play_note": "play note %1 %2 %3",
        "albertai_play_note_for": "play note %1 %2 for %3 beats %4",
        "albertai_rest_for": "rest for %1 beats %2",
        "albertai_change_tempo_by": "change tempo by %1 %2",
        "albertai_set_tempo_to": "set tempo to %1 bpm %2",
        "ALTINO_analogValue": "altino lite %1 sensor value",
        "ALTINO_stopAll": "Stop %1°%2",
        "ALTINO_dot_display": "Display %1 %2",
        "ALTINO_dot_display_line": "Display %1 %2 %3 %4 %5 %6 %7 %8 %9 %10",
        "ALTINO_dot_display_hex": "Display %1 %2 %3 %4 %5 %6 %7 %8 %9",
        "ALTINO_dot_display_matrix_on": "Display On X:%1 Y:%2 %3",
        "ALTINO_dot_display_matrix_off": "Display Off X:%1 Y:%2 %3",
        "ALTINO_light": "Light %1 %2 %3",
        "ALTINO_light_hex": "Light %1 %2",
        "ALTINO_sound_hex": "Sound %1 %2",
        "ALTINO_rear_wheel": "Go L:%1 R:%2%3",
        "ALTINO_sound": "Sound %1 %2 %3",
        "ALTINO_steering_hex": "Steering %1%2",
        "ALTINO_steering": "Steering %1°%2",
        "arduino_cake_get_analog_value": "Analog %1 Sensor value",
        "arduino_cake_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "arduino_cake_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "arduino_cake_toggle_led": "Digital %1 Pin %2 %3",
        "arduino_cake_digital_pwm": "Digital %1 Pin %2 %3",
        "arduino_cake_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "arduino_cake_set_servo": "Set servo pin %1 angle as %2 %3",
        "arduino_cake_get_digital": "Digital %1 Sensor value",
        "arduino_nano_get_analog_value": "Analog %1 Sensor value",
        "arduino_nano_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "arduino_nano_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "arduino_nano_toggle_led": "Digital %1 Pin %2 %3",
        "arduino_nano_digital_pwm": "Digital %1 Pin %2 %3",
        "arduino_nano_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "arduino_nano_set_servo": "Set servo pin %1 angle as %2 %3",
        "arduino_nano_get_digital": "Digital %1 Sensor value",
        "Mechatronics_4D_get_analog_value": "Analog %1 Sensor value",
        "Mechatronics_4D_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "Mechatronics_4D_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "Mechatronics_4D_get_digital": "Digital %1 Sensor value",
        "Mechatronics_4D_toggle_led": "Digital %1 Pin %2 %3",
        "Mechatronics_4D_digital_pwm": "Digital %1 Pin %2 %3",
        "Mechatronics_4D_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "Mechatronics_4D_on_motor": "Turn on %1 %2 DC motor %3wise %4",
        "Mechatronics_4D_controll_motor_speed1": "Turn on %1 rear DC motor %2 at the speed of %3 %4",
        "Mechatronics_4D_controll_motor_speed2": "Turn on %1 rear DC motor %2 at the speed of %3 %4",
        "Mechatronics_4D_off_motor": "Turn off %1 $2 DC motor %3",
        "Mechatronics_4D_set_servo": "Set %1 servo motor angle as %2 %3",
        "armz_run_action": "%1 : Number %2 Run %3",
        "armz_block_coding_MF": "Move to forward %1sec %2",
        "armz_block_coding_MB": "Move to backward %1sec %2",
        "armz_block_coding_T": "Turn %1 %2",
        "armz_block_coding_LO": "LED %1 Color Turn on 1sec %2",
        "armz_block_coding_LB": "LED %1 Color Blink %2",
        "armz_block_coding_LR": "LED Rainbow Color Turn on 3sec %1",
        "armz_block_coding_E": "Eexpression of %1 Emotion %2",
        "asomebot_toggle_led": "Blue LED %1 %2",
        "asomebot_get_ultrasonic_value": "distance",
        "asomebot_buzzer_open": "Buzzer on %1",
        "asomebot_buzzer_note": "Play note %1 in %2 sec %3",
        "asomebot_buzzer_tone": "Mkae sound on %1 Hz in %2 sec %3",
        "asomebot_buzzer_close": "Buzzer off %1",
        "asomebot_align": "Set align %1 %2 %3 %4 %5",
        "asomebot_home": "Attention %1",
        "asomebot_angle": "Set angle of motor %1 to %2 degree in %3 sec %4",
        "asomebot_forward": "Moving forward %1",
        "asomebot_forward2": "Moving forward %1 %2 %3",
        "asomebot_backward": "Moving backward %1",
        "asomebot_backward2": "Moving backward %1 %2 %3",
        "asomebot_turn_left": "Turn left %1",
        "asomebot_turn_left2": "Turn left %1 %2",
        "asomebot_turn_right": "Turn right %1",
        "asomebot_turn_right2": "Turn right %1 %2",
        "asomebot_mouse": "Greeting %1 %2",
        "asomebot_flap": "Flap %1",
        "asomebot_warigari": "Twist %1",
        "asomebot_tock": "Tock %1 %2",
        "asomebot_tick_tock": "Tick tock %1",
        "asomebot_wiggle": "Wiggle %1",
        "asomebot_swing2": "Swing %1",
        "asomebot_ballet": "Ballet %1",
        "asomebot_swing": "Swing %1 %2",
        "asomebot_yaho": "Yaho %1",
        "asomebot_moonwalk": "Moonwalk %1",
        "internet_connect": "Connect to internet - %1 %2 %3",
        "internet_open_ap": "Change to access point mode - %1 %2",
        "internet_open_udp": "Open UDP socket on post %1 %2",
        "internet_udp_msg": "UDP message",
        "internet_send_msg": "Send message %2 to %1 %3",
        "bingles_analogValue": "%1",
        "bingles_digitalOutput": "Digital %1 PIN, Output Value %2 %3",
        "bingles_servo": "Servo Motor %1 , Angle %2 %3",
        "bingles_twoWheel": "Wheel(DC) Motor %1 , Speed %2 %3",
        "bingles_lcd": "LCD Line %1 , Text %2 %3",
        "bingles_remotecontrol": "Remote control",
        "bingles_rgb": "RGB LED Color from Red %1 Green %2 Blue %3",
        "bingles_rgb_picker": "RGB LED Color from %1",
        "bingles_buzzer": "Play Tone %1 %2 for %3sec of Melody Playing",
        "bingles_oled": "Set Facial Icon %1",
        "bingles_motorgo": "Move Robot %1 %2 sec",
        "blacksmith_toggle_on": "on",
        "blacksmith_toggle_off": "off",
        "blacksmith_lcd_first_line": "first",
        "blacksmith_lcd_seconds_line": "seconds",
        "blacksmith_dcmotor_direction_forward": "forward",
        "blacksmith_dcmotor_direction_reverse": "reverse",
        "blacksmith_btData_select_number": "number",
        "blacksmith_btData_select_character": "character",
        "blacksmith_get_digital": "Digital %1 pin sensor value",
        "blacksmith_set_digital_rgbled": "Digital %1 pin RGB LED Red %2 Green %3 Blue %4 %5",
        "blacksmith_set_digital_dcmotor": "DC Motor %1 pin direction %2 %3 pin speed %4 %5",
        "blacksmith_module_digital_lcd": "LCD %1 line %2 appear %3",
        "blacksmith_module_digital_bluetooth": "Bluetooth TX 3 Pin %1 data send %2",
        "blacksmith_module_digital_oled": "OLED X codinate %1 Y coodinate %2 appear %3 %4",
        "brown_touching_color": "touching %1 ?",
        "brown_is_color_pattern": "color pattern %1 %2 ?",
        "brown_button_state": "button %1 ?",
        "brown_boolean": "%1?",
        "brown_value": "%1",
        "brown_move_forward_unit": "move forward %1 %2 %3",
        "brown_move_backward_unit": "move backward %1 %2 %3",
        "brown_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "brown_pivot_around_wheel_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
        "brown_turn_unit_with_radius_in_direction": "turn %1 %2 %3 with radius %4 cm in %5 direction %6",
        "brown_change_wheels_by_left_right": "change wheels by left: %1 right: %2 %3",
        "brown_set_wheels_to_left_right": "set wheels to left: %1 right: %2 %3",
        "brown_change_wheel_by": "change %1 wheel by %2 %3",
        "brown_set_wheel_to": "set %1 wheel to %2 %3",
        "brown_follow_line": "follow line %1",
        "brown_follow_line_until": "follow line until %1 %2",
        "brown_cross_intersection": "cross intersection %1",
        "brown_turn_at_intersection": "turn %1 at intersection %2",
        "brown_jump_line": "jump to %1 line %2",
        "brown_set_following_speed_to": "set following speed to %1 %2",
        "brown_stop": "stop %1",
        "brown_set_led_to": "set led to %1 %2",
        "brown_pick_led": "set led to %1 %2",
        "brown_change_led_by_rgb": "change led by r: %1 g: %2 b: %3 %4",
        "brown_set_led_to_rgb": "set led to r: %1 g: %2 b: %3 %4",
        "brown_clear_led": "clear led %1",
        "brown_play_sound_times": "play sound %1 %2 times %3",
        "brown_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "brown_change_buzzer_by": "change buzzer by %1 %2",
        "brown_set_buzzer_to": "set buzzer to %1 %2",
        "brown_clear_sound": "clear sound %1",
        "brown_play_note": "play note %1 %2 %3",
        "brown_play_note_for_beats": "play note %1 %2 for %3 beats %4",
        "brown_rest_for_beats": "rest for %1 beats %2",
        "brown_change_tempo_by": "change tempo by %1 %2",
        "brown_set_tempo_to": "set tempo to %1 bpm %2",
        "byrobot_controller_3_4_controller_buzzer_hz": "play Buzzer %1 Hz sound %2",
        "byrobot_controller_3_4_controller_buzzer_hz_delay": "play Buzzer %1 Hz sound for %2 second %3",
        "byrobot_controller_3_4_controller_buzzer_hz_reserve": "reserve to play Buzzer %1 Hz for %2 second %3",
        "byrobot_controller_3_4_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_controller_3_4_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_controller_3_4_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_controller_3_4_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_controller_3_4_controller_if_button_press": "when press %1",
        "byrobot_controller_3_4_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_controller_3_4_controller_light_color_preset": "Controller LED %1 %2 %3",
        "byrobot_controller_3_4_controller_light_manual_single_input": "Controller LED %1 Lightness %2 %3",
        "byrobot_controller_3_4_controller_light_manual_single_off": "Controller LED Off %1",
        "byrobot_controller_3_4_controller_value_button": "%1",
        "byrobot_controller_3_4_controller_value_joystick": "%1",
        "byrobot_controller_3_4_controller_vibrator_off": "Vibrator Off %1",
        "byrobot_controller_3_4_controller_vibrator_delay": "Vibrator %1 sec On, %2 sec Off for %3 sec run %4",
        "byrobot_controller_3_4_controller_vibrator_on_delay": "Vibrator %1 sec on %2",
        "byrobot_controller_3_4_controller_vibrator_on_reserve": "Vibrator %1 sec reserve %2",
        "byrobot_controller_3_4_controller_vibrator_reserve": "Vibrator %1 sec On, %2 sec Off for %3 sec reserve %4",
        "byrobot_controller_4_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_controller_4_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_controller_4_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_controller_4_buzzer_off": "turn off the buzzer %1",
        "byrobot_controller_4_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_controller_4_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_controller_4_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_controller_4_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_controller_4_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_controller_4_display_draw_circle": "draw a circle x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_controller_4_display_draw_line": "draw a line x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_controller_4_display_draw_point": "draw a point x:%1, y:%2, color:%3 %4",
        "byrobot_controller_4_display_draw_rect": "draw a rectangle x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_controller_4_display_draw_string": "draw a string x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_controller_4_display_draw_string_align": "draw aligned string x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_controller_4_if_button_press": "when press %1",
        "byrobot_controller_4_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_controller_4_controller_light_color_input": "decide the color values of controller LED R %1, G %2, B %3 %4 %5",
        "byrobot_controller_4_controller_light_color_select": "RGB combination examples of controller LED %1 %2 %3",
        "byrobot_controller_4_controller_light_color_preset": "change the state of %1 controller LED to %2 %3",
        "byrobot_controller_4_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_controller_4_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_controller_4_value_button": "%1",
        "byrobot_controller_4_value_joystick": "%1",
        "byrobot_controller_4_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_controller_4_vibrator_off": "turn off the vibrator %1",
        "byrobot_controller_4_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_controller_4_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_controller_4_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_drone_3_10_controller_buzzer_hz": "play Buzzer %1 Hz sound %2",
        "byrobot_drone_3_10_controller_buzzer_hz_delay": "play Buzzer %1 Hz sound for %2 second %3",
        "byrobot_drone_3_10_controller_buzzer_hz_reserve": "reserve to play Buzzer %1 Hz for %2 second %3",
        "byrobot_drone_3_10_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_drone_3_10_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_drone_3_10_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_drone_3_10_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_drone_3_10_controller_if_button_press": "when press %1",
        "byrobot_drone_3_10_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_drone_3_10_controller_light_color_preset": "Controller LED %1 %2 %3",
        "byrobot_drone_3_10_controller_light_manual_single_input": "Controller LED %1 Lightness %2 %3",
        "byrobot_drone_3_10_controller_light_manual_single_off": "Controller LED Off %1",
        "byrobot_drone_3_10_controller_value_button": "%1",
        "byrobot_drone_3_10_controller_value_joystick": "%1",
        "byrobot_drone_3_10_controller_vibrator_off": "Vibrator Off %1",
        "byrobot_drone_3_10_controller_vibrator_delay": "Vibrator %1 sec On, %2 sec Off for %3 sec run %4",
        "byrobot_drone_3_10_controller_vibrator_on_delay": "Vibrator %1 sec on %2",
        "byrobot_drone_3_10_controller_vibrator_on_reserve": "Vibrator %1 sec reserve %2",
        "byrobot_drone_3_10_controller_vibrator_reserve": "Vibrator %1 sec On, %2 sec Off for %3 sec reserve %4",
        "byrobot_drone_3_10_drone_control_headless": "Headless mode %1 %2",
        "byrobot_drone_3_10_drone_control_drone_landing": "Landing %1",
        "byrobot_drone_3_10_drone_control_drone_reset_heading": "Reset heading %1",
        "byrobot_drone_3_10_drone_control_drone_stop": "Stop flight %1",
        "byrobot_drone_3_10_drone_control_drone_takeoff": "Landing %1",
        "byrobot_drone_3_10_drone_control_quad": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% %5",
        "byrobot_drone_3_10_drone_control_quad_delay": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% for %5sec %6",
        "byrobot_drone_3_10_drone_control_quad_one": "Set %1 %2% %3",
        "byrobot_drone_3_10_drone_control_quad_one_delay": "Set %1 %2% %3 sec %4",
        "byrobot_drone_3_10_drone_light_manual_single_off": "Drone LED Off %1",
        "byrobot_drone_3_10_drone_light_manual_single_input": "Drone LED %1 lightness %2 %3",
        "byrobot_drone_3_10_drone_light_color_input": "Drone LED R %1, G %2, B %3 %4 %5 %6",
        "byrobot_drone_3_10_drone_light_color_select": "Drone LED %1 %2 %3 %4",
        "byrobot_drone_3_10_drone_light_color_preset": "Drone LED %1 %2 %3",
        "byrobot_drone_3_10_drone_motor_stop": "Motor stop %1",
        "byrobot_drone_3_10_drone_motorsingle": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_3_10_drone_motorsingle_input": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_3_10_drone_battle_ir_message": "transfer %1 to IR transmitter %2",
        "byrobot_drone_3_10_drone_value_attitude": "%1",
        "byrobot_drone_3_10_drone_value_motion": "%1",
        "byrobot_drone_3_10_drone_value_sensor": "%1",
        "byrobot_drone_3_10_drone_value_ir": "%1",
        "byrobot_drone_3_10_drone_value_etc": "%1",
        "byrobot_drone_4_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_drone_4_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_drone_4_controller_buzzer_hz_reserve": "reserve to play %1 Hz for %2 second %3",
        "byrobot_drone_4_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_drone_4_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_drone_4_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_drone_4_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_drone_4_controller_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_drone_4_controller_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_drone_4_controller_display_draw_circle": "draw a circle x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_drone_4_controller_display_draw_line": "draw a line x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_drone_4_controller_display_draw_point": "draw a point x:%1, y:%2, color:%3 %4",
        "byrobot_drone_4_controller_display_draw_rect": "draw a rectangle x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_drone_4_controller_display_draw_string": "draw a string x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_drone_4_controller_display_draw_string_align": "draw aligned string x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_drone_4_controller_if_button_press": "when press %1",
        "byrobot_drone_4_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_drone_4_controller_light_color_input": "Controller LED R %1, G %2, B %3 %4 %5 %6",
        "byrobot_drone_4_controller_light_color_select": "Controller LED %1 %2 %3 %4",
        "byrobot_drone_4_controller_light_color_preset": "Controller LED %1 %2 %3",
        "byrobot_drone_4_controller_light_manual_single_input": "Controller LED %1 Lightness %2 %3",
        "byrobot_drone_4_controller_light_manual_single_off": "Controller LED Off %1",
        "byrobot_drone_4_controller_value_button": "%1",
        "byrobot_drone_4_controller_value_joystick": "%1",
        "byrobot_drone_4_controller_vibrator_off": "Vibrator Off %1",
        "byrobot_drone_4_controller_vibrator_delay": "Vibrator %1 sec On, %2 sec Off for %3 sec run %4",
        "byrobot_drone_4_controller_vibrator_on_delay": "Vibrator %1 sec on %2",
        "byrobot_drone_4_controller_vibrator_on_reserve": "Vibrator %1 sec reserve %2",
        "byrobot_drone_4_controller_vibrator_reserve": "Vibrator %1 sec On, %2 sec Off for %3 sec reserve %4",
        "byrobot_drone_4_drone_control_headless": "Headless mode %1 %2",
        "byrobot_drone_4_drone_control_drone_landing": "Landing %1",
        "byrobot_drone_4_drone_control_drone_reset_heading": "Reset heading %1",
        "byrobot_drone_4_drone_control_drone_stop": "Stop flight %1",
        "byrobot_drone_4_drone_control_drone_takeoff": "Landing %1",
        "byrobot_drone_4_drone_control_quad": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% %5",
        "byrobot_drone_4_drone_control_quad_delay": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% for %5sec %6",
        "byrobot_drone_4_drone_control_quad_one": "Set %1 %2% %3",
        "byrobot_drone_4_drone_control_quad_one_delay": "Set %1 %2% %3 sec %4",
        "byrobot_drone_4_drone_control_position_one": "Move %2 meter(s) %1 to %3 m/s %4",
        "byrobot_drone_4_drone_control_position_turn": "Rotate %2 degree(s) %1 to %3 deg/s %4",
        "byrobot_drone_4_drone_control_position_location": "Move %2 meter(s) %1, %4 meter(s) $3, %6 meter(s) %5 to %7 m/s %8",
        "byrobot_drone_4_drone_control_position_location_turn": "Move %2 meter(s) %1, %4 meter(s) $3, %6 meter(s) %5 to %7 m/s, Rotate %9 degree(s) %8 to %10 deg/s %11",
        "byrobot_drone_4_drone_light_manual_single_off": "Drone LED Off %1",
        "byrobot_drone_4_drone_light_manual_single_input": "Drone LED %1 lightness %2 %3",
        "byrobot_drone_4_drone_light_color_input": "Drone LED R %1, G %2, B %3 %4 %5 %6",
        "byrobot_drone_4_drone_light_color_select": "Drone LED %1 %2 %3 %4",
        "byrobot_drone_4_drone_light_color_preset": "Drone LED %1 %2 %3",
        "byrobot_drone_4_drone_motor_stop": "Motor stop %1",
        "byrobot_drone_4_drone_motorsingle": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_4_drone_motorsingle_input": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_4_drone_value_attitude": "%1",
        "byrobot_drone_4_drone_value_motion": "%1",
        "byrobot_drone_4_drone_value_position": "%1",
        "byrobot_drone_4_drone_value_sensor": "%1",
        "byrobot_drone_4_drone_value_etc": "%1",
        "byrobot_drone_8_controller_buzzer_hz": "%1 play Buzzer %2 Hz sound %2",
        "byrobot_drone_8_controller_buzzer_hz_delay": "%1 play Buzzer %2 Hz sound for %3 second %4",
        "byrobot_drone_8_controller_buzzer_hz_reserve": "%1 reserve to play Buzzer %2 Hz for %3 second %4",
        "byrobot_drone_8_controller_buzzer_off": "%1 turn off the buzzer %2",
        "byrobot_drone_8_controller_buzzer_scale": "%1 play %2 octave %3 %4",
        "byrobot_drone_8_controller_buzzer_scale_delay": "%1 play %2 octave %3 for %4 second %5",
        "byrobot_drone_8_controller_buzzer_scale_reserve": "%1 reserve to play %2 octave %3 for %4 second %5",
        "byrobot_drone_8_controller_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_drone_8_controller_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_drone_8_controller_display_draw_circle": "draw a circle x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_drone_8_controller_display_draw_line": "draw a line x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_drone_8_controller_display_draw_point": "draw a point in controller display  x:%1, y:%2, color:%3 %4",
        "byrobot_drone_8_controller_display_draw_rect": "draw a rectangle in controller display x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_drone_8_controller_display_draw_string": "draw a string in controller display x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_drone_8_controller_display_draw_string_align": "draw aligned string in controller display x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_drone_8_controller_if_button_press": "when press %1",
        "byrobot_drone_8_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_drone_8_controller_light_color_input": "Controller LED R %1, G %2, B %3 %4 %5 %6",
        "byrobot_drone_8_controller_light_color_select": "Controller LED Preset %1 %2 %3 %4",
        "byrobot_drone_8_controller_light_color_preset": "Controller LED %1 %2 %3",
        "byrobot_drone_8_controller_light_manual_single_input": "Controller LED %1 Lightness %2 %3",
        "byrobot_drone_8_controller_light_manual_single_off": "Controller LED Off %1",
        "byrobot_drone_8_controller_value_button": "%1",
        "byrobot_drone_8_controller_value_joystick": "%1",
        "byrobot_drone_8_controller_vibrator_off": "Vibrator Off %1",
        "byrobot_drone_8_controller_vibrator_delay": "Vibrator %1 sec On, %2 sec Off for %3 sec run %4",
        "byrobot_drone_8_controller_vibrator_on_delay": "Vibrator %1 sec on %2",
        "byrobot_drone_8_controller_vibrator_on_reserve": "Vibrator %1 sec reserve %2",
        "byrobot_drone_8_controller_vibrator_reserve": "Vibrator %1 sec On, %2 sec Off for %3 sec reserve %4",
        "byrobot_drone_8_drone_control_headless": "Headless mode %1 %2",
        "byrobot_drone_8_drone_control_drone_landing": "Landing %1",
        "byrobot_drone_8_drone_control_drone_reset_heading": "Reset heading %1",
        "byrobot_drone_8_drone_control_drone_stop": "Stop flight %1",
        "byrobot_drone_8_drone_control_drone_takeoff": "Landing %1",
        "byrobot_drone_8_drone_control_quad": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% %5",
        "byrobot_drone_8_drone_control_quad_delay": "Set Roll %1%, Pitch %2%, Yaw %3%, Throttle %4% for %5sec %6",
        "byrobot_drone_8_drone_control_quad_one": "Set %1 %2% %3",
        "byrobot_drone_8_drone_control_quad_one_delay": "Set %1 %2% %3 sec %4",
        "byrobot_drone_8_drone_control_position_one": "Move %2 meter(s) %1 to %3 m/s %4",
        "byrobot_drone_8_drone_control_position_turn": "Rotate %2 degree(s) %1 to %3 deg/s %4",
        "byrobot_drone_8_drone_control_position_location": "Move %2 meter(s) %1, %4 meter(s) $3, %6 meter(s) %5 to %7 m/s %8",
        "byrobot_drone_8_drone_control_position_location_turn": "Move %2 meter(s) %1, %4 meter(s) $3, %6 meter(s) %5 to %7 m/s, Rotate %9 degree(s) %8 to %10 deg/s %11",
        "byrobot_drone_8_drone_light_manual_single_off": "Drone LED Off %1",
        "byrobot_drone_8_drone_light_manual_single_input": "Drone LED %1 lightness %2 %3",
        "byrobot_drone_8_drone_light_color_input": "Drone LED R %1, G %2, B %3 %4 %5 %6",
        "byrobot_drone_8_drone_light_color_select": "Drone LED Preset %1 %2 %3 %4",
        "byrobot_drone_8_drone_light_color_preset": "Drone LED %1 %2 %3",
        "byrobot_drone_8_drone_motor_stop": "Motor stop %1",
        "byrobot_drone_8_drone_motorsingle": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_8_drone_motorsingle_input": "No. %1 Motor rotate for %2 %3",
        "byrobot_drone_8_drone_value_attitude": "%1",
        "byrobot_drone_8_drone_value_motion": "%1",
        "byrobot_drone_8_drone_value_position": "%1",
        "byrobot_drone_8_drone_value_sensor": "%1",
        "byrobot_drone_8_drone_value_card": "%1",
        "byrobot_drone_8_drone_value_etc": "%1",
        "byrobot_dronefighter_controller_controller_value_button": "%1",
        "byrobot_dronefighter_controller_controller_value_joystick": "%1",
        "byrobot_dronefighter_controller_controller_if_button_press": "when press %1",
        "byrobot_dronefighter_controller_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_dronefighter_controller_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_dronefighter_controller_controller_light_manual_single": "change the state of %1 controller LED to %2 %3",
        "byrobot_dronefighter_controller_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_dronefighter_controller_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_dronefighter_controller_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_dronefighter_controller_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_controller_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_controller_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_dronefighter_controller_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_controller_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_controller_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_dronefighter_controller_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_controller_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_controller_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_dronefighter_controller_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_dronefighter_controller_controller_userinterface_preset": "controller setup mode - select controller user interface preset %1 %2",
        "byrobot_dronefighter_controller_controller_userinterface": "controller setup mode - when %1, run %2 %3",
        "byrobot_dronefighter_drive_drone_value_attitude": "%1",
        "byrobot_dronefighter_drive_drone_value_etc": "%1",
        "byrobot_dronefighter_drive_controller_value_button": "%1",
        "byrobot_dronefighter_drive_controller_value_joystick": "%1",
        "byrobot_dronefighter_drive_controller_if_button_press": "when press %1",
        "byrobot_dronefighter_drive_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_dronefighter_drive_drone_control_car_stop": "stop %1",
        "byrobot_dronefighter_drive_drone_control_double_one": "set %1 to %2 %3",
        "byrobot_dronefighter_drive_drone_control_double_one_delay": "set %1 to %2 and run for %3 second %4",
        "byrobot_dronefighter_drive_drone_control_double": "set wheel to %1, forward to %2 %3",
        "byrobot_dronefighter_drive_drone_motor_stop": "turn off all motors %1",
        "byrobot_dronefighter_drive_drone_motorsingle": "set rotate for number %1 motor to %2 %3",
        "byrobot_dronefighter_drive_drone_motorsingle_input": "set rotate for number %1 motor to %2 %3",
        "byrobot_dronefighter_drive_drone_irmessage": "send %1 to the IR transmitter %2",
        "byrobot_dronefighter_drive_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_dronefighter_drive_controller_light_manual_single": "change the state of %1 controller LED to %2 %3",
        "byrobot_dronefighter_drive_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_dronefighter_drive_drone_light_manual_single_off": "turn off all drone LEDs %1",
        "byrobot_dronefighter_drive_drone_light_manual_single": "change the state of %1 drone LED to %2 %3",
        "byrobot_dronefighter_drive_drone_light_manual_single_input": "change the brightness of %1 drone LED to %2 %3",
        "byrobot_dronefighter_drive_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_dronefighter_drive_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_dronefighter_drive_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_drive_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_drive_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_dronefighter_drive_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_drive_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_drive_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_dronefighter_drive_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_drive_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_drive_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_dronefighter_drive_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_dronefighter_flight_drone_value_attitude": "%1",
        "byrobot_dronefighter_flight_drone_value_etc": "%1",
        "byrobot_dronefighter_flight_controller_value_button": "%1",
        "byrobot_dronefighter_flight_controller_value_joystick": "%1",
        "byrobot_dronefighter_flight_controller_if_button_press": "when press %1",
        "byrobot_dronefighter_flight_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_dronefighter_flight_drone_control_drone_stop": "stop %1",
        "byrobot_dronefighter_flight_drone_control_coordinate": "set coordinate reference to %1 %2",
        "byrobot_dronefighter_flight_drone_control_drone_reset_heading": "reset heading reference %1",
        "byrobot_dronefighter_flight_drone_control_quad_one": "set %1 to %2 %3",
        "byrobot_dronefighter_flight_drone_control_quad_one_delay": "set %1 to %2 and run for %3 second %4",
        "byrobot_dronefighter_flight_drone_control_quad": "set roll to %1, pitch to %2, yaw to %3, throttle to %4 %5",
        "byrobot_dronefighter_flight_drone_motor_stop": "turn off all motors %1",
        "byrobot_dronefighter_flight_drone_motorsingle": "set rotate for number %1 motor to %2 %3",
        "byrobot_dronefighter_flight_drone_motorsingle_input": "set rotate for number %1 motor to %2 %3",
        "byrobot_dronefighter_flight_drone_irmessage": "send %1 to the IR transmitter %2",
        "byrobot_dronefighter_flight_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_dronefighter_flight_controller_light_manual_single": "change the state of %1 controller LED to %2 %3",
        "byrobot_dronefighter_flight_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_dronefighter_flight_drone_light_manual_single_off": "turn off all drone LEDs %1",
        "byrobot_dronefighter_flight_drone_light_manual_single": "change the state of %1 drone LED to %2 %3",
        "byrobot_dronefighter_flight_drone_light_manual_single_input": "change the brightness of %1 drone LED to %2 %3",
        "byrobot_dronefighter_flight_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_dronefighter_flight_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_dronefighter_flight_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_flight_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_dronefighter_flight_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_dronefighter_flight_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_flight_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_dronefighter_flight_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_dronefighter_flight_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_flight_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_dronefighter_flight_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_dronefighter_flight_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_controller_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_petrone_v2_controller_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_controller_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_controller_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_petrone_v2_controller_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_petrone_v2_controller_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_controller_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_controller_controller_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_petrone_v2_controller_controller_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_petrone_v2_controller_controller_display_draw_circle": "draw a circle in controller display x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_petrone_v2_controller_controller_display_draw_line": "draw a line in controller display x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_petrone_v2_controller_controller_display_draw_point": "draw a point in controller display  x:%1, y:%2, color:%3 %4",
        "byrobot_petrone_v2_controller_controller_display_draw_rect": "draw a rectangle in controller display x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_petrone_v2_controller_controller_display_draw_string": "draw a string in controller display x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_petrone_v2_controller_controller_display_draw_string_align": "draw aligned string in controller display x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_petrone_v2_controller_controller_display_invert": "invert controller display x:%1, y:%2, width:%3, height:%4 %5",
        "byrobot_petrone_v2_controller_controller_if_button_press": "when press %1",
        "byrobot_petrone_v2_controller_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_petrone_v2_controller_controller_light_color_input": "decide the color values of controller LED R %1, G %2, B %3 %4 %5",
        "byrobot_petrone_v2_controller_controller_light_color_select": "RGB combination examples of controller LED %1 %2 %3",
        "byrobot_petrone_v2_controller_controller_light_color_preset": "change the state of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_controller_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_controller_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_petrone_v2_controller_controller_value_button": "%1",
        "byrobot_petrone_v2_controller_controller_value_joystick": "%1",
        "byrobot_petrone_v2_controller_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_controller_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_petrone_v2_controller_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_controller_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_controller_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_drive_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_petrone_v2_drive_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_drive_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_drive_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_petrone_v2_drive_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_petrone_v2_drive_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_drive_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_drive_controller_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_petrone_v2_drive_controller_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_petrone_v2_drive_controller_display_draw_circle": "draw a circle in controller display x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_petrone_v2_drive_controller_display_draw_line": "draw a line in controller display x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_petrone_v2_drive_controller_display_draw_point": "draw a point in controller display  x:%1, y:%2, color:%3 %4",
        "byrobot_petrone_v2_drive_controller_display_draw_rect": "draw a rectangle in controller display x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_petrone_v2_drive_controller_display_draw_string": "draw a string in controller display x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_petrone_v2_drive_controller_display_draw_string_align": "draw aligned string in controller display x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_petrone_v2_drive_controller_display_invert": "invert controller display x:%1, y:%2, width:%3, height:%4 %5",
        "byrobot_petrone_v2_drive_controller_if_button_press": "when press %1",
        "byrobot_petrone_v2_drive_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_petrone_v2_drive_controller_light_color_rgb_input": "decide the color values of controller LED R %1, G %2, B %3 %4 %5",
        "byrobot_petrone_v2_drive_controller_light_color_rgb_select": "RGB combination examples of controller LED %1 %2 %3",
        "byrobot_petrone_v2_drive_controller_light_color_preset": "change the state of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_drive_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_drive_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_petrone_v2_drive_controller_value_button": "%1",
        "byrobot_petrone_v2_drive_controller_value_joystick": "%1",
        "byrobot_petrone_v2_drive_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_drive_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_petrone_v2_drive_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_drive_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_drive_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_drive_drone_command_mode_vehicle_car": "Vehicle mode select %1 %2",
        "byrobot_petrone_v2_drive_drone_control_car_stop": "stop %1",
        "byrobot_petrone_v2_drive_drone_control_double": "set wheel to %1, forward/backward to %2 %3",
        "byrobot_petrone_v2_drive_drone_control_double_delay": "set wheel to %1, forward/backward to %2 and run for %3 second %4",
        "byrobot_petrone_v2_drive_drone_control_double_one": "set %1 to %2 %3",
        "byrobot_petrone_v2_drive_drone_control_double_one_delay": "set %1 to %2 and run for %3 second %4",
        "byrobot_petrone_v2_drive_drone_irmessage": "send %1 to the IR transmitter %2",
        "byrobot_petrone_v2_drive_drone_light_color_rgb_input": "decide the color values of car %1 LED R %2, G %3, B %4 %5 %6",
        "byrobot_petrone_v2_drive_drone_light_color_rgb_select": "RGB combination examples of car %1 LED %2 %3 %4",
        "byrobot_petrone_v2_drive_drone_light_color_preset": "change the state of %1 car LED to %2 %3",
        "byrobot_petrone_v2_drive_drone_light_manual_single_input": "change the brightness of %1 car LED to %2 %3",
        "byrobot_petrone_v2_drive_drone_light_manual_single_off": "turn off all car LEDs %1",
        "byrobot_petrone_v2_drive_drone_motor_stop": "turn off all motors %1",
        "byrobot_petrone_v2_drive_drone_motorsingle": "set rotate for number %1 motor to %2 %3",
        "byrobot_petrone_v2_drive_drone_motorsingle_input": "set rotate for number %1 motor to %2 %3",
        "byrobot_petrone_v2_drive_drone_motorsingle_rotation": "set rotate for number %1 motor to %2 %3 %4",
        "byrobot_petrone_v2_drive_drone_value_attitude": "%1",
        "byrobot_petrone_v2_drive_drone_value_etc": "%1",
        "byrobot_petrone_v2_drive_drone_value_imu": "%1",
        "byrobot_petrone_v2_drive_drone_value_sensor": "%1",
        "byrobot_petrone_v2_flight_controller_buzzer_hz": "play %1 Hz sound %2",
        "byrobot_petrone_v2_flight_controller_buzzer_hz_delay": "play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_flight_controller_buzzer_hz_reserve": "reserve to play %1 Hz sound for %2 second %3",
        "byrobot_petrone_v2_flight_controller_buzzer_off": "turn off the buzzer %1",
        "byrobot_petrone_v2_flight_controller_buzzer_scale": "play %1 octave %2 %3",
        "byrobot_petrone_v2_flight_controller_buzzer_scale_delay": "play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_flight_controller_buzzer_scale_reserve": "reserve to play %1 octave %2 for %3 second %4",
        "byrobot_petrone_v2_flight_controller_display_clear": "clear controller display x:%1, y:%2, width:%3, height:%4, color:%5 %6",
        "byrobot_petrone_v2_flight_controller_display_clear_all": "clear controller display with %1 color %2",
        "byrobot_petrone_v2_flight_controller_display_draw_circle": "draw a circle in controller display x:%1, y:%2, radius:%3, %4, %5, %6",
        "byrobot_petrone_v2_flight_controller_display_draw_line": "draw a line in controller display x1:%1, y1:%2, x2:%3, y2:%4, %5, %6 %7",
        "byrobot_petrone_v2_flight_controller_display_draw_point": "draw a point in controller display  x:%1, y:%2, color:%3 %4",
        "byrobot_petrone_v2_flight_controller_display_draw_rect": "draw a rectangle in controller display x:%1, y:%2, width:%3, height:%4, %5, %6, %7 %8",
        "byrobot_petrone_v2_flight_controller_display_draw_string": "draw a string in controller display x:%1, y:%2, font size:%3, %4, input:%5, %6",
        "byrobot_petrone_v2_flight_controller_display_draw_string_align": "draw aligned string in controller display x1:%1, x2:%2, y:%3, align:%4, font size:%5, %6, input:%7, %8",
        "byrobot_petrone_v2_flight_controller_display_invert": "invert controller display x:%1, y:%2, width:%3, height:%4 %5",
        "byrobot_petrone_v2_flight_controller_if_button_press": "when press %1",
        "byrobot_petrone_v2_flight_controller_if_joystick_direction": "when %1 stick move to %2",
        "byrobot_petrone_v2_flight_controller_light_color_input": "decide the color values of controller LED R %1, G %2, B %3 %4 %5",
        "byrobot_petrone_v2_flight_controller_light_color_select": "RGB combination examples of controller LED %1 %2 %3",
        "byrobot_petrone_v2_flight_controller_light_color_preset": "change the state of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_flight_controller_light_manual_single_input": "change the brightness of %1 controller LED to %2 %3",
        "byrobot_petrone_v2_flight_controller_light_manual_single_off": "turn off all controller LEDs %1",
        "byrobot_petrone_v2_flight_controller_value_button": "%1",
        "byrobot_petrone_v2_flight_controller_value_joystick": "%1",
        "byrobot_petrone_v2_flight_controller_vibrator_delay": "vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_flight_controller_vibrator_off": "turn off the vibrator %1",
        "byrobot_petrone_v2_flight_controller_vibrator_on_delay": "turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_flight_controller_vibrator_on_reserve": "reserve turn on the vibrator for %1 second %2",
        "byrobot_petrone_v2_flight_controller_vibrator_reserve": "reserve vibration %1 second on, %2 second off for %3 seconds %4",
        "byrobot_petrone_v2_flight_drone_command_mode_vehicle_drone": "set vehicle mode to %1 %2",
        "byrobot_petrone_v2_flight_drone_control_coordinate": "Headless mode (Absolute mode) %1 %2",
        "byrobot_petrone_v2_flight_drone_control_drone_landing": "landing %1",
        "byrobot_petrone_v2_flight_drone_control_drone_reset_heading": "reset heading reference %1",
        "byrobot_petrone_v2_flight_drone_control_drone_stop": "stop %1",
        "byrobot_petrone_v2_flight_drone_control_drone_takeoff": "take off %1",
        "byrobot_petrone_v2_flight_drone_control_quad": "set roll to %1, pitch to %2, yaw to %3, throttle to %4 %5",
        "byrobot_petrone_v2_flight_drone_control_quad_delay": "set roll to %1, pitch to %2, yaw to %3, throttle to %4 and run for %5 second %6",
        "byrobot_petrone_v2_flight_drone_control_quad_one": "set %1 to %2 %3",
        "byrobot_petrone_v2_flight_drone_control_quad_one_delay": "set %1 to %2 and run for %3 second %4",
        "byrobot_petrone_v2_flight_drone_irmessage": "send %1 to the IR transmitter %2",
        "byrobot_petrone_v2_flight_drone_light_color_input": "decide the color values of drone %1 LED R %2, G %3, B %4 %5 %6",
        "byrobot_petrone_v2_flight_drone_light_color_select": "RGB combination examples of drone %1 LED %2 %3 %4",
        "byrobot_petrone_v2_flight_drone_light_color_preset": "change the state of %1 drone LED to %2 %3",
        "byrobot_petrone_v2_flight_drone_light_manual_single_input": "change the brightness of %1 drone LED to %2 %3",
        "byrobot_petrone_v2_flight_drone_light_manual_single_off": "turn off all drone LEDs %1",
        "byrobot_petrone_v2_flight_drone_motor_stop": "turn off all motors %1",
        "byrobot_petrone_v2_flight_drone_motorsingle": "set rotate for number %1 motor to %2 %3",
        "byrobot_petrone_v2_flight_drone_motorsingle_input": "set rotate for number %1 motor to %2 %3",
        "byrobot_petrone_v2_flight_drone_motorsingle_rotation": "set rotate for number %1 motor to %2 %3 %4",
        "byrobot_petrone_v2_flight_drone_value_attitude": "%1",
        "byrobot_petrone_v2_flight_drone_value_etc": "%1",
        "byrobot_petrone_v2_flight_drone_value_imu": "%1",
        "byrobot_petrone_v2_flight_drone_value_sensor": "%1",
        "cheese_value": "%1",
        "cheese_boolean": "%1?",
        "cheese_play_sound_times": "play sound %1 %2 times %3",
        "cheese_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "cheese_change_buzzer_by": "change buzzer by %1 Hz %2",
        "cheese_set_buzzer_to": "set buzzer to %1 Hz %2",
        "cheese_clear_sound": "clear sound %1",
        "cheese_play_note": "play note %1 %2 %3",
        "cheese_play_note_for": "play note %1 %2 for %3 beats %4",
        "cheese_rest_for": "rest for %1 beats %2",
        "cheese_change_tempo_by": "change tempo by %1 BPM %2",
        "cheese_set_tempo_to": "set tempo to %1 BPM %2",
        "cheese_set_sound_port_to": "set sound output to %1 %2",
        "cheese_set_input_mode_to": "set port %1 to %2 input %3",
        "cheese_set_input_range_to": "set input %1 range %2 - %3 to %4 - %5 %6 decimal point %7",
        "cheese_set_three_input_ranges_to": "set input %1 range %2 - %3 - %4 to %5 - %6 - %7 %8 decimal point %9",
        "cheese_analog_input": "input %1",
        "cheese_digital_input": "input %1 %2 ?",
        "cheese_button_state": "button %1 %2 ?",
        "cheese_set_pulse_mode_to": "set port %1 to %2 input %3",
        "cheese_pulse_input": "pulse detected on port %1 ?",
        "cheese_set_digital_output_to": "set digital output %1 to %2 %3",
        "cheese_change_pwm_output_by": "change pwm output %1 by %2% %3",
        "cheese_set_pwm_output_to": "set pwm output %1 to %2% %3",
        "cheese_change_servo_motor_angle_by": "change servo motor %1 by %2 degrees %3",
        "cheese_set_servo_motor_angle_to": "set servo motor %1 to %2 degrees %3",
        "cheese_turn_off_servo_motor": "turn off servo motor %1 %2",
        "cheese_change_dc_motor_velocity_by": "change dc motor %1 velocity by %2% %3",
        "cheese_set_dc_motor_velocity_to": "set dc motor %1 velocity to %2% %3",
        "cheese_stop_dc_motor": "stop dc motor %1 %2",
        "cheese_rotate_step_motor": "rotate step motor %1 steps with velocity %2 step/sec %3",
        "cheese_change_step_motor_velocity_by": "change step motor velocity by %1 step/sec %2",
        "cheese_set_step_motor_velocity_to": "set step motor velocity to %1 step/sec %2",
        "cheese_stop_off_step_motor": "%1 step motor %2",
        "cheese_set_step_motor_mode_to": "set step motor to %1 mode %2",
        "cheese_step_count": "step count",
        "cheese_set_led_to_color": "set rgb led %1 to %2 %3 %4",
        "cheese_pick_led_to": "set rgb led %1 to %2 %3",
        "cheese_change_led_by_rgb": "change rgb led %1 by r: %2 g: %3 b: %4 %5",
        "cheese_setLed_to_rgb": "set rgb led %1 to r: %2 g: %3 b: %4 %5",
        "cheese_clear_led": "clear rgb led %1 %2",
        "cheese_set_led_type_to": "set rgb led %1 to %2 type %3",
        "cheese_neopixel_set_number_and_type_to": "neopixel: set %1 leds as %2 %3",
        "cheese_neopixel_set_all_leds_to_color": "neopixel: set all leds to %1 %2",
        "cheese_neopixel_pick_all_leds_to": "neopixel: set all leds to %1 %2",
        "cheese_neopixel_change_all_leds_by_rgb": "neopixel: change all leds by r: %1 g: %2 b: %3 %4",
        "cheese_neopixel_set_all_leds_to_rgb": "neopixel: set all leds to r: %1 g: %2 b: %3 %4",
        "cheese_neopixel_set_all_leds_to_pattern": "neopixel: set all leds to pattern %1 %2",
        "cheese_neopixel_clear_all_leds": "neopixel: clear all leds %1",
        "cheese_neopixel_set_led_to_color": "neopixel: set led %1 to %2 %3",
        "cheese_neopixel_pick_led_to": "neopixel: set led %1 to %2 %3",
        "cheese_neopixel_change_led_by_rgb": "neopixel: change led %1 by r: %2 g: %3 b: %4 %5",
        "cheese_neopixel_set_led_to_rgb": "neopixel: set led %1 to r: %2 g: %3 b: %4 %5",
        "cheese_neopixel_clear_led": "neopixel: clear led %1 %2",
        "cheese_neopixel_set_led_range_to_color": "neopixel: set leds (from %1 to %2 with %3 increments) to %4 %5",
        "cheese_neopixel_pick_led_range_to": "neopixel: set leds (from %1 to %2 with %3 increments) to %4 %5",
        "cheese_neopixel_change_led_range_by_rgb": "neopixel: change leds (from %1 to %2 with %3 increments) by r: %4 g: %5 b: %6 %7",
        "cheese_neopixel_set_led_range_to_rgb": "neopixel: set leds (from %1 to %2 with %3 increments) to r: %4 g: %5 b: %6 %7",
        "cheese_neopixel_set_led_range_to_pattern": "neopixel: set leds (from %1 to %2) to pattern %3 %4",
        "cheese_neopixel_clear_led_range": "neopixel: clear leds (from %1 to %2 with %3 increments) %4",
        "cheese_neopixel_shift": "neopixel: shift %1 pixels %2",
        "cheese_neopixel_rotate": "neopixel: rotate %1 pixels %2",
        "cheese_neopixel_change_brightness_by": "neopixel: change brightness by %1% %2",
        "cheese_neopixel_set_brightness_to": "neopixel: set brightness to %1% %2",
        "cheese_write_serial": "write %1 %2 to serial %3",
        "cheese_read_serial_until": "read serial %1 %2",
        "cheese_set_serial_port_to": "set serial port to %1 %2",
        "cheese_set_serial_rate_to": "set serial rate to %1Bd %2",
        "cheese_serial_input": "serial input",
        "cheese_pid_start": "start %1 %2",
        "cheese_pid_set_range_to": "PID: set %1 range %2 - %3 to %4 - %5 %6 decimal point %7",
        "cheese_pid_set_three_ranges_to": "PID: set %1 range %2 - %3 - %4 to %5 - %6 - %7 %8 decimal point %9",
        "cheese_pid_reset_encoder": "PID: clear encoder %1",
        "cheese_pid_input": "PID: %1",
        "cheese_pid_button_state": "PID: button %1 %2?",
        "cheese_hat010_start": "start HAT-010 5x5 matrix %1",
        "cheese_hat010_button": "HAT-010: button %1",
        "cheese_hat010_button_state": "HAT-010: button %1 %2?",
        "cheese_hat010_background_turn_on_xy": "HAT-010 background: turn on x: %1 y: %2 in %3 %4",
        "cheese_hat010_background_turn_off_xy": "HAT-010 background: turn off x: %1 y: %2 %3",
        "cheese_hat010_background_draw_shape_at_xy": "HAT-010 background: draw %1 %2 at x: %3 y: %4 %5",
        "cheese_hat010_background_draw_string_at_xy": "HAT-010 background: draw %1 string %2 at x: %3 y: %4 %5",
        "cheese_hat010_background_draw_pattern_at_xy": "HAT-010 background: draw %1 pattern %2 at x: %3 y: %4 %5",
        "cheese_hat010_clear": "HAT-010: clear %1 %2",
        "cheese_hat010_scroll_by_xy": "HAT-010: scroll %1 by x: %2 y: %3 %4",
        "cheese_hat010_sprite_set_to_shape": "HAT-010 sprite %1: set sprite to %2 %3 %4",
        "cheese_hat010_sprite_set_to_string": "HAT-010 sprite %1: set sprite to %2 string %3 %4",
        "cheese_hat010_sprite_set_to_pattern": "HAT-010 sprite %1: set sprite to %2 pattern %3 %4",
        "cheese_hat010_sprite_clear_show_hide": "HAT-010 sprite %1: %2 sprite %3",
        "cheese_hat010_sprite_change_positions_by_xy": "HAT-010 sprite %1: change position by x: %2 y: %3 %4",
        "cheese_hat010_sprite_set_positions_to_xy": "HAT-010 sprite %1: set position to x: %2 y: %3 %4",
        "cheese_hat010_sprite_change_position_by_value": "HAT-010 sprite %1: change %2 position by %3 %4",
        "cheese_hat010_sprite_set_position_to_value": "HAT-010 sprite %1: set %2 position to %3 %4",
        "cheese_hat010_sprite_rotate": "HAT-010 sprite %1: rotate %2 %3",
        "cheese_hat010_sprite_flip_in_direction": "HAT-010 sprite %1: flip in %2 direction %3",
        "cheese_hat010_sprite_stamp_to_background": "HAT-010 sprite %1: stamp to background %2",
        "cheese_hat010_sprite_position": "HAT-010 sprite %1: %2 position",
        "cheese_hat010_sprite_touching_sprite": "HAT-010 sprite %1: touching sprite %2?",
        "cheese_hat010_sprite_touching": "HAT-010 sprite %1: touching %2?",
        "cheese_hat010_change_brightness_by": "HAT-010: change brightness by %1% %2",
        "cheese_hat010_set_brightness_to": "HAT-010: set brightness to %1% %2",
        "choco_move_forward": "move forward %1 %2 block %3",
        "choco_move_backward": "move backward %1 %2 block %3",
        "choco_turn_left": "%1 %2 to the left %3",
        "choco_turn_right": "%1 %2 to the right %3",
        "choco_move_right_left": "move right %1 %2,left %3 %4 %5",
        "choco_onoff_led_rear": "Rear LED %1 %2",
        "choco_set_led_color": "%1 LED %2 %3",
        "choco_play_sound": "play %1 %2",
        "choco_is_front_sensor": "front sensor",
        "choco_is_bottom_sensor": "bottom sensor",
        "choco_is_light_sensor": "light sensor",
        "choco_get_front_sensor": "front sensor",
        "choco_get_bottom_sensor": "bottom sensor",
        "choco_get_light_sensor": "light sensor",
        "chocopi_map_range": "map %1 in %2~%3 to %4~%5",
        "CODEino_default_neopixel_on": "Default Neopixel ON %1 %2",
        "CODEino_default_neopixel_setBrightness": "Set Default Neopixel-brightness %1 %2",
        "CODEino_default_neopixel_off": "Default Neopixel OFF %1",
        "CODEino_default_buzzer": "Play the default buzzer in a %1 octave %2 notes for %3 seconds %4",
        "CODEino_custom_buzzer": "Play the buzzer on %1pin in a %2 octave %3 notes for %4 seconds %5",
        "CODEino_custom_neopixel_on": "Set Neopixel on %1pin%2",
        "CODEino_custom_neopixel_setBrightness": "Set Neopixel-brightness %1 %2",
        "CODEino_custom_neopixel_off": "Set Neopixel OFF %1",
        "CODEino_custom_neopixel_set_led_color": "Set Neopixel %1LED to %2 %3",
        "CODEino_custom_neopixel_set_led_off": "Set Neopixel %1LED OFF %2",
        "CODEino_set_servo": "Set servo in %1 to degree %2 %3",
        "CODEino_get_ultrasonic": "Get value of Ultrasonic(Trig:%1, Echo:%2)",
        "cbx_arduino_get_analog_value": "Analog %1 Sensor value",
        "cbx_arduino_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "cbx_arudino_read_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "cbx_arduino_toggle_led": "Digital %1 Pin %2 %3",
        "cbx_arduino_digital_pwm": "Digital %1 Pin %2 %3",
        "cbx_arduino_write_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "cbx_arduino_write_servo": "Set servo pin %1 angle as %2 %3",
        "cbx_arduino_read_digital": "Digital %1 Sensor value",
        "cbx_write_led": "%1 set to %2 %3",
        "cbx_write_rgb_led": "set red %1 , green %2 , blue %3 %4",
        "cbx_write_tone": "note %1 octave %2 beat %3 %4",
        "cbx_write_servo": "set servo angle %1 %2",
        "cbx_write_dcm": "write DC motor direction %1 , speed %2 %3",
        "cbx_write_lcd": "write on %1 line %2 column %3  %4",
        "cbx_clear_lcd": "clear LCD screen %1",
        "cbx_read_line": "line sensor value",
        "cbx_read_mic": "mic value",
        "cbx_read_switch": "%1 value",
        "cbx_read_potentiometer": "potentiometer value",
        "cbx_read_ultrasonic": " Ultrasonic value",
        "codingmachine_altitude": "드론을 %1 높이만큼 날리기 %2",
        "codingmachine_button": "%1번 버튼 값 읽어오기",
        "codingmachine_connect": "드론 연결 상태 읽어오기",
        "codingmachine_emergency": "드론을 즉시 멈추기 %1",
        "codingmachine_gyro": "보드 %1 기울기 값 읽어오기",
        "codingmachine_joystick": "조이스틱 %1 읽기",
        "codingmachine_led": "%1 LED %2  %3",
        "codingmachine_motor": "%1 모터를 %2 세기로 돌리기 %3",
        "codingmachine_ready": "드론 비행 준비 상태 읽어오기",
        "codingmachine_rollpitch": "드론을 %1 방향 %2 세기로 움직이기 %3",
        "codingmachine_throttle": "드론 프로펠러를 %1 만큼 세기로 돌리기 %2",
        "codingmachine_tune": "%1 음을  %2 초동안 소리내기 %3",
        "codingmachine_ultrasonic": "거리(초음파)값 읽어오기",
        "codingmachine_yaw": "드론을 %1 만큼 회전하기 %2",
        "codingmachine_digital_out": "디지털 %1번 핀 %2 %3",
        "codingmachine_digital_in": "디지털 %1 번값 읽어오기",
        "codingmachine_analog_in": "analog %1 sensor",
        "codingmachine_digital_pwm": "디지털 출력 %1 번 세기로 출력하기 %2 %3",
        "codingmachine_servo": "디지털  %1 핀의 서보모터를 %2 각도로 정하기 %3",
        "cp_moving_set_vibrator": "Set vibrator %1 %2",
        "cp_moving_set_fan": "Rotating fan at %1 speed %2",
        "cp_moving_set_motor": "Turn on motor %1 a %2 at speed of %3 %4",
        "cp_moving_stop_motor": "Turn off motor %1 %2",
        "cp_moving_set_move": "Moving robot %2 at %1 speed %3",
        "cp_moving_stop_move": "Stop robot %1",
        "cp_moving_set_servor": "Set servo motor angle to %1 degrees %2",
        "cp_moving_set_audio_octave": "Play note %1 octave %2 beat %3 %4",
        "cp_moving_set_audio_freq": "Play note %1Hz beat %3",
        "cp_moving_stop_audio": "Rest audio as %1 %2",
        "cp_moving_get_ultrasonic": "Get ultrasonic value",
        "cp_moving_get_joystick": "Get joystick value",
        "cp_moving_get_joystick_button": "Get joystick button pressed",
        "cp_moving_get_button": "Get switch %1 preesed",
        "cp_moving_set_led": "Turn on LED in red%1 green%2 blue%3 %4",
        "cp_moving_set_led_color": "Turn on LED in %1 with %2 brightness %3",
        "cp_moving_stop_led": "Turn off LED %1",
        "cp_moving_get_soil": "Get soil sensor value",
        "cp_moving_get_analog": "Read analog value",
        "cp_moving_get_digital": "Read digital port %1",
        "cp_moving_set_digital": "Write digital port %1 to value %2 %3",
        "cp_moving_get_analog_value": "Read variable resistance",
        "cp_moving_get_ir": "Read %1 infrared ray sensor value",
        "eduino_get_analog_value": "Analog %1 Sensor value",
        "eduino_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "eduino_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "eduino_toggle_led": "Digital %1 Pin %2 %3",
        "eduino_digital_pwm": "Digital %1 Pin %2 %3",
        "eduino_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "eduino_set_servo": "Set servo pin %1 angle as %2 %3",
        "eduino_get_digital": "Digital %1 Sensor value",
        "elio_config_block": "초음파 %1,  라인센서1 %2, 라인센서2 %3 으로 정하기 %4",
        "elio_io_block": "%1 %2 으로 정하기 %3",
        "elio_io_all_block": "%1 %2, %3 %4, %5 %6, %7 %8, %9 %10, %11 %12 으로 정하기 %13",
        "elio_dc_block": "%1 %2 으로 정하기 %3",
        "elio_dc_all_block": "%1 %2, %3 %4 으로 정하기 %5",
        "elio_servo_block": "%1 %2 으로 정하기 %3",
        "elio_servo_all_block": "%1 %2, %3 %4 으로 정하기 %5",
        "elio_all_block": "%1 %2, %3 %4, %5 %6, %7 %8, %9 %10, %11 %12, %13 %14, %15 %16, %17 %18, %19 %20 으로 정하기 %21",
        "elio_dc_value": "%1 속도값 읽기",
        "elio_servo_value": "%1 각도 읽기",
        "elio_io_value": "%1 값 읽기",
        "elio_distance_value": "거리",
        "elio_line1_value": "라인1",
        "elio_line2_value": "라인2",
        "etboard_serial_set": "Set Serial COMM %1 boardrates",
        "etboard_ble_set": "Set Bluetooth COMM %1 boardrates",
        "etboard_get_analog_value": "Analog %1 Value",
        "etboard_toggle_pin": "Digital %1 PIN %2",
        "etboard_port_number": "%1",
        "etboard_ultrasonic_get_value": "Ultrasonic Trigger %1 PIN echo %2 PIN Value",
        "etboard_get_digital_button": "%1 Push",
        "etboard_get_digital": "Digital %1 PIN Value",
        "etboard_toggle_led": "%1 LED %2",
        "etboard_get_port_number1": "%1",
        "etboard_get_port_number": "%1",
        "etboard_get_ultrasonic_port_number": "%1",
        "etboard_set_servo": "Servo %1 PIN %2 degree set",
        "etboard_oled_set": "OLE %1 line %2 Display",
        "etboard_pw_get_port_number": "%1",
        "ev3_button_pressed": "%1's button pressed?",
        "ev3_status_led": "Set status light to %1 %2",
        "ColorRed": "Red",
        "ColorGreen": "Green",
        "ColorBlue": "Blue",
        "ColorYellow": "Yellow",
        "ColorPurple": "Purple",
        "ColorWhite": "White",
        "ColorSkip": "Skip",
        "ColorOff": "Off",
        "BrakeOff": "Turn off",
        "BrakeOn": "Turn on",
        "NoteC": "C",
        "NoteCS": "C#",
        "NoteD": "D",
        "NoteDS": "D#",
        "NoteE": "E",
        "NoteF": "F",
        "NoteFS": "F#",
        "NoteG": "G",
        "NoteGS": "G#",
        "NoteA": "A",
        "NoteAS": "A#",
        "NoteB": "B",
        "NoteRest": "Rest",
        "Scale6": "6 Scale",
        "Scale12": "12 Scale",
        "User2": "User 2",
        "User3": "USer 3",
        "DirectionBrake": "Brake",
        "DirectionCW": "CW",
        "DirectionCCW": "CCW",
        "DirectionPassive": "Passive",
        "RecordIndex0": "Normal",
        "RecordIndex1": "5 relay",
        "RecordIndex2": "Half blind",
        "RecordIndex3": "Full blind",
        "RecordIndex4": "Time penalty",
        "RecordIndex5": "20~28 mode",
        "RecordIndex6": "Fewest move",
        "RecordIndex7": "02 mode",
        "RecordTime1": "Latest",
        "RecordTime2": "Latest-1",
        "RecordTime3": "Latest-2",
        "RecordTime4": "Latest-3",
        "RecordTime5": "Latest-4",
        "RecordTimeBest": "Best",
        "RecordDiceNumber": "Dice number",
        "CellLedColor": "LED color of %1 face %2 cell",
        "FaceLedColor": "LED color of %1 face",
        "FaceDir": "rotation value of %1 face",
        "Record": "%2 record of %1",
        "RecodeDice": "%1 record",
        "MenuInit": "Exit mode %1",
        "NonBrake": "%1 the brake function %2",
        "ResetAllFace": "Initialize all colors %1",
        "ModeSetting": "Set mode to %1 %2 %3",
        "CenterColorChange": "Change the center cell LED color of %1 face to %2 %3",
        "CellColorChange": "Change the cell color of %1 face to %2  %3 %4 %5 %6 %7 %8 %9 %10",
        "PosDirTorChange": "Change %1 face to %2 position, %3 direction %4 torque %5",
        "FaceRotationOnlyColor": "Rotate the LED color of %1 face to %3º in %2 direction %4",
        "FaceRotation": "Rotate %1 face to %3º in %2 direction %4",
        "FacesRotation": "Rotate %1 face to %3º in %2 direction, %4 face to %6º in %5 direction %7",
        "SolveCube": "Solve %1 for %3 seconds with %2 as front face %4",
        "PlayMode": "Change to %1 play mode %2",
        "UserMode": "Change to %1 firmware %2",
        "PlayNote": "Play %1 for %2 seconds %3",
        "GetRecord": "Get %1 record %2",
        "GetRecordDice": "Get dice number record %1",
        "AutoSolve": "Auto solving start %1",
        "freearduino_get_analog_value": "analogRead %1",
        "freearduino_get_analog_value_pullup": "analogRead %1 (PULL UP)",
        "freearduino_get_analog_mapped_value": "map %1 from %2 ~ %3 to %4 ~ %5",
        "freearduino_get_humidity_value": "humidity value from DHT11 pin %1 (%)",
        "freearduino_get_temperature_value": "temperature value from DHT11 pin %1 (C)",
        "freearduino_get_distance_value": "fistance value from HC-SR04 trig %1 echo %2 (mm)",
        "freearduino_set_digital_value": "digitalWrite %1 to %2 %3",
        "freearduino_get_digital_value": "digitalRead %1 ",
        "freearduino_get_digital_value_pullup": "digitalRead %1 (PULL UP)",
        "freearduino_set_pwm_value": "analogWrite %1 to %2 %3",
        "freearduino_set_servo_angle": "write servo attached %1 angle as %2 %3",
        "freearduino_set_motor_run": "set L293D motor %1 rotate %2 %3",
        "freearduino_set_motor_speed": "set L293D motor %1 speed to %2 %3",
        "A_channel": "A_channel",
        "B_channel": "B_channel",
        "C_channel": "C_channel",
        "D_channel": "D_channel",
        "hamster_gripper": "%1 gripper %2",
        "hamster_release_gripper": "release gripper %1",
        "hamster_boolean": "%1?",
        "hamster_play_note": "play note %1 %2 %3",
        "hamster_s_hand_found": "hand found?",
        "hamster_s_boolean": "%1?",
        "hamster_s_value": "%1",
        "hamster_s_move_forward_once": "move forward once on board %1",
        "hamster_s_turn_once": "turn %1 once on board %2",
        "hamster_s_move_forward_unit": "move forward %1 %2 %3",
        "hamster_s_move_backward_unit": "move backward %1 %2 %3",
        "hamster_s_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "hamster_s_pivot_around_unit_in_direction": "pivot around %1 %2 %3 in %4 direction %5",
        "hamster_s_turn_unit_with_radius_in_direction": "%1 turn %2 %3 %4 with radius %5 cm in %6 direction %7",
        "hamster_s_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "hamster_s_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "hamster_s_change_wheel_by": "change %1 wheel by %2 %3",
        "hamster_s_set_wheel_to": "set %1 wheel to %2 %3",
        "hamster_s_follow_line_using": "follow %1 line using %2 floor sensor %3",
        "hamster_s_follow_line_until": "follow %1 line until %2 intersection %3",
        "hamster_s_set_following_speed_to": "set following speed to %1 %2",
        "hamster_s_set_following_gain_to": "set following directional variation to %1 %2",
        "hamster_s_stop": "stop %1",
        "hamster_s_set_led_to": "set %1 led to %2 %3",
        "hamster_s_pick_led": "set %1 led to %2 %3",
        "hamster_s_change_led_by_rgb": "change %1 led by r: %2 g: %3 b: %4 %5",
        "hamster_s_set_led_to_rgb": "set %1 led to r: %2 g: %3 b: %4 %5",
        "hamster_s_clear_led": "clear %1 led %2",
        "hamster_s_play_sound_times": "play sound %1 %2 times %3",
        "hamster_s_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "hamster_s_change_buzzer_by": "change buzzer by %1 %2",
        "hamster_s_set_buzzer_to": "set buzzer to %1 %2",
        "hamster_s_clear_sound": "clear sound %1",
        "hamster_s_play_note": "play note %1 %2 %3",
        "hamster_s_play_note_for": "play note %1 %2 for %3 beats %4",
        "hamster_s_rest_for": "rest for %1 beats %2",
        "hamster_s_change_tempo_by": "change tempo by %1 %2",
        "hamster_s_set_tempo_to": "set tempo to %1 bpm %2",
        "hamster_s_set_port_to": "set port %1 to %2 %3",
        "hamster_s_change_output_by": "change output %1 by %2 %3",
        "hamster_s_set_output_to": "set output %1 to %2 %3",
        "hamster_s_gripper": "%1 gripper %2",
        "hamster_s_release_gripper": "release gripper %1",
        "hamster_s_write_serial": "write %1 %2 to serial %3",
        "hamster_s_read_serial_until": "read serial %1 %2",
        "hamster_s_set_serial_rate_to": "set serial rate to %1 Bd %2",
        "hasseam_pulldown": "pulldown",
        "hasseam_pullup": "pullup",
        "hasseam_toggle_on": "on",
        "hasseam_toggle_off": "off",
        "hasseam_lcd_first_line": "first",
        "hasseam_lcd_seconds_line": "seconds",
        "hasseam_dcmotor_direction_forward": "forward",
        "hasseam_dcmotor_direction_reverse": "reverse",
        "hasseam_btData_select_number": "number",
        "hasseam_btData_select_character": "character",
        "hasseam_get_analog_value": "Read analog %1 pin sensor value %2",
        "hasseam_get_analog_mapping": "Map analog %1 pin sensor value %2 from %3 ~ %4 to %5 ~ %6",
        "hasseam_get_digital_bluetooth": "Bluetooth RX 2 value",
        "hasseam_get_digital_ultrasonic": "Read ultrasonic Trig %1 Echo %2 sensor value",
        "hasseam_get_digital": "Digital %1 pin sensor value %2",
        "hasseam_get_digital_toggle": "Digital %1 pin sensor value %2",
        "hasseam_set_digital_toggle": "Digital %1 pin %2 %3",
        "hasseam_set_digital_pwm": "Digital pwm %1 Pin %2 %3",
        "hasseam_set_digital_rgbled": "Digital %1 pin RGB LED Red %2 Green %3 Blue %4 %5",
        "hasseam_set_digital_servo": "Set servo pin %1 angle as %2 %3",
        "hasseam_set_digital_buzzer": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "hasseam_set_digital_dcmotor": "DC Motor %1 pin direction %2 %3 pin speed %4 %5",
        "hasseam_module_digital_lcd": "LCD %1 line %2 appear %3",
        "hasseam_module_digital_bluetooth": "Bluetooth TX 3 Pin %1 data send %2",
        "hasseam_module_digital_oled": "OLED X codinate %1 Y coodinate %2 appear %3 %4",
        "hyact_xylobot_list_aixs_1": "First axis",
        "hyact_xylobot_list_aixs_2": "Second axis",
        "hyact_xylobot_list_aixs_3": "Third axis",
        "hyact_xylobot_list_aixs_all": "All axis",
        "hyact_xylobot_list_octave_4_do": "C",
        "hyact_xylobot_list_octave_4_re": "D",
        "hyact_xylobot_list_octave_4_mi": "E",
        "hyact_xylobot_list_octave_4_fa": "F",
        "hyact_xylobot_list_octave_4_sol": "G",
        "hyact_xylobot_list_octave_4_la": "A",
        "hyact_xylobot_list_octave_4_si": "B",
        "hyact_xylobot_list_octave_5_do": "High C",
        "hyact_xylobot_list_movement_on": "On",
        "hyact_xylobot_list_movement_twinkle": "Twinkle",
        "hyact_xylobot_list_movement_standby": "Stand by",
        "hyact_xylobot_list_toggle_on": "On",
        "hyact_xylobot_list_toggle_off": "Off",
        "hyact_xylobot_list_color_off": "Off",
        "hyact_xylobot_list_color_red": "Red",
        "hyact_xylobot_list_color_orange": "Orange",
        "hyact_xylobot_list_color_yellow": "Yellow",
        "hyact_xylobot_list_color_green": "Green",
        "hyact_xylobot_list_color_blue": "Blue",
        "hyact_xylobot_list_color_navy": "Navy",
        "hyact_xylobot_list_color_purple": "Purple",
        "hyact_xylobot_list_color_white": "White",
        "hyact_xylobot_list_position_ready": "Ready position",
        "hyact_xylobot_list_position_target": "Target position",
        "hyact_xylobot_get_now_aixs_block": "Current %1 position value",
        "hyact_xylobot_get_note_aixs_block": "%1 note's %2 position value",
        "hyact_xylobot_set_led_movement_block": "LED mode setting to %1 %2",
        "hyact_xylobot_set_led_color_block": "LED color setting to %1 %2",
        "hyact_xylobot_set_led_rgb_block": "LED color setting to R : %1% G : %2% B : %3% %4",
        "hyact_xylobot_set_torque_toggle_block": "%1 torque %2 %3",
        "hyact_xylobot_set_position_single_block": "%1 's target position setting to %2º(degree) %3",
        "hyact_xylobot_set_position_many_block": "Target position setting to first axis : %1º(degree)  second axis : %2º(degree)  third axis : %3º(degree) %4",
        "hyact_xylobot_set_speed_block": "%1 's speed setting to %2% %3",
        "hyact_xylobot_set_torque_block": "%1 's torque value setting to %2% %3",
        "hyact_xylobot_set_play_note_block": "Play %1 %2",
        "hyact_xylobot_set_move_note_block": "Go to %1 's %2 %3",
        "hyact_xylobot_set_move_default_block": "Go to all axis default position %1",
        "jcboard_sonarport": "%1 번 포트를 초음파센서로 사용 %2",
        "jcboard_led": "%1 번 LED %2 %3",
        "jcboard_buzzer": "%1 음을 %2 초동안 소리내기모 %3",
        "jcboard_dcmotor": "%1 번 DC모터를 %2 세기로 돌리기 %3",
        "jcboard_servomotor": "%1 번 서보모터를 %2도 회전 %3",
        "jcboard_pin": "%1 번 디지털핀을 %2 로 설정 %3",
        "jcboard_button": "%1 번 버튼 값",
        "jcboard_analog": "%1 번 아날로그 값",
        "jcboard_on": "켜기",
        "jcboard_off": "끄기",
        "jcboard_do": "도",
        "jcboard_re": "레",
        "jcboard_mi": "미",
        "jcboard_fa": "파",
        "jcboard_sol": "솔",
        "jcboard_ra": "라",
        "jcboard_si": "시",
        "jdcode_takeoff": "드론 이륙하기 %1",
        "jdcode_landing": "드론 착륙하기 %1",
        "jdcode_altitude": "%1cm 높이로 비행%2",
        "jdcode_throttle": "프로펠러를 %1 % 세기로 돌리기 %2",
        "jdcode_velocity": "%1(으)로 %2속도(cm/s)로 비행%3",
        "jdcode_distance": "%1(으)로 %2cm 거리를 %3속도(cm/s)로 비행%4",
        "jdcode_degree": "%1으로 %2도를 %3각속도(deg/s)로 회전 %4",
        "jdcode_motor": "%1 모터를 %2 세기로 돌리기 %3",
        "jdcode_emergency": "드론 즉시멈추기 %1",
        "jdcode_connect": "드론 연결상태",
        "jdcode_ready": "드론 준비상태",
        "jdcode_battery": "배터리",
        "jdcode_dronealt": "드론 높이",
        "jdcode_gyrox": "드론 좌우 기울기",
        "jdcode_gyroy": "드론 앞뒤 기울기",
        "jdcode_posx": "드론 좌우 이동",
        "jdcode_posy": "드론 앞뒤 이동",
        "jdcode_led": "%1 LED %2 %3",
        "jdcode_tune": "%1 음을  %2 초동안 소리내기 %3",
        "jdcode_joystick": "조이스틱 %1 읽기",
        "jdcode_button": "%1번 버튼 값 읽어오기",
        "jdcode_dir_front": "앞",
        "jdcode_dir_back": "뒤",
        "jdcode_dir_right": "오른쪽",
        "jdcode_dir_left": "왼쪽",
        "jdcode_alt": "드론 높이",
        "jdcode_tiltx": "드론좌우기울기",
        "jdcode_tilty": "드론앞뒤기울기",
        "jikko_toggle_on": "on",
        "jikko_toggle_off": "off",
        "jikko_lcd_first_line": "first",
        "jikko_lcd_seconds_line": "seconds",
        "jikko_get_analog_value": "Read analog %1 pin sensor value",
        "jikko_get_analog_mapping": "Map analog %1 pin sensor value from %2 ~ %3 to %4 ~ %5",
        "jikko_mapping1": "%1 값을 %2 ~ %3 사이로 제한한 값",
        "jikko_mapping2": "%1 값을 %2 ~ %3 범위에서 %4 ~ %5 범위로 변환",
        "jikko_get_digital_bluetooth": "Bluetooth RX 2 value",
        "jikko_get_digital_ultrasonic": "Read ultrasonic Trig %1 Echo %2 sensor value",
        "jikko_get_digital": "Digital %1 pin sensor value",
        "jikko_get_digital_toggle": "Digital %1 pin sensor value",
        "jikko_set_digital_toggle": "Digital %1 pin %2 %3",
        "jikko_set_digital_pwm": "Digital pwm %1 Pin %2 %3",
        "jikko_set_digital_rgbled": "Digital %1 pin RGB LED Red %2 Green %3 Blue %4 %5",
        "jikko_set_digital_servo": "서보 모터 %1 핀 %2 각도로 회전 %3",
        "jikko_set_digital_buzzer_toggle": "피에조부저 %1 핀 %2 %3",
        "jikko_set_digital_buzzer_volume": "피에조부저 (PWM %1 핀) 음량 %2 출력 (0 ~ 255) %3",
        "jikko_set_digital_buzzer": "피에조부저 %1 번 핀의 버저를 %2 %3 음으로 %4 박자 연주 %5",
        "jikko_set_digital_dcmotor": "DC Motor %1 pin direction %2 %3 pin speed %4 %5",
        "jikko_set_neopixel_init": "네오픽셀 LED 시작하기 설정 ( %1 핀에 %2 개의 LED 연결) %3",
        "jikko_set_neopixel_bright": "네오픽셀 LED ( %1 핀) 밝기 %2 으로 설정 (0 ~ 255) %3",
        "jikko_set_neopixel": "네오픽셀 LED ( %1 핀) %2 번째 LED 색 %3 출력 %4",
        "jikko_set_neopixel_all": "네오픽셀 LED ( %1 핀) 모든 LED 색 %2 출력 %3",
        "jikko_set_neopixel_clear": "네오픽셀 LED ( %1 핀) 모든 LED 끄기 %2",
        "jikko_set_dotmatrix_init": "8x8 도트매트릭스 시작하기 설정 (DIN %1, CLK %2, CS %3) %4",
        "jikko_set_dotmatrix_bright": "도트매트릭스 밝기 %1 으로 설정 (0 ~ 8) %2",
        "jikko_set_dotmatrix": "도트매트릭스 LED 그리기 %1 %2",
        "jikko_set_dotmatrix_emoji": "도트매트릭스 LED %1 그리기 %2",
        "jikko_module_digital_lcd": "LCD %1 열 %2 행 부터 %3 출력",
        "jikko_lcd_init": "I2C LCD 시작하기 설정 (주소 %1 ,열 %2, 행 %3) %4",
        "jikko_module_digital_bluetooth": "Bluetooth TX 3 Pin %1 data send %2",
        "jikko_module_digital_oled": "OLED X codinate %1 Y coodinate %2 appear %3 %4",
        "jikko_get_dht_temp_value": "온습도센서의 온도값",
        "jikko_get_dht_humi_value": "온습도센서의 습도값",
        "jikko_set_mp3_init": "mp3 초기화 ( tx: %1, rx: %2 ) %3",
        "jikko_set_mp3_play": "mp3 %1 번 파일 재생 %2",
        "jikko_set_mp3_play2": "mp3 %1 번 파일 %2 초 동안 재생 %3",
        "jikko_set_mp3_vol": "mp3 볼륨 %1 으로 설정 (0 ~ 30) %2",
        "jikko_load_init": "HX711 로드셀 시작하기 설정 (DOUT %1, SCK %2) %3",
        "jikko_load_scale": "HX711 로드셀 보정하기 %1 %2",
        "jikko_load_value": "HX711 로드셀 값",
        "jikko_get_dust": "미세먼지센서(LED %1, AO %2) 값(μg/m³)",
        "jikko_rfid_init": "RFID 시작하기 설정 (RST %1, SS %2) %3",
        "jikko_is_rfid_tapped": "RFID 카드가 인식되었는가?",
        "jikko_get_rfid_value": "RFID 카드 값",
        "jikko_joy_init": "%1 조이스틱 시작하기 설정 (X AO %2, Y AO %3, Z %4) %5",
        "jikko_get_joy_x": "%1 조이스틱 X값",
        "jikko_get_joy_y": "%1 조이스틱 y값",
        "jikko_get_joy_z": "%1 조이스틱 버튼 눌림 상태",
        "jikko_get_joy_move": "%1 조이스틱이 %2 방향으로 움직였을 때",
        "jikko_step_init": "%1 스텝모터 시작하기 설정 (IN1 %2, IN2 %3, IN3 %4, IN4 %5) %6",
        "jikko_step_speed": "%1 스텝모터 속도를 %2 로 설정하기 (0 ~ 20) %3",
        "jikko_step_rotate": "%1 스텝모터 %2 으로 %3 바퀴 회전하기 %4",
        "jikko_step_rotate2": "%1 스텝모터 %2 으로 %3 도 회전하기 %4",
        "jikko_step_rotate3": "%1 스텝모터 %2 으로 %3 초 동안 회전하기 %4",
        "joystick_get_analog_value": "Analog %1 Sensor value",
        "joystick_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "joystick_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "joystick_digital_pwm": "Digital %1 Pin %2 %3",
        "joystick_set_tone": "Play tone on note %1 octave %2 beat %3 %4",
        "joystick_set_servo": "Set servo pin %1 angle as %2 %3",
        "joystick_get_digital": "Digital %1 Sensor value",
        "joystick_is_button_pressed": "button pressed %1",
        "joystick_get_joystick_value": "when the joystick move to %1",
        "joystick_get_sensor_value": "%1 value",
        "joystick_toggle_motor": "vibrator motor %1 %2",
        "joystick_toggle_shield_led": "%2 the sensorshield %1 LED %3",
        "joystick_get_led_number": "%1",
        "kaduino_buzzer_onoff": "Speakers Beep %1 Playing Second %2",
        "kaduino_set_digital_buzzer": "Speakers  %1 Octave %2 Play %3 seconds %4",
        "kaduino_set_motor_speed": "Set DC motor left speed %1  right speed %2 %3",
        "kaduino_motor_stop": "Stop DC Motor %1",
        "kaduino_set_servo": "Servo motor %1 pin angle %2 movement %3",
        "kaduino_set_rgbled_onoff": "RGB LED %1 First Color %2 %3",
        "kaduino_rgbled_seting": "Setting %2 brightness %3 on RGB LED %1 pin %4",
        "kaduino_set_rgbled_value": "RGB LED %1 st Red %2 Green %3 Blue %4",
        "kaduino_rgbled_all_onoff": "RGB LED %1 %2",
        "kaduino_digital_onoff": "Setting up digital %1 pin %2 %3",
        "kaduino_get_digital_value": "Read digital %1 pins",
        "kaduino_get_analog_value": "Analog %1 pin read",
        "kaduino_set_pwm": "Send %2 to pin %1 %3",
        "kaduino_set_ultrasonic": "Connecting to the ultrasonic sensor setting trigger %1 pin, echo %2 pin %3",
        "kaduino_get_usonic_value": "Reading ultrasonic sensor values",
        "kaduino_set_temp": "Connecting to the temperature sensor %1 pin %2",
        "kaduino_get_temp_value": "Reading temperature sensor values",
        "kaduino_set_i2c": "Connect I2Cport %1 %2",
        "kaduino_get_color_value": "Reading the color sensor %1 value",
        "kaduino_get_gyro_value": "Read gyro sensor %1 value",
        "kaduino_set_lcd_string": "lcd Display %3 on line %1 and line %2 %4",
        "kaduino_set_lcd_init": "setting lcd : I2C address 0x%1 , horizontal line number %2 , vertical line number %3 %4",
        "kaduino_set_lcd_clear": "Clear lcd %1",
        "kaduino_get_analog_mapping": "%1 value %2 to %3 ; to %4 to %5 conversion value ",
        "kamibot_move_forward": "{block}: move forward %1 block %2",
        "kamibot_turn_left": "{block}: turn left %1",
        "kamibot_turn_right": "{block}: turn right %1",
        "kamibot_turn_back": "{block}: turn back %1",
        "kamibot_linetracer_speed": "set linetracer speed %1 %2",
        "kamibot_linetracer": "turn linetracer %1 %2",
        "kamibot_forward_speed": "move forward speed: %1 %2",
        "kamibot_left_speed": "move left speed: %1 %2",
        "kamibot_right_speed": "move right speed: %1 %2",
        "kamibot_backward_speed": "move backward speed: %1 %2",
        "kamibot_forward_lr_speed": "move forward speed Left: %1 Right: %2 %3",
        "kamibot_backward_lr_speed": "move backward speed Left: %1 Right: %2 %3",
        "kamibot_stop": "stop %1",
        "kamibot_color": "set LED color to %1 %2",
        "kamibot_servor": "set servor motor to %1 %2",
        "kamibot_ultrasonic": "ultrasonic sensor %1",
        "kamibot_infrared": "%1 infrared sensor %2",
        "kingcoding_set_motor": "Motor Control",
        "kingcoding_set_led": "LED Control",
        "kingcoding_set_buzzer": "Buzzer Control",
        "kingcoding_set_digital1": "Digital no.1 Control %1 %2",
        "kingcoding_set_digital2": "Digital no.2 Control  %1 %2",
        "kingcoding_get_number_sensor_1_value": "Analog Port 1 Value",
        "kingcoding_get_number_sensor_2_value": "Analog Port 2 Value",
        "kingcoding_get_digital_1_value": "Digital Port 1 Value",
        "kingcoding_get_digital_2_value": "Digital Port 2 Value",
        "lecoboard_button_read": "Button value",
        "lecoboard_button_read_bool": "Button value",
        "lecoboard_ultrasonic_read": "Read ultrasonic sensor",
        "lecoboard_cds_read": "Read cds sensor",
        "lecoboard_var_read": "Read var sensor",
        "lecoboard_ir_read": "Read  Humidity sensor",
        "lecoboard_temp_read": "Read temperature sensor",
        "lecoboard_analog_read": "Read Analog Input %1",
        "lecoboard_digital_read": "Read Digital %1 Pin",
        "lecoboard_dual_led_color_toggle": "LED %1 color %2",
        "lecoboard_dual_led_toggle": "LED green %1 red %2 value %3",
        "lecoboard_set_tone": "buzzer %1 tone %2 sec play %3",
        "lecoboard_led_rgb_toggle": "RGB LED R%1 G%2 B%3 %4",
        "lecoboard_set_tone_long": "buzzer %1 tone play %2",
        "lecoboard_set_freq_tone": "buzzer %1 pin %2 Hz %3 ms %4",
        "lecoboard_set_tone_off": "buzzer off",
        "lecobaord_set_servo": "%1 Sevomotor angle as %2 %3",
        "lecoboard_dc_motor": "%1 DC motor direction %2 speed %3 %4",
        "lecoboard_dc_motor_stop": "DC motor stop",
        "lecoboard_digital_write": "Digital %1 port as %2 %3",
        "lecoboard_digital_pwm": "PWM %1 pin %2 out %3",
        "lecoboard_convert_value": "Convert value %1 from %2 to %3 %4",
        "lecoboard_lcd_command": "Set LCD cmd %1 %2",
        "lecoboard_set_lcd": "Set LCD data %1 %2 %3 %4",
        "lecoboard_send_ble": "BLE print %1 %2",
        "lecoboard_get_bluetooth": "Read from BLE",
        "littlebits_text": "%1",
        "littlebits_get_sensor_number": "%1  ",
        "littlebits_get_port_number": "%1  ",
        "littlebits_get_pwm_port_number": "%1  ",
        "littlebits_get_number_sensor_value": "아날로그 %1 번 센서값  ",
        "littlebits_get_digital_value": "디지털 %1 번 센서값  ",
        "littlebits_toggle_led": "디지털 %1 번 핀 %2 %3",
        "littlebits_toggle_pwm": "디지털 %1 번 핀을 %2 (으)로 정하기 %3",
        "littlebits_convert_scale": "%1 값의 범위를 %2 ~ %3 에서 %4 ~ %5 (으)로 바꾼값  ",
        "magkinder_list_leftSide": "left side",
        "magkinder_list_left": "left",
        "magkinder_list_right": "right",
        "magkinder_list_rightSide": "right side",
        "magkinder_list_front": "front",
        "magkinder_list_forward": "forward",
        "magkinder_list_backwards": "backwards",
        "magkinder_list_both": "both",
        "magkinder_list_on": "on",
        "magkinder_list_off": "off",
        "magkinder_list_red": "red",
        "magkinder_list_blue": "blue",
        "magkinder_list_green": "green",
        "magkinder_list_yellow": "yellow",
        "magkinder_list_purple": "purple",
        "magkinder_list_white": "white",
        "magkinder_list_4_octave_C": "4 octave C",
        "magkinder_list_4_octave_D": "4 octave D",
        "magkinder_list_4_octave_E": "4 octave E",
        "magkinder_list_4_octave_F": "4 octave F",
        "magkinder_list_4_octave_G": "4 octave G",
        "magkinder_list_4_octave_A": "4 octave A",
        "magkinder_list_4_octave_B": "4 octave B",
        "magkinder_list_5_octave_C": "5 octave C",
        "magkinder_list_5_octave_D": "5 octave D",
        "magkinder_list_5_octave_E": "5 octave E",
        "magkinder_list_5_octave_F": "5 octave F",
        "magkinder_list_5_octave_G": "5 octave G",
        "magkinder_list_5_octave_A": "5 octave A",
        "magkinder_list_5_octave_B": "5 octave B",
        "magkinder_list_6_octave_C": "6 octave C",
        "magkinder_list_codingMode": "Coding",
        "magkinder_list_lineMode": "Line",
        "magkinder_list_gestureFollowMode": "Gesture follow",
        "magkinder_list_handFollowMode": "Hand follow",
        "magkinder_list_AvoidMode": "Avoid",
        "magkinder_list_gestureCodingMode": "Gesture coding",
        "magkinder_list_cardCodingMode": "Card coding",
        "magkinder_received_bottomSensor_block": "Bottom %1 sensor value",
        "magkinder_received_cardSensor_block": "Card %1 sensor value",
        "magkinder_received_frontSensor_block": "Front %1 sensor value",
        "magkinder_transmit_autoSensor_block": "Automatically update sensor values %1 %2",
        "magkinder_transmit_moveStop_block": "Stop %1",
        "magkinder_transmit_move_block": "Move to %1 %2 cm %3",
        "magkinder_transmit_turn_block": "Rotate to %1 %2 ° %3",
        "magkinder_transmit_wheelSpeed_block": "Set %1 wheel(s) speed %2 %3",
        "magkinder_transmit_eyeLED_block": "Set eye LED color to %1 %2",
        "magkinder_transmit_volumm_block": "Set sound volume to %1 %2",
        "magkinder_transmit_speak_block": "Speaking No. %1 %2",
        "magkinder_transmit_scale_block": "Speaking %1 %2",
        "magkinder_transmit_modeSetting_block": "Set %1 mode %2",
        "mechanicblock_controller_get_analog_value": "Analog %1 Sensor value",
        "mechanicblock_controller_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mechanicblock_controller_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mechanicblock_controller_toggle_led": "Digital %1 Pin %2 %3",
        "mechanicblock_controller_digital_pwm": "Digital %1 Pin %2 %3",
        "mechanicblock_controller_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "mechanicblock_controller_set_servo": "Set servo pin %1 angle as %2 %3",
        "mechanicblock_controller_get_digital": "Digital %1 Sensor value",
        "mechanicblock_uno_get_analog_value": "Analog %1 Sensor value",
        "mechanicblock_uno_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mechanicblock_uno_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mechanicblock_uno_toggle_led": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_digital_pwm": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "mechanicblock_uno_set_servo": "Set servo pin %1 angle as %2 %3",
        "mechanicblock_uno_get_digital": "Digital %1 Sensor value",
        "mechanicblock_uno_mini_get_analog_value": "Analog %1 Sensor value",
        "mechanicblock_uno_mini_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mechanicblock_uno_mini_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mechanicblock_uno_mini_toggle_led": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_mini_digital_pwm": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_mini_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "mechanicblock_uno_mini_set_servo": "Set servo pin %1 angle as %2 %3",
        "mechanicblock_uno_mini_get_digital": "Digital %1 Sensor value",
        "mechanicblock_uno_s_get_analog_value": "Analog %1 Sensor value",
        "mechanicblock_uno_s_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mechanicblock_uno_s_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "mechanicblock_uno_s_toggle_led": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_s_digital_pwm": "Digital %1 Pin %2 %3",
        "mechanicblock_uno_s_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "mechanicblock_uno_s_set_servo": "Set servo pin %1 angle as %2 %3",
        "mechanicblock_uno_s_get_digital": "Digital %1 Sensor value",
        "mechatro_set_get_sensor_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mechatro_get_temperature": "temperature %1 Sensor",
        "mechatro_event_rising": "%1 When %2 is turned true",
        "mechatro_event_falling": "%1 When %2 is turned false",
        "microbit_ext_led_toggle": "LED X:%1 Y:%2 %3 %4",
        "microbit_ext_get_led": "LED X:%1 Y:%2 Value",
        "microbit_ext_show_string": "%1 appear %2",
        "microbit_ext_show_image": "%1 icon appear %2",
        "microbit_ext_set_led_image": "Show %1 leds %2",
        "microbit_ext_reset_screen": "Clear screen %1",
        "microbit_ext_set_tone": "Play %1 for %2 beat %3",
        "microbit_ext_set_tempo": "Set tempo to %1 BPM %2",
        "microbit_ext_set_relative_tempo": "Change tempo by %1 BPM %2",
        "microbit_ext_set_analog": "Analog writen pin %1 to %2 %3",
        "microbit_ext_set_analog_period": "Analog set period pin %1 to microsecond %2 %3",
        "microbit_ext_get_analog": "Analog %1 Sensor Value",
        "microbit_ext_get_analog_map": "Change analog %1 Sensor Value from %2 ~ %3 to %4 ~ %5",
        "microbit_ext_set_digital": "Analog writen pin %1 to %2 %3",
        "microbit_ext_get_digital": "Digital %1 Sensor Value",
        "microbit_ext_get_button": "Button %1 is pressed?",
        "microbit_ext_get_sensor": "value of %1 sensor",
        "microbit_ext_is_tilt": "Tilted to the %1?",
        "microbit_ext_get_tilt": "Angle value tilted to the %1",
        "microbit_ext_get_accelerometer": "Acceleration %1",
        "microbit_ext_set_servo": "Servo write pin %1 to %2 %3",
        "microbit_ext_set_servo_period": "Set servo %1 pulse to %2 microsecond %3",
        "microbit_ext_get_gesture": "%1 Sensor Value?",
        "mindpiggy_get_analog_value": "Analog %1 Sensor value",
        "mindpiggy_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "mindpiggy_toggle_led": "Digital %1 Pin %2 %3",
        "mindpiggy_digital_pwm": "Digital %1 Pin %2 %3",
        "mindpiggy_get_digital": "Digital %1 Sensor value",
        "mindpiggy_get_bool_digital": "Digital %1 Pin Sensor value",
        "mindpiggy_neopixel_on_value": "Neopixel %1 Pin on %2 %3",
        "mindpiggy_neopixel_pixel_on_value": "Neopixel %1 Pin %2 pixel on %3 %4",
        "mindpiggy_neopixel_off_value": "Neopixel %1 Pin off %2",
        "mindpiggy_set_tone": "play %1 Pin tone on node %2 octave %3 beat %4 %5",
        "mindpiggy_dcmotor_direction_forward": "forward",
        "mindpiggy_dcmotor_direction_reverse": "reverse",
        "mindpiggy_set_dcmotor": "DC Motor %1 pin direction %2 , %3 pin speed %4 %5",
        "mindpiggy_get_vibration": " Vibration %1 pin value ",
        "mindpiggy_module_digital_remote": "RemoteController Analog %1 Pin value",
        "mkboard_get_ultrasonic_1_use": "Start ultrasonic 1 sensor trig pin %1 echo pin %2",
        "mkboard_get_ultrasonic_1_value": "Read ultrasonic 1 sensor value",
        "mkboard_get_ultrasonic_2_use": "Start ultrasonic 2 sensor trig pin %1 echo pin %2",
        "mkboard_get_ultrasonic_2_value": "Read ultrasonic 2 sensor value",
        "mkboard_lcd_print": "1602 LCD : Print Row %1, Column %2, Value %3 %4",
        "mkboard_lcd_init": "1602 LCD : LCD initialize %1 %2",
        "mkboard_segment_init": "FND : Set digital CLK %1 DIO %2 %3",
        "mkboard_segment_bright": "FND : Set bright %1 %2",
        "mkboard_segment_clear": "FND : Clear all segment value %1",
        "mkboard_segment_value": "FND : Print number %1 point %2 fill zero %3 %4",
        "mkboard_oled_init": "OLED : Initialize OLED %1 %2",
        "mkboard_oled_clear": "OLED : Clear OLED %1",
        "mkboard_oled_print": "OLED : Row %1, Col %2 print string %3 %4",
        "mkboard_oled_print_number": "OLED : Row %1, Col %2 print number %3 point %4 %5",
        "mkboard_maxtrix_init": "Matrix : Count %1, Matrix initialize Data %2 Clk %3 CS %4 %5",
        "mkboard_maxtrix_set": "Matrix : No %1, Matrix set Row %2 Col %3 %4 %5",
        "mkboard_matrix_bright": "Matrix : No %1, Matrix Set bright %2 %3",
        "mkboard_matrix_clear": "Matrix : No %1, Matrix All clear %2",
        "mkboard_matrix_set_row": "Matrix : No %1, Matrix Row %2, Binary number %3 print %4",
        "mkboard_matrix_set_col": "Matrix : No %1, Matrix Column %2, Binary number %3 print %4",
        "mkboard_matrix_char": "Matrix : No %1, Matrix Char %2 print %3",
        "mkboard_neopixel_init": "Nexpixel(%1) : Set Digital pin %2(LED count %3) %4",
        "mkboard_neopixel_set_rgb": "Nexpixel(RGB) : LED %1 Set color (R:%2 G:%3 B:%4) %5",
        "mkboard_neopixel_set_rgbw": "Nexpixel(RGBW) : LED %1 Set color (R:%2 G:%3 B:%4 W:%5) %6",
        "mkboard_neopixel_on": "Nexpixel : Nexpixel LED %1 %2",
        "mkboard_pms5003_init": "Dust Sensor : Set pin RX %1, TX %2 %3",
        "mkboard_pms5003_measure": "Dust Sensor : Sensor measure %1",
        "mkboard_pms5003_read": "Dust Sensor : Read %1 value %2",
        "mkboard_lsm303_accel_init": "Accelerometer : Initialize %1",
        "mkboard_lsm303_accel_measure": "Accelerometer : Sensor measure %1",
        "mkboard_lsm303_accel_read": "Accelerometer : Read %1 Axis %2",
        "mkboard_lsm303_compass_init": "Compass : Initialize %1",
        "mkboard_lsm303_compass_measure": "Compass : Sensor measure %1",
        "mkboard_lsm303_compass_read": "Compass : Read compass value %1",
        "mrt_digitalInput": "%1",
        "mrt_analogValue": "%1",
        "mrt_digitalOutput": "digital write pin %1 , value %2 %3",
        "mrt_servo": "servo write pin %1 , degrees %2 %3",
        "mrt_oneWheel": "set DC-motor %1 , speed %2 %3",
        "mrt_buzzer": "play Tone on note %1   %2  %3 duration %4",
        "mrt_lcd": "LCD %1 번째 줄 ,  출력 값 %2 %3",
        "mrt_ultra": "ultrasonic sensor",
        "mrt_gyro": "gyro sensor %1",
        "mrt_color": "color sensor",
        "mrt_remotecontrol": "remocon",
        "mrt_keyvalue": "key value",
        "neo_spider_get_analog_value": "Analog %1 pin Sensor value",
        "neo_spider_get_analog_value_map": "Analog %1 value Map range %2 ~ %3 to %4 ~ %5",
        "neo_spider_get_ultrasonic_value": "Ultrasonic Sensor value",
        "neo_spider_get_motion_value": "Motion Sensor value",
        "neo_spider_get_infared_value": "Infared ray %1 Sensor value",
        "neo_spider_set_tone": "Play tone note %1 octave %2 beat %3 %4",
        "neo_spider_set_servo": "Set servo pin angle as %1 %2",
        "neo_spider_motor_state": "Move neospider %1 %2",
        "neo_spider_neopixel": "RGB LED number %1 turn on R %2 G %3 B %4 %5",
        "neo_spider_neopixel_all_on": "All RGB LED turn on R %1 G %2 B %3 %4",
        "neo_spider_neopixel_all_off": "All RGB LED turn off %1",
        "neo_spider_outer_motor": "Digital %1 pin %2 %3",
        "neobot_sensor_connect_external": "the %2 value connected %1",
        "neobot_sensor_convert_scale": "the value that is changed %1 sensor value %2 ~%3 to %4 ~ %5",
        "neobot_compare_symbol": "%1",
        "neobot_decision_sensor_is_over": "%1 sensor value %2 %3",
        "neobot_decision_equal_with_sensor": "being detected %2 by %1 color sensor",
        "neobot_remote_button": "pressing button %1 of remote controller",
        "get_motor_speed": "%1",
        "neobot_left_motor": "Rotate the left motor in %2 for speed %1 %3",
        "neobot_stop_left_motor": "Stop the left motor %1",
        "neobot_right_motor": "Rotate the right motor in %2 for speed %1 %3",
        "neobot_stop_right_motor": "Stop right motor %1",
        "neobot_both_motor": "Rotate the left motor in %2 speed %1 & the right motor in %4 for speed %3 %5",
        "neobot_all_motor": "Rotate both motors %2 speed %1 for %3 second(s) %4",
        "neobot_stop_all_motor": "Stop both motors %1",
        "neobot_robot": "Go %1 the robot %2",
        "neobot_output_led_type1": "Turn on the LED connected %1 in %2 brightness for %3 %4",
        "neobot_output_led_on": "Turn on the LED connected %1 %2",
        "neobot_output_led_off": "Turn off the LED connected %1 %2",
        "neobot_set_output": "Output %1 port value to %2 %3",
        "get_servo_degree": "%1",
        "neobot_servo_init": "Reset the %1 servo motor %2",
        "neobot_servo_change_degree": "Change servo angle : %1 %2 %3 %4 %5",
        "neobot_servo_rotate": "Rotate the servo motor : %1 %2 %3 %4",
        "neobot_servo_stop": "Stop the %1 servo motor %2",
        "neobot_play_note_with_sensor": "Play the melody as %2 ~ %3 value of %1 sensor in the controller %4",
        "neobot_gyro_value": "Gyro sensor value %1",
        "neobot_joystick_value": "Joystick position %1",
        "neobot_crash_value": "Impact value",
        "neobot_random_value": "Random position %1",
        "neobot_judge_joystick_move": "Moved the joystick? %1",
        "neobot_judge_joystick_direction": "Joystick in the %1",
        "neobot_judge_button": "Press the %1 button?",
        "neobot_judge_gyro_direction_angle": "Is it tilted to %1",
        "neobot_judge_coord": "The %1position %2 %3",
        "neobot_judge_crash": "Impact value %1 %2",
        "neobot_locate": "Move to %1position %2 %3",
        "neobot_look": "Looking at the %1 position %2",
        "get_gyro_degree": "%1",
        "get_move_method": "%1",
        "get_number_type1": "%1",
        "get_number_type2": "%1",
        "neobot_rb_port_value": "%1 value",
        "neobot_rb_ir_sensor_value": "infrared sensor value",
        "neobot_rb_light_sensor_value": "light sensor value",
        "neobot_rb_sound_sensor_value": "sound sensor value",
        "neobot_rb_top_sensor_value": "top sensor value",
        "neobot_rb_bottom_sensor_value": "bottom sensor value",
        "neobot_rb_led_on_type1": "Turn on the LED in %1 brightness %2",
        "neobot_rb_led_on_type2": "Turn on the LED in %1 brightness for %2 second(s) and turn off %3",
        "neobot_rb_led_off": "Turn off the LED %1",
        "neobot_rb_led_on_type3": "Turn on the LED connected %1 in %2 briteness %3",
        "neobot_rb_led_on_type4": "Turn on the LED connected %1 in %2 briteness for %3 second(s) and turn off %4",
        "neobot_rb_led_off_type1": "Turn off the LED connected %1 %2",
        "neobot_rb_output_type1": "Output %2 to the external port connected %1 %3",
        "neobot_rb_motor_type1": "Rotate %1 motor(s) in %2 speed for %3 second(s) and stop %4",
        "neobot_rb_motor_type2": "Rotate both motors in %2 speed %1 %3",
        "neobot_rb_motor_type3": "Rotate %1 motor(s) to %2 speed %3",
        "neobot_rb_motor_stop": "Stop %1 motor(s) %2",
        "neobot_rb_motor_type_select": "Go %1 the robot %2",
        "neobot_rb_motor_type_stop": "Stop the robot %1",
        "neobot_rb_ir_decision": "infrared sensor activation (reference value: %1)",
        "neobot_rb_light_decision": "light sensor activation (reference value: %1)",
        "neobot_rb_sound_decision": "sound sensor activation (reference value: %1)",
        "neobot_rb_port_decision": " %1 activation (reference value: %2)",
        "neobot_rb_top_decision": "top sensor activation (reference value: %1)",
        "neobot_rb_bottom_decision": "bottom sensor activation (reference value: %1)",
        "neobot_rb_remote_decision": "pressing button %1 of the remote controller",
        "neobot_rb_servo_init": "Initialize servo motor connected %1 to current place %2",
        "neobot_rb_servo_turn_type1": "Rotate servo motor connected %1 to %2 at %3 degrees %4",
        "neobot_rb_servo_turn_type2": "Rotate servo motor connected %1 at %2 degrees %3",
        "neobot_rb_servo_turn_type4": "Set to %2 the rotation speed of servo motor connected %1 %3",
        "neobot_rb_servo_turn_type5": "Rotate servo motor connected %1 to %2 in %3 speed constantly",
        "neobot_rb_servo_mode_manual": "Change servo motor connected %1 to manual control mode %2",
        "neobot_rb_servo_stop": "Stop servo motor connected %1 %2",
        "neobot_rb_led": "%1",
        "neobot_rb_time": "%1",
        "neobot_rb_time2": "%1",
        "neobot_rb_speed": "%1",
        "neobot_rb_speed2": "%1",
        "neobot_rb_surface": "%1",
        "neobot_st_sensor_value": "%1 value",
        "neobot_st_sensor_connect_external": "the %2 value connected %1",
        "neobot_st_sensor_convert_scale": "the value that is changed %1 sensor value %2 ~%3 to %4 ~ %5",
        "neobot_st_compare_symbol": "%1",
        "neobot_st_decision_sensor_is_over": "%1 sensor value %2 %3",
        "neobot_st_decision_equal_with_sensor": "being detected %2 by %1 color sensor",
        "neobot_st_remote_button": "pressing button %1 of remote controller",
        "neobot_st_output_led_on": "Turn on the LED connected %1 %2",
        "neobot_st_output_led_off": "Turn off the LED connected %1 %2",
        "neobot_st_set_output": "Output %1 port value to %2 %3",
        "orange_get_analog_value": "Analog %1 Sensor value",
        "orange_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
        "orange_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
        "orange_toggle_led": "Digital %1 Pin %2 %3",
        "orange_digital_pwm": "Digital %1 Pin %2 %3",
        "orange_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
        "orange_set_noTone": "디지털 %1 번 핀의 버저 소리 끄기 %2",
        "orange_set_servo": "Set servo pin %1 angle as %2 %3",
        "orange_get_digital": "Digital %1 Sensor value",
        "orange_set_neopixelinit": "디지털 %1 번 핀에 연결된 %2 개의 네오픽셀 LED 사용하기 %3",
        "orange_set_neopixel": "디지털 %1 번 핀에 연결된 %2 번째 네오픽셀 LED를 R: %3 , G: %4 , B: %5 색으로 켜기 %6",
        "orange_set_dht_init": "디지털 %1 번 핀에 연결된 온습도센서 사용하기 %2",
        "orange_get_dht_temp_value": "온습도센서의 온도값",
        "orange_get_dht_humi_value": "온습도센서의 습도값",
        "orange_set_pmsensor_init": "미세먼지 센서를 tx: %1 핀 rx: %2 핀에 연결해 사용하기 %3",
        "orange_get_pmsensor_value": "%1 미세먼지 농도(ug/m3)값",
        "orange_get_lcd_row": "%1",
        "orange_get_lcd_col": "%1",
        "orange_set_I2CLCD_init": "I2C LCD사용하기 %3",
        "orange_set_I2CLCD_print": "I2C LCD의 %1 번째 줄, %2 번째 칸에 %3 출력하기 %4",
        "orange_set_I2CLCD_clear": "I2C LCD의 화면 모두 지우기 %3",
        "orange_set_I2CLCD_emoticon": "I2C LCD의 %1 번째 줄, %2 번째 칸에 %3 이모티콘 출력하기 %4",
        "palmkit_inputsensor": "%1 No. %2",
        "palmkit_ispressed": "No. %1 Button is pressed?",
        "palmkit_buzzer_off": "No. %1 Buzzer off %2",
        "palmkit_buzzer_note": "No. %1 Buzzer play note %2 %3",
        "palmkit_buzzer_note_delay": "No. %1 Buzzer play note %2 for %3 beats %4",
        "palmkit_led_toggle": "No. %1 LED %2 %3",
        "palmkit_led_color": "No. %1 LED set color to %2 %3",
        "palmkit_led_color_number": "No. %1 LED set color to %2 %3",
        "palmkit_led": "No. %1 LED R %2 G %3 B %4 %5",
        "palmkit_motor_stop": "Motor stop %1",
        "palmkit_dc_motor": "No. %1 DC motor move to direction %2 at speed %3 for %4 secs %5",
        "palmkit_rc_motor": "No. %1 RC motor move to angle %2 at speed %3 %4",
        "pingpong_g1_when_button_pressed": "%1 Button pressed",
        "pingpong_g1_when_tilted": "%1 Tilted to %2",
        "pingpong_g1_is_button_pressed": "button pressed?",
        "pingpong_g1_is_tilted": "cube tilted to %1",
        "pingpong_g1_get_tilt_value": "tilt angle to %1",
        "pingpong_g1_get_sensor_value": "read sensor %1",
        "pingpong_g1_motor_rotate": "rotate %2 degrees %1 %3",
        "pingpong_g1_start_motor_rotate": "set motor speed to %1 %2",
        "pingpong_g1_stop_motor_rotate": "stop motor rotate %1",
        "pingpong_g1_rotate_servo_mortor": "set servo mortor to %1 degrees %2",
        "pingpong_g1_is_top_shape": "%1 shown in top view?",
        "pingpong_g1_set_dot_pixel": "set %3 DOT X:%1 Y:%2 %4",
        "pingpong_g1_set_dot_string": "print string %1 during %2 seconds to DOT %3",
        "pingpong_g1_set_dot_clear": "clear DOT %1",
        "pingpong_g1_playNoteForBeats": "play note %1 for %2 beats %3",
        "pingpong_g1_restForBeats": "rest for %1 beats %2",
        "pingpong_g1_setTempo": "set tempo to %1 %2",
        "pingpong_g1_getTempo": "tempo",
        "pingpong_g2_when_button_pressed": "%1 %2 cube button pressed",
        "pingpong_g2_when_tilted": "%1 %2 cube tilted to %3",
        "pingpong_g2_is_button_pressed": "%1 cube button pressed?",
        "pingpong_g2_is_tilted": "%1 cube tilted to %2",
        "pingpong_g2_is_top_shape": "%1 cube shown %2 in top view?",
        "pingpong_g2_get_tilt_value": "%1 cube tilt angle to %2",
        "pingpong_g2_get_sensor_value": "%1 cube read sensor %2",
        "pingpong_g2_multi_motor_rotate": "rotate motor1 %2 degrees %1, motor2 %4 degrees %3 %5",
        "pingpong_g2_motor_rotate": "rotate %2 degrees %1 %3",
        "pingpong_g2_start_multi_motor_rotate": "set motor1 speed to %1, motor2 speed to %2 %3",
        "pingpong_g2_start_motor_rotate": "set motor speed to %1 %2",
        "pingpong_g2_stop_motor_rotate": "stop motor rotate %1",
        "pingpong_g2_rotate_servo_mortor": "set servo mortor to %1 degrees %2",
        "pingpong_g2_set_dot_pixel": "%1 cube set DOT X:%2 Y:%3 %4 %5",
        "pingpong_g2_set_dot_string": "print %1 cube string %2 during %3 seconds to DOT %4",
        "pingpong_g2_set_dot_clear": "%1 cube clear DOT %2",
        "pingpong_g2_playNoteForBeats": "%1 cube play note %2 for %3 beats %4",
        "pingpong_g2_playChordForBeats": "%1 cube %2, %3 cube %4 for %5 beats %6",
        "pingpong_g2_restForBeats": "rest for %1 beats %2",
        "pingpong_g2_setTempo": "set tempo to %1 %2",
        "pingpong_g2_getTempo": "tempo",
        "pingpong_g3_when_button_pressed": "%1 %2 cube button pressed",
        "pingpong_g3_when_tilted": "%1 %2 cube tilted to %3",
        "pingpong_g3_is_button_pressed": "%1 cube button pressed?",
        "pingpong_g3_is_tilted": "%1 cube tilted to %2",
        "pingpong_g3_is_top_shape": "%1 cube shown %2 in top view?",
        "pingpong_g3_get_tilt_value": "%1 cube tilt angle to %2",
        "pingpong_g3_get_sensor_value": "%1 cube read sensor %2",
        "pingpong_g3_multi_motor_rotate": "rotate motor1 %2 degrees %1, motor2 %4 degrees %3, motor3 %6 degrees %5 %7",
        "pingpong_g3_motor_rotate": "rotate %2 degrees %1 %3",
        "pingpong_g3_start_multi_motor_rotate": "set motor1 speed to %1, motor2 speed to %2, motor3 speed to %3 %4",
        "pingpong_g3_start_motor_rotate": "set motor speed to %1 %2",
        "pingpong_g3_stop_motor_rotate": "stop motor rotate %1",
        "pingpong_g3_rotate_servo_mortor": "set servo mortor to %1 degrees %2",
        "pingpong_g3_set_dot_pixel": "%1 cube set DOT X:%2 Y:%3 %4 %5",
        "pingpong_g3_set_dot_string": "print %1 cube string %2 during %3 seconds to DOT %4",
        "pingpong_g3_set_dot_clear": "%1 cube clear DOT %2",
        "pingpong_g3_playNoteForBeats": "%1 cube play note %2 for %3 beats %4",
        "pingpong_g3_playChordForBeats": "%1 cube %2, %3 cube %4, %5 cube %6 for %7 beats %8",
        "pingpong_g3_restForBeats": "rest for %1 beats %2",
        "pingpong_g3_setTempo": "set tempo to %1 %2",
        "pingpong_g3_getTempo": "tempo",
        "pingpong_g4_when_button_pressed": "%1 %2 cube button pressed",
        "pingpong_g4_when_tilted": "%1 %2 cube tilted to %3",
        "pingpong_g4_is_button_pressed": "%1 cube button pressed?",
        "pingpong_g4_is_tilted": "%1 cube tilted to %2",
        "pingpong_g4_is_top_shape": "%1 cube shown %2 in top view?",
        "pingpong_g4_get_tilt_value": "%1 cube tilt angle to %2",
        "pingpong_g4_get_sensor_value": "%1 cube read sensor %2",
        "pingpong_g4_multi_motor_rotate": "rotate motor1 %2 degrees %1, motor2 %4 degrees %3, motor3 %6 degrees %5, motor4 %8 degrees %7 %9",
        "pingpong_g4_motor_rotate": "rotate %2 degrees %1 %3",
        "pingpong_g4_start_multi_motor_rotate": "set motor1 speed to %1, motor2 speed to %2, motor3 speed to %3, motor3 speed to %4, motor4 speed to %5 %6",
        "pingpong_g4_start_motor_rotate": "set motor speed to %1 %2",
        "pingpong_g4_stop_motor_rotate": "stop motor rotate %1",
        "pingpong_g4_rotate_servo_mortor": "set servo mortor to %1 degrees %2",
        "pingpong_g4_set_dot_pixel": "%1 cube set DOT X:%2 Y:%3 %4 %5",
        "pingpong_g4_set_dot_string": "print %1 cube string %2 during %3 seconds to DOT %4",
        "pingpong_g4_set_dot_clear": "%1 cube clear DOT %2",
        "pingpong_g4_playNoteForBeats": "%1 cube play note %2 for %3 beats %4",
        "pingpong_g4_playChordForBeats": "%1 cube %2, %3 cube %4, %5 cube %6 for %7 beats %8",
        "pingpong_g4_restForBeats": "rest for %1 beats %2",
        "pingpong_g4_setTempo": "set tempo to %1 %2",
        "pingpong_g4_getTempo": "tempo",
        "set_vibrator": "Set vibrator %1 %2",
        "set_fan": "Rotating fan at %1 speed %2",
        "set_motor": "Turn on motor %1 a %2 at speed of %3 %4",
        "stop_motor": "Turn off motor %1 %2",
        "set_move": "Moving robot %2 at %1 speed %3",
        "stop_move": "Stop robot %1",
        "set_servor": "Set servo motor angle to %1 degrees %2",
        "set_audio_octave": "Play note %1 octave %2 beat %3 %4",
        "set_audio_freq": "Play note %1Hz beat %3",
        "stop_audio": "Rest audio as %1 %2",
        "get_ultrasonic": "Get ultrasonic value",
        "get_joystick": "Get joystick value",
        "get_joystick_button": "Get joystick button pressed",
        "get_button": "Get switch %1 preesed",
        "set_led": "Turn on LED in red%1 green%2 blue%3 %4",
        "set_led_color": "Turn on LED in %1 with %2 brightness %3",
        "stop_led": "Turn off LED %1",
        "get_soil": "Get soil sensor value",
        "get_analog": "Read analog value",
        "get_digital": "Read digital port %1",
        "set_digital": "Write digital port %1 to value %2 %3",
        "get_analog_value": "Read variable resistance",
        "connect_senser_setting": "senser setting A1:%1 A2:%2 A3:%3 A4:%4 %5",
        "connect_remote_input": "remote input %1",
        "connect_digital_input": "digital senser %1",
        "connect_analog_input": "analog senser %1",
        "connect_value_mapping": "%1 to value %2 ~ %3 change %4 ~ %5",
        "connect_color_input_b": "is color sensor %1 to %2 ?",
        "connect_color_input_r": "color of color sensor %1",
        "connect_infinite_reset": "infinite rotation sensor %1 reset %2",
        "connect_infinite_transform_input": "infinite rotation sensor %1 to %2",
        "connect_infinite_mm_diameter": "mm value of infinite rotation sensor %1 diameter %2",
        "connect_port_output": "output %1 port %2 %3",
        "connect_servo_output": "move position of servo motor %1 to %2 %3",
        "connect_dc_output": "rotate dc motor %1 at %2 speed %3",
        "connect_mel_sec_output": "melody %1 sounds for %2 seconds %3",
        "connect_melody_output": "off melody sound %1",
        "connect_fnd_output": "FND on %1 %2",
        "connect_fnd_off": "FND off %1",
        "connect_eeprom_write": "setting the EEPROM %1 address to a value of %2 %3",
        "connect_eeprom_buffset": "calling the value of the EEPROM %1 address into the temporary store %2",
        "connect_buff_read": "value of EEPROM temporary store",
        "roboid_hamster_gripper": "Hamster %1: %2 gripper %3",
        "roboid_hamster_release_gripper": "Hamster %1: release gripper %2",
        "roboid_hamster_boolean": "Hamster %1: %2?",
        "roboid_hamster_play_note": "Hamster %1: play note %2 %3 %4",
        "roboid_hamster_s_hand_found": "HamsterS %1: hand found?",
        "roboid_hamster_s_boolean": "HamsterS %1: %2?",
        "roboid_hamster_s_value": "HamsterS %1: %2",
        "roboid_hamster_s_move_forward_once": "HamsterS %1: move forward once on board %2",
        "roboid_hamster_s_turn_once": "HamsterS %1: turn %2 once on board %3",
        "roboid_hamster_s_move_forward_unit": "HamsterS %1: move forward %2 %3 %4",
        "roboid_hamster_s_move_backward_unit": "HamsterS %1: move backward %2 %3 %4",
        "roboid_hamster_s_turn_unit_in_place": "HamsterS %1: turn %2 %3 %4 in place %5",
        "roboid_hamster_s_pivot_around_unit_in_direction": "HamsterS %1: pivot around %2 %3 %4 in %5 direction %6",
        "roboid_hamster_s_turn_unit_with_radius_in_direction": "HamsterS %1: %2 turn %3 %4 %5 with radius %6 cm in %7 direction %8",
        "roboid_hamster_s_change_both_wheels_by": "HamsterS %1: change wheels by left: %2 right: %3 %4",
        "roboid_hamster_s_set_both_wheels_to": "HamsterS %1: set wheels to left: %2 right: %3 %4",
        "roboid_hamster_s_change_wheel_by": "HamsterS %1: change %2 wheel by %3 %4",
        "roboid_hamster_s_set_wheel_to": "HamsterS %1: set %2 wheel to %3 %4",
        "roboid_hamster_s_follow_line_using": "HamsterS %1: follow %2 line using %3 floor sensor %4",
        "roboid_hamster_s_follow_line_until": "HamsterS %1: follow %2 line until %3 intersection %4",
        "roboid_hamster_s_set_following_speed_to": "HamsterS %1: set following speed to %2 %3",
        "roboid_hamster_s_set_following_gain_to": "HamsterS %1: set following directional variation to %2 %3",
        "roboid_hamster_s_stop": "HamsterS %1: stop %2",
        "roboid_hamster_s_set_led_to": "HamsterS %1: set %2 led to %3 %4",
        "roboid_hamster_s_pick_led": "HamsterS %1: set %2 led to %3 %4",
        "roboid_hamster_s_change_led_by_rgb": "HamsterS %1: change %2 led by r: %3 g: %4 b: %5 %6",
        "roboid_hamster_s_set_led_to_rgb": "HamsterS %1: set %2 led to r: %3 g: %4 b: %5 %6",
        "roboid_hamster_s_clear_led": "HamsterS %1: clear %2 led %3",
        "roboid_hamster_s_play_sound_times": "HamsterS %1: play sound %2 %3 times %4",
        "roboid_hamster_s_play_sound_times_until_done": "HamsterS %1: play sound %2 %3 times until done %4",
        "roboid_hamster_s_change_buzzer_by": "HamsterS %1: change buzzer by %2 %3",
        "roboid_hamster_s_set_buzzer_to": "HamsterS %1: set buzzer to %2 %3",
        "roboid_hamster_s_clear_sound": "HamsterS %1: clear sound %2",
        "roboid_hamster_s_play_note": "HamsterS %1: play note %2 %3 %4",
        "roboid_hamster_s_play_note_for": "HamsterS %1: play note %2 %3 for %4 beats %5",
        "roboid_hamster_s_rest_for": "HamsterS %1: rest for %2 beats %3",
        "roboid_hamster_s_change_tempo_by": "HamsterS %1: change tempo by %2 %3",
        "roboid_hamster_s_set_tempo_to": "HamsterS %1: set tempo to %2 bpm %3",
        "roboid_hamster_s_set_port_to": "HamsterS %1: set port %2 to %3 %4",
        "roboid_hamster_s_change_output_by": "HamsterS %1: change output %2 by %3 %4",
        "roboid_hamster_s_set_output_to": "HamsterS %1: set output %2 to %3 %4",
        "roboid_hamster_s_gripper": "HamsterS %1: %2 gripper %3",
        "roboid_hamster_s_release_gripper": "HamsterS %1: release gripper %2",
        "roboid_hamster_s_write_serial": "HamsterS %1: write %2 %3 to serial %4",
        "roboid_hamster_s_read_serial_until": "HamsterS %1: read serial %2 %3",
        "roboid_hamster_s_set_serial_rate_to": "HamsterS %1: set serial rate to %2 Bd %3",
        "roboid_turtle_boolean": "Turtle %1: %2?",
        "roboid_turtle_pick_head_led": "Turtle %1: set head led to %2 %3",
        "roboid_cheese_value": "Cheese Stick %1: %2",
        "roboid_cheese_boolean": "Cheese Stick %1: %2?",
        "roboid_cheese_play_sound_times": "Cheese Stick %1: play sound %2 %3 times %4",
        "roboid_cheese_play_sound_times_until_done": "Cheese Stick %1: play sound %2 %3 times until done %4",
        "roboid_cheese_change_buzzer_by": "Cheese Stick %1: change buzzer by %2 Hz %3",
        "roboid_cheese_set_buzzer_to": "Cheese Stick %1: set buzzer to %2 Hz %3",
        "roboid_cheese_clear_sound": "Cheese Stick %1: clear sound %2",
        "roboid_cheese_play_note": "Cheese Stick %1: play note %2 %3 %4",
        "roboid_cheese_play_note_for": "Cheese Stick %1: play note %2 %3 for %4 beats %5",
        "roboid_cheese_rest_for": "Cheese Stick %1: rest for %2 beats %3",
        "roboid_cheese_change_tempo_by": "Cheese Stick %1: change tempo by %2 BPM %3",
        "roboid_cheese_set_tempo_to": "Cheese Stick %1: set tempo to %2 BPM %3",
        "roboid_cheese_set_sound_port_to": "Cheese Stick %1: set sound output to %2 %3",
        "roboid_cheese_set_input_mode_to": "Cheese Stick %1: set port %2 to %3 input %4",
        "roboid_cheese_set_input_range_to": "Cheese Stick %1: set input %2 range %3 - %4 to %5 - %6 %7 decimal point %8",
        "roboid_cheese_set_three_input_ranges_to": "Cheese Stick %1: set input %2 range %3 - %4 - %5 to %6 - %7 - %8 %9 decimal point %10",
        "roboid_cheese_analog_input": "Cheese Stick %1: input %2",
        "roboid_cheese_digital_input": "Cheese Stick %1: input %2 %3 ?",
        "roboid_cheese_button_state": "Cheese Stick %1: button %2 %3 ?",
        "roboid_cheese_set_pulse_mode_to": "Cheese Stick %1: set port %2 to %3 input %4",
        "roboid_cheese_pulse_input": "Cheese Stick %1: pulse detected on port %2 ?",
        "roboid_cheese_set_digital_output_to": "Cheese Stick %1: set digital output %2 to %3 %4",
        "roboid_cheese_change_pwm_output_by": "Cheese Stick %1: change pwm output %2 by %3% %4",
        "roboid_cheese_set_pwm_output_to": "Cheese Stick %1: set pwm output %2 to %3% %4",
        "roboid_cheese_change_servo_motor_angle_by": "Cheese Stick %1: change servo motor %2 by %3 degrees %4",
        "roboid_cheese_set_servo_motor_angle_to": "Cheese Stick %1: set servo motor %2 to %3 degrees %4",
        "roboid_cheese_turn_off_servo_motor": "Cheese Stick %1: turn off servo motor %2 %3",
        "roboid_cheese_change_dc_motor_velocity_by": "Cheese Stick %1: change dc motor %2 velocity by %3% %4",
        "roboid_cheese_set_dc_motor_velocity_to": "Cheese Stick %1: set dc motor %2 velocity to %3% %4",
        "roboid_cheese_stop_dc_motor": "Cheese Stick %1: stop dc motor %2 %3",
        "roboid_cheese_rotate_step_motor": "Cheese Stick %1: rotate step motor %2 steps with velocity %3 step/sec %4",
        "roboid_cheese_change_step_motor_velocity_by": "Cheese Stick %1: change step motor velocity by %2 step/sec %3",
        "roboid_cheese_set_step_motor_velocity_to": "Cheese Stick %1: set step motor velocity to %2 step/sec %3",
        "roboid_cheese_stop_off_step_motor": "Cheese Stick %1: %2 step motor %3",
        "roboid_cheese_set_step_motor_mode_to": "Cheese Stick %1: set step motor to %2 mode %3",
        "roboid_cheese_step_count": "Cheese Stick %1: step count",
        "roboid_cheese_set_led_to_color": "Cheese Stick %1: set rgb led %2 to %3 %4 %5",
        "roboid_cheese_pick_led_to": "Cheese Stick %1: set rgb led %2 to %3 %4",
        "roboid_cheese_change_led_by_rgb": "Cheese Stick %1: change rgb led %2 by r: %3 g: %4 b: %5 %6",
        "roboid_cheese_setLed_to_rgb": "Cheese Stick %1: set rgb led %2 to r: %3 g: %4 b: %5 %6",
        "roboid_cheese_clear_led": "Cheese Stick %1: clear rgb led %2 %3",
        "roboid_cheese_set_led_type_to": "Cheese Stick %1: set rgb led %2 to %3 type %4",
        "roboid_cheese_neopixel_set_number_and_type_to": "Cheese Stick %1 neopixel: set %2 leds as %3 %4",
        "roboid_cheese_neopixel_set_all_leds_to_pattern": "Cheese Stick %1 neopixel: set all leds to pattern %2 %3",
        "roboid_cheese_neopixel_set_all_leds_to_color": "Cheese Stick %1 neopixel: set all leds to %2 %3",
        "roboid_cheese_neopixel_pick_all_leds_to": "Cheese Stick %1 neopixel: set all leds to %2 %3",
        "roboid_cheese_neopixel_change_all_leds_by_rgb": "Cheese Stick %1 neopixel: change all leds by r: %2 g: %3 b: %4 %5",
        "roboid_cheese_neopixel_set_all_leds_to_rgb": "Cheese Stick %1 neopixel: set all leds to r: %2 g: %3 b: %4 %5",
        "roboid_cheese_neopixel_clear_all_leds": "Cheese Stick %1 neopixel: clear all leds %2",
        "roboid_cheese_neopixel_set_led_to_color": "Cheese Stick %1 neopixel: set led %2 to %3 %4",
        "roboid_cheese_neopixel_pick_led_to": "Cheese Stick %1 neopixel: set led %2 to %3 %4",
        "roboid_cheese_neopixel_change_led_by_rgb": "Cheese Stick %1 neopixel: change led %2 by r: %3 g: %4 b: %5 %6",
        "roboid_cheese_neopixel_set_led_to_rgb": "Cheese Stick %1 neopixel: set led %2 to r: %3 g: %4 b: %5 %6",
        "roboid_cheese_neopixel_clear_led": "Cheese Stick %1 neopixel: clear led %2 %3",
        "roboid_cheese_neopixel_set_led_range_to_pattern": "Cheese Stick %1 neopixel: set leds (from %2 to %3) to pattern %4 %5",
        "roboid_cheese_neopixel_set_led_range_to_color": "Cheese Stick %1 neopixel: set leds (from %2 to %3 with %4 increments) to %5 %6",
        "roboid_cheese_neopixel_pick_led_range_to": "Cheese Stick %1 neopixel: set leds (from %2 to %3 with %4 increments) to %5 %6",
        "roboid_cheese_neopixel_change_led_range_by_rgb": "Cheese Stick %1 neopixel: change leds (from %2 to %3 with %4 increments) by r: %5 g: %6 b: %7 %8",
        "roboid_cheese_neopixel_set_led_range_to_rgb": "Cheese Stick %1 neopixel: set leds (from %2 to %3 with %4 increments) to r: %5 g: %6 b: %7 %8",
        "roboid_cheese_neopixel_clear_led_range": "Cheese Stick %1 neopixel: clear leds (from %2 to %3 with %4 increments) %5",
        "roboid_cheese_neopixel_shift": "Cheese Stick %1 neopixel: shift %2 pixels %3",
        "roboid_cheese_neopixel_rotate": "Cheese Stick %1 neopixel: rotate %2 pixels %3",
        "roboid_cheese_neopixel_change_brightness_by": "Cheese Stick %1 neopixel: change brightness by %2% %3",
        "roboid_cheese_neopixel_set_brightness_to": "Cheese Stick %1 neopixel: set brightness to %2% %3",
        "roboid_cheese_write_serial": "Cheese Stick %1: write %2 %3 to serial %4",
        "roboid_cheese_read_serial_until": "Cheese Stick %1: read serial %2 %3",
        "roboid_cheese_set_serial_port_to": "Cheese Stick %1: set serial port to %2 %3",
        "roboid_cheese_set_serial_rate_to": "Cheese Stick %1: set serial rate to %2Bd %3",
        "roboid_cheese_serial_input": "Cheese Stick %1: serial input",
        "roboid_cheese_pid_start": "Cheese Stick %1: start %2 %3",
        "roboid_cheese_pid_set_range_to": "Cheese Stick %1 PID: set %2 range %3 - %4 to %5 - %6 %7 decimal point %8",
        "roboid_cheese_pid_set_three_ranges_to": "Cheese Stick %1 PID: set %2 range %3 - %4 - %5 to %6 - %7 - %8 %9 decimal point %10",
        "roboid_cheese_pid_reset_encoder": "Cheese Stick %1 PID: clear encoder %2",
        "roboid_cheese_pid_input": "Cheese Stick %1 PID: %2",
        "roboid_cheese_pid_button_state": "Cheese Stick %1 PID: button %2 %3?",
        "roboid_cheese_hat010_start": "Cheese Stick %1: start HAT-010 5x5 matrix %2",
        "roboid_cheese_hat010_button": "Cheese Stick %1 HAT-010: button %2",
        "roboid_cheese_hat010_button_state": "Cheese Stick %1 HAT-010: button %2 %3?",
        "roboid_cheese_hat010_background_turn_on_xy": "Cheese Stick %1 HAT-010 background: turn on x: %2 y: %3 in %4 %5",
        "roboid_cheese_hat010_background_turn_off_xy": "Cheese Stick %1 HAT-010 background: turn off x: %2 y: %3 %4",
        "roboid_cheese_hat010_background_draw_shape_at_xy": "Cheese Stick %1 HAT-010 background: draw %2 %3 at x: %4 y: %5 %6",
        "roboid_cheese_hat010_background_draw_string_at_xy": "Cheese Stick %1 HAT-010 background: draw %2 string %3 at x: %4 y: %5 %6",
        "roboid_cheese_hat010_background_draw_pattern_at_xy": "Cheese Stick %1 HAT-010 background: draw %2 pattern %3 at x: %4 y: %5 %6",
        "roboid_cheese_hat010_clear": "Cheese Stick %1 HAT-010: clear %2 %3",
        "roboid_cheese_hat010_scroll_by_xy": "Cheese Stick %1 HAT-010: scroll %2 by x: %3 y: %4 %5",
        "roboid_cheese_hat010_sprite_set_to_shape": "Cheese Stick %1 HAT-010 sprite %2: set sprite to %3 %4 %5",
        "roboid_cheese_hat010_sprite_set_to_string": "Cheese Stick %1 HAT-010 sprite %2: set sprite to %3 string %4 %5",
        "roboid_cheese_hat010_sprite_set_to_pattern": "Cheese Stick %1 HAT-010 sprite %2: set sprite to %3 pattern %4 %5",
        "roboid_cheese_hat010_sprite_clear_show_hide": "Cheese Stick %1 HAT-010 sprite %2: %3 sprite %4",
        "roboid_cheese_hat010_sprite_change_positions_by_xy": "Cheese Stick %1 HAT-010 sprite %2: change position by x: %3 y: %4 %5",
        "roboid_cheese_hat010_sprite_set_positions_to_xy": "Cheese Stick %1 HAT-010 sprite %2: set position to x: %3 y: %4 %5",
        "roboid_cheese_hat010_sprite_change_position_by_value": "Cheese Stick %1 HAT-010 sprite %2: change %3 position by %4 %5",
        "roboid_cheese_hat010_sprite_set_position_to_value": "Cheese Stick %1 HAT-010 sprite %2: set %3 position to %4 %5",
        "roboid_cheese_hat010_sprite_rotate": "Cheese Stick %1 HAT-010 sprite %2: rotate %3 %4",
        "roboid_cheese_hat010_sprite_flip_in_direction": "Cheese Stick %1 HAT-010 sprite %2: flip in %3 direction %4",
        "roboid_cheese_hat010_sprite_stamp_to_background": "Cheese Stick %1 HAT-010 sprite %2: stamp to background %3",
        "roboid_cheese_hat010_sprite_position": "Cheese Stick %1 HAT-010 sprite %2: %3 position",
        "roboid_cheese_hat010_sprite_touching_sprite": "Cheese Stick %1 HAT-010 sprite %2: touching sprite %3?",
        "roboid_cheese_hat010_sprite_touching": "Cheese Stick %1 HAT-010 sprite %2: touching %3?",
        "roboid_cheese_hat010_change_brightness_by": "Cheese Stick %1 HAT-010: change brightness by %2% %3",
        "roboid_cheese_hat010_set_brightness_to": "Cheese Stick %1 HAT-010: set brightness to %2% %3",
        "roduino_set_servo_value": "Servo %1 Pin %2˚ %3",
        "roduino_set_pwm_value": "PWM Set pin %1 to %2",
        "roduino_get_sensor_analog_value": "analog %1 Pin %2 value",
        "roduino_get_sensor_digital_value": "digital %1 %2 번 핀 값",
        "robotami_coding_get_analog_value": "value of analog %1",
        "robotami_coding_get_digital_value": "value of digital %1",
        "robotami_coding_set_digital_value": "set digital port %1 for output %2 %3",
        "robotami_coding_set_pwm": "set PWM port %1 for output %2 %3",
        "robotami_coding_set_tone": "play tone on note %1 octave %2 for %3 seconds %4",
        "robotami_coding_set_servo": "set servo motor %1 for angle %2 %3",
        "robotami_coding_set_dcm_value": "set DC motor %1 speed %2, direction %3 %4",
        "robotami_coding_set_dcm_stop": "stop DC motor %1 %2",
        "robotami_coding_set_robot_value": "move robot %2 at speed %1 %3",
        "robotami_coding_set_robot_stop": "stop robot %1",
        "sally_touching_color": "touching %1 ?",
        "sally_is_color_pattern": "color pattern %1 %2 ?",
        "sally_button_state": "button %1 ?",
        "sally_boolean": "%1?",
        "sally_value": "%1",
        "sally_move_forward_unit": "move forward %1 %2 %3",
        "sally_move_backward_unit": "move backward %1 %2 %3",
        "sally_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "sally_pivot_around_wheel_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
        "sally_turn_unit_with_radius_in_direction": "turn %1 %2 %3 with radius %4 cm in %5 direction %6",
        "sally_change_wheels_by_left_right": "change wheels by left: %1 right: %2 %3",
        "sally_set_wheels_to_left_right": "set wheels to left: %1 right: %2 %3",
        "sally_change_wheel_by": "change %1 wheel by %2 %3",
        "sally_set_wheel_to": "set %1 wheel to %2 %3",
        "sally_follow_line": "follow line %1",
        "sally_follow_line_until": "follow line until %1 %2",
        "sally_cross_intersection": "cross intersection %1",
        "sally_turn_at_intersection": "turn %1 at intersection %2",
        "sally_jump_line": "jump to %1 line %2",
        "sally_set_following_speed_to": "set following speed to %1 %2",
        "sally_stop": "stop %1",
        "sally_set_led_to": "set led to %1 %2",
        "sally_pick_led": "set led to %1 %2",
        "sally_change_led_by_rgb": "change led by r: %1 g: %2 b: %3 %4",
        "sally_set_led_to_rgb": "set led to r: %1 g: %2 b: %3 %4",
        "sally_clear_led": "clear led %1",
        "sally_play_sound_times": "play sound %1 %2 times %3",
        "sally_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "sally_change_buzzer_by": "change buzzer by %1 %2",
        "sally_set_buzzer_to": "set buzzer to %1 %2",
        "sally_clear_sound": "clear sound %1",
        "sally_play_note": "play note %1 %2 %3",
        "sally_play_note_for_beats": "play note %1 %2 for %3 beats %4",
        "sally_rest_for_beats": "rest for %1 beats %2",
        "sally_change_tempo_by": "change tempo by %1 %2",
        "sally_set_tempo_to": "set tempo to %1 bpm %2",
        "sciencecube_temper": "temper sensor",
        "sciencecube_current": "current sensor",
        "sciencecube_pressue": "pressue sensor",
        "sciencecube_voltage": "voltage sensor",
        "sciencecube_ph": "ph sensor",
        "sciencecube_force": "force sensor",
        "sciencecube_motion": "motion sensor",
        "ssboard_nano_buzzer_onoff": "Speakers Beep %1 Playing Second %2",
        "ssboard_nano_set_digital_buzzer": "Speakers  %1 Octave %2 Play %3 seconds %4",
        "ssboard_nano_set_motor_speed": "Set DC motor left speed %1  right speed %2 %3",
        "ssboard_nano_motor_stop": "Stop DC Motor %1",
        "ssboard_nano_set_servo": "Servo motor %1 pin angle %2 movement %3",
        "ssboard_nano_set_rgbled_onoff": "RGB LED %1 First Color %2 %3",
        "ssboard_nano_rgbled_seting": "Setting %2 brightness %3 on RGB LED %1 pin %4",
        "ssboard_nano_set_rgbled_value": "RGB LED %1 st Red %2 Green %3 Blue %4",
        "ssboard_nano_rgbled_all_onoff": "RGB LED %1 %2",
        "ssboard_nano_digital_onoff": "Setting up digital %1 pin %2 %3",
        "ssboard_nano_get_digital_value": "Read digital %1 pins",
        "ssboard_nano_get_analog_value": "Analog %1 pin read",
        "ssboard_nano_set_pwm": "Send %2 to pin %1 %3",
        "ssboard_nano_set_ultrasonic": "Connecting to the ultrasonic sensor setting trigger %1 pin, echo %2 pin %3",
        "ssboard_nano_get_usonic_value": "Reading ultrasonic sensor values",
        "ssboard_nano_set_temp": "Connecting to the temperature sensor %1 pin %2",
        "ssboard_nano_get_temp_value": "Reading temperature sensor values",
        "ssboard_nano_set_i2c": "Connect I2Cport %1 %2",
        "ssboard_nano_get_color_value": "Reading the color sensor %1 value",
        "ssboard_nano_get_gyro_value": "Read gyro sensor %1 value",
        "ssboard_nano_set_lcd_string": "lcd Display %3 on line %1 and line %2 %4",
        "ssboard_nano_set_lcd_init": "setting lcd : I2C address 0x%1 , horizontal line number %2 , vertical line number %3 %4",
        "ssboard_nano_set_lcd_clear": "Clear lcd %1",
        "ssboard_nano_get_analog_mapping": "%1 value %2 to %3 ; to %4 to %5 conversion value ",
        "thinkboard_buzzer_onoff": "Buzzer %1 %2",
        "thinkboard_set_digital_buzzer": "Play Buzzer %1 Octave %2 Note %3 Sec %4",
        "thinkboard_get_digital_value": "Port %1 Button Sensor Value",
        "thinkboard_digital_button_pressed": " Port %1 Button Sensor Pressed",
        "thinkboard_get_analog_value": "Port %1 and %2 Sensor Value",
        "thinkboard_get_analog_mapping": "Map analog %1 pin %2 Sensor Value from %3 ~ %4 to %5 ~ %6",
        "thinkboard_get_distsensor_value": "Port %1 Distance(IR) Sensor Value",
        "thinkboard_get_analog_ir_mapping": "Map analog %1 Distance(IR) Sensor Value from %2 ~ %3 to %4 ~ %5",
        "thinkboard_get_usonic_value": "Port %1 Ultrasonic Sensor Value",
        "thinkboard_get_analog_usonic_mapping": "Map analog %1 Ultrasonic Sensor Value from %2 ~ %3 to %4 ~ %5",
        "thinkboard_get_analog_temp_value": "Port %1 and %2 Sensor Value",
        "thinkboard_digital_Laser_onoff": "Port %1 and Laserpoint %2 %3",
        "thinkboard_digital_rgbled_onoff": "RGB LED %1 Color Turn On %2",
        "thinkboard_digital_rgbled_off": "RGB LED Turn Off %1",
        "thinkboard_get_digital_servo_value": "Port %1 180 Servo Motor Angle Value",
        "thinkboard_digital_set_servo_angle": "Set Port %1 180 Servor Motor Angle Value to %2 %3",
        "thinkboard_digital_set_servo_direction": "Set Port %1 180 Servor Motor Direction 1 Angle to %2 %3",
        "thinkboard_digital_set_servo_stop": "Stop Port %1 180 Servo Motor %2",
        "thinkboard_get_digital_servo_360_value": "Port %1 360 Servo Motor Angle Value",
        "thinkboard_digital_set_servo_360_angle": "Set Port %1 360 Servor Motor Angle Value to %2 %3",
        "thinkboard_digital_set_servo_360_stop": "Stop Port %1 360 Servo Motor %2",
        "thinkboard_digital_set_motor_direction": "Set Port %1 DC Motor Direction to %2 %3",
        "thinkboard_digital_set_motor_speed": "Set Port %1 의 DC Motor Speed to %2 % %3",
        "thinkboard_digital_motor_stop": "Stop Port %1 DC Motor %2",
        "truetrue_set_head_colorled": "Change LED color to %1 %2",
        "truetrue_set_move": "Move TRUETRUE %1 forever %2",
        "truetrue_set_sec_move": "Move TRUETRUE %1 for %2 second(s) %3",
        "truetrue_set_rotate": "Rotate TRUETRUE %1 forever %2",
        "truetrue_set_sec_rotate": "Rotate TRUETRUE %1 for %2 Second(s) %3",
        "truetrue_set_grid_block": "Move TRUETRUE %1 block(s) on the GRID %2",
        "truetrue_set_grid_rotate": "Rotate TRUETRUE %1 %2 time(s) on the GRID %3",
        "turtle_boolean": "%1?",
        "turtle_pick_head_led": "set head led to %1 %2",
        "uglybot_led": "%1 LED %2 %3",
        "uglybot_buzzer": "%1 음을 %2초동안 소리내기 %3",
        "uglybot_motor": "%1모터를 %2세기로 회전 %3",
        "uglybot_move": "%1(으)로 %2cm 이동 %3",
        "uglybot_rotation": "%1(으)로 %2도 회전 %3",
        "uglybot_servo": "%1번 서보모터를 %2도 회전 %3",
        "uglybot_irpin": "%1 적외선 센서 %2 %3",
        "uglybot_button": "버튼 값",
        "uglybot_ir": "%1 적외선센서 값",
        "uglybot_ultrasonic": "초음파센서 값",
        "uglybot_joystick": "%1 조이스틱 값",
        "uglybot_tilt": "%1 기울기 값",
        "uglybot_sound": "소리센서 값",
        "uglybot_illum": "조도센서 값",
        "uglybot_left": "왼쪽",
        "uglybot_mid": "중간",
        "uglybot_right": "오른쪽",
        "uglybot_on": "켜기",
        "uglybot_off": "끄기",
        "uglybot_do": "도",
        "uglybot_re": "레",
        "uglybot_mi": "미",
        "uglybot_fa": "파",
        "uglybot_sol": "솔",
        "uglybot_ra": "라",
        "uglybot_si": "시",
        "uglybot_front": "앞",
        "uglybot_back": "뒤",
        "uglybot_cc": "시계",
        "uglybot_rcc": "반시계",
        "uglybot_topbottom": "앞뒤",
        "uglybot_leftright": "좌우",
        "uoalbert_value": "%1",
        "uoalbert_hand_found": "hand found?",
        "uoalbert_touch_state": "touch sensor %1 ?",
        "uoalbert_is_oid": "oid %1?",
        "uoalbert_boolean": "%1?",
        "uoalbert_move_forward_unit": "move forward %1 %2 %3",
        "uoalbert_move_backward_unit": "move backward %1 %2 %3",
        "uoalbert_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "uoalbert_pivot_around_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
        "uoalbert_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "uoalbert_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "uoalbert_change_wheel_by": "change %1 wheel by %2 %3",
        "uoalbert_set_wheel_to": "set %1 wheel to %2 %3",
        "uoalbert_stop": "stop %1",
        "uoalbert_set_board_size": "set board size to width: %1 height: %2 %3",
        "uoalbert_set_eye_to": "set %1 eye to %2 %3",
        "uoalbert_pick_eye": "set %1 eye to %2 %3",
        "uoalbert_change_eye_by_rgb": "change %1 eye by r: %2 g: %3 b: %4 %5",
        "uoalbert_set_eye_to_rgb": "set %1 eye to r: %2 g: %3 b: %4 %5",
        "uoalbert_clear_eye": "clear %1 eye %2",
        "uoalbert_play_sound_times": "play sound %1 %2 times %3",
        "uoalbert_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "uoalbert_change_buzzer_by": "change buzzer by %1 %2",
        "uoalbert_set_buzzer_to": "set buzzer to %1 %2",
        "uoalbert_clear_sound": "clear sound %1",
        "uoalbert_play_note": "play note %1 %2 %3",
        "uoalbert_play_note_for": "play note %1 %2 for %3 beats %4",
        "uoalbert_rest_for": "rest for %1 beats %2",
        "uoalbert_change_tempo_by": "change tempo by %1 %2",
        "uoalbert_set_tempo_to": "set tempo to %1 bpm %2",
        "zerone_is_gesture": "gesture %1?",
        "zerone_touching_color": "touching %1?",
        "zerone_boolean": "battery %1?",
        "zerone_value": "%1",
        "zerone_start_sensor": "start %1 sensor %2",
        "zerone_move_forward_unit": "move forward %1 %2 %3",
        "zerone_move_backward_unit": "move backward %1 %2 %3",
        "zerone_turn_unit_in_place": "turn %1 %2 %3 in place %4",
        "zerone_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
        "zerone_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
        "zerone_change_wheel_by": "change %1 wheel by %2 %3",
        "zerone_set_wheel_to": "set %1 wheel to %2 %3",
        "zerone_stop": "stop %1",
        "zerone_set_led_to": "set %1 led to %2 %3",
        "zerone_pick_led": "set %1 led to %2 %3",
        "zerone_change_led_by_rgb": "change %1 led by r: %2 g: %3 b: %4 %5",
        "zerone_set_led_to_rgb": "set %1 led to r: %2 g: %3 b: %4 %5",
        "zerone_clear_led": "clear %1 led %2",
        "zerone_play_sound_times": "play sound %1 %2 times %3",
        "zerone_play_sound_times_until_done": "play sound %1 %2 times until done %3",
        "zerone_change_buzzer_by": "change buzzer by %1 %2",
        "zerone_set_buzzer_to": "set buzzer to %1 %2",
        "zerone_clear_sound": "clear sound %1",
        "zerone_play_note": "play note %1 %2 %3",
        "zerone_play_note_for": "play note %1 %2 for %3 beats %4",
        "zerone_rest_for": "rest for %1 beats %2",
        "zerone_change_tempo_by": "change tempo by %1 %2",
        "zerone_set_tempo_to": "set tempo to %1 bpm %2"
    },
    "TextCoding": {
        "block_name": "Block Name",
        "title_syntax": "Syntax Error",
        "title_converting": "Converting Error",
        "message_syntax_default": "Syntax error occured",
        "message_syntax_unexpected_token": "Unexpected token exist",
        "message_syntax_reserved_token": "Unavailable variable name.",
        "message_syntax_reserved_token_list": "Unavailable list name.",
        "message_syntax_unexpected_character": "Unexpected characters exist",
        "message_syntax_unexpected_indent": "Unexpected indent exist",
        "message_conv_default": "Unsupported code exists",
        "message_conv_no_support": "Unconvertable code exists",
        "message_conv_no_variable": "Variable did not declare",
        "message_conv_no_list": "List did not declare",
        "message_conv_no_object": "Object can't convert",
        "message_conv_no_function": "Function can't convert",
        "message_conv_no_entry_event_function": "Entry Event Function can't exist within other functions.",
        "message_conv_undefined_function": "Undefined instruction. Please make sure you instruction correctly.",
        "message_conv_is_expect1": "Syntax error. Please make sure you type ",
        "message_conv_is_expect2": " correctly.",
        "message_conv_instead": "Syntax error. It should be %2 instead of %1.",
        "message_conv_is_wrong1": "Syntax error. ",
        "message_conv_is_wrong2": " are not allowed to be there.",
        "message_conv_or": " or ",
        "subject_syntax_default": "ETC",
        "subject_syntax_token": "Token",
        "subject_syntax_character": "Character",
        "subject_syntax_indent": "Indent",
        "subject_conv_default": "ETC",
        "subject_conv_general": "General",
        "subject_conv_variable": "Variable",
        "subject_conv_list": "List",
        "subject_conv_object": "Object",
        "subject_conv_function": "Function",
        "alert_variable_empty_text": "You can't convert into the text mode if there is empty text among registered variables.",
        "alert_list_empty_text": "You can't convert into the text mode if there is empty text among registered lists.",
        "alert_function_name_field_multi": "You can't convert into the text mode if there is name field block over two times among registered functions.",
        "alert_function_name_disorder": "You can't convert into the text mode if name field is behind than string/number or judgement param field among registered functions.",
        "alert_function_has_boolean": "If you convert into the text mode and then back to block coding, the [Judgment] used in the function is converted to [Character/Number].",
        "alert_function_editor": "Youn can't convert into the text mode in the middle of function creation or editing.",
        "alert_function_no_support": "Youn can't use the function creation or editing in the text mode.",
        "alert_list_no_support": "Youn can't use the list creation or editing in the text mode.",
        "alert_variable_no_support": "Youn can't use the variable creation or editing in the text mode.",
        "alert_signal_no_support": "Youn can't use the signal creation or editing in the text mode.",
        "alert_legacy_no_support": "Mode switch is not allowed due to inconvertible blocks",
        "alert_variable_empty_text_add_change": "The empty text can't be included in variable name.",
        "alert_list_empty_text_add_change": "The empty text can't be included in list name.",
        "alert_list_contains_exceed_length_value": "You can't convert into the text mode if more than 15 digits are entered in the list item.",
        "alert_function_name_empty_text_add_change": "The empty text can't be included in function name.",
        "alert_no_save_on_error": "The code with an error can't save.",
        "alert_api_no_support": "If Extension, Data analysis, and AI blocks are assembled,\nthey can't be changed to the Entry Python mode.\nAre you sure you want to delete all of these blocks\nand change to Entry Python mode?",
        "warn_unnecessary_arguments": "&(calleeName)(); command doesn't require value within parentheses. (line:&(lineNumber))",
        "python_code": "'s python code",
        "eof": "line change",
        "newline": "line change",
        "indent": "indentation",
        "num": "number",
        "string": "string",
        "name": "variable name"
    },
    "PythonHelper": {
        "when_run_button_click_desc": "[시작하기]버튼을 클릭하면 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_run_button_click_exampleCode": "def when_start():\n    Entry.print(\\\"안녕!\\\")",
        "when_run_button_click_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕!\\\"이라 말합니다.",
        "when_some_key_pressed_desc": "A키를 누르면 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_some_key_pressed_elements": "A-- 아래 선택지 중 하나\n① 알파벳 : \\\"A\\\", \\\"B\\\" ~ \\\"Z\\\" 등(소문자 가능)\n② 숫자 : 1, 2, 3, 4 ~ 9, 0\n③ 특수키 : \\\"space\\\", \\\"enter\\\"\n④ 방향키 : \\\"up\\\", \\\"down\\\", \\\"right\\\", \\\"left\\\"",
        "when_some_key_pressed_exampleCode": "def when_press_key(\\\"W\\\"):\n    Entry.move_to_direction(10)\n\ndef when_press_key(1):\n    Entry.add_size(10)",
        "when_some_key_pressed_exampleDesc": "W키를 누르면 오브젝트가 이동방향으로 10만큼 이동하고, 1키를 누르면 오브젝트의 크기가 10만큼 커집니다.",
        "mouse_clicked_desc": "마우스를 클릭했을 때 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "mouse_clicked_exampleCode": "def when_click_mouse_on():\n    Entry.add_size(10)\n    Entry.move_to_direction(10)",
        "mouse_clicked_exampleDesc": "마우스를 클릭하면 오브젝트의 크기가 10만큼 커지면서 이동방향으로 10만큼 이동합니다.",
        "mouse_click_cancled_desc": "마우스 클릭을 해제했을 때 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "mouse_click_cancled_exampleCode": "def when_click_mouse_off():\n    Entry.move_to_direction(-10)\n\ndef when_click_mouse_on():\n    Entry.move_to_direction(10)",
        "mouse_click_cancled_exampleDesc": "마우스를 클릭하면 오브젝트가 이동방향으로 10만큼 이동하고, 마우스 클릭을 해제하면 오브젝트가 이동방향으로 -10만큼 이동합니다.",
        "when_object_click_desc": "해당 오브젝트를 클릭했을 때 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_object_click_exampleCode": "def when_click_object_on():\n    Entry.print_for_sec(\\\"회전!\\\", 0.5)\n    Entry.add_rotation(90)",
        "when_object_click_exampleDesc": "오브젝트를 클릭하면 오브젝트가 \\\"회전!\\\"이라 말하고, 90도 만큼 회전합니다.",
        "when_object_click_canceled_desc": "해당 오브젝트 클릭을 해제했을 때 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_object_click_canceled_exampleCode": "def when_click_object_on():\n    Entry.add_rotation(90)\n\ndef when_click_object_off():\n    Entry.add_rotation(-90)",
        "when_object_click_canceled_exampleDesc": "오브젝트를 클릭하면 오브젝트가 90도 만큼 회전하고, 오브젝트 클릭을 해제하면 오브젝트가 -90도 만큼 회전합니다.",
        "when_message_cast_desc": "A 신호를 받으면 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.\n만약 A 신호가 없으면  [속성] 탭에 A 신호가 자동 생성됩니다.",
        "when_message_cast_elements": "A-- \\\"신호 이름\\\"",
        "when_message_cast_exampleCode": "def when_click_mouse_on():\n    Entry.send_signal(\\\"신호\\\")\n\ndef when_get_signal(\\\"신호\\\"):\n    Entry.print_for_sec(\\\"안녕! 반가워\\\", 0.5)",
        "when_message_cast_exampleDesc": "마우스를 클릭하면 \\\"신호\\\"를 보내고, \\\"신호\\\"를 받았을때 \\\"안녕! 반가워\\\"라고 0.5초간 말합니다.",
        "message_cast_desc": "A에 입력된 신호를 보냅니다.\n만약 A 신호가 없으면  [속성] 탭에 A 신호가 자동 생성됩니다.",
        "message_cast_elements": "A-- \\\"신호 이름\\\"",
        "message_cast_exampleCode": "#\\\"오브젝트1\\\"의 파이선 코드\ndef when_start():\n    Entry.print_for_sec(\\\"안녕! 넌 몇살이니?\\\", 2)\n    Entry.send_signal(\\\"신호\\\")\n\n#\\\"오브젝트2\\\"의 파이선 코드\ndef when_get_signal(\\\"신호\\\"):\n    Entry.print_for_sec(\\\"안녕? 난 세 살이야.\\\", 2)",
        "message_cast_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"오브젝트1\\\"이 \\\"안녕! 넌 몇살이니?\\\"라고 2초간 말하고 \\\"신호를 보냅니다., \\\"오브젝트2\\\"가 \\\"신호\\\"를 받았을때 \\\"안녕? 난 세 살이야.\\\"라고 2초간 말합니다.",
        "message_cast_wait_desc": "A에 입력된 신호를 보내고, 해당 신호를 받는 명령어들의 실행이 끝날 때까지 기다립니다.\n만약 A 신호가 없으면  [속성] 탭에 A 신호가 자동 생성됩니다.",
        "message_cast_wait_elements": "A-- \\\"신호 이름\\\"",
        "message_cast_wait_exampleCode": "#\\\"오브젝트1\\\"의 파이선 코드\ndef when_start():\n    Entry.print_for_sec(\\\"숨바꼭질하자!\\\", 2)\n    Entry.send_signal_wait(\\\"신호\\\")\n    Entry.hide()\n\n#\\\"오브젝트2\\\"의 파이선 코드\ndef when_get_signal(\\\"신호\\\"):\n    Entry.print_for_sec(\\\"그래!\\\", 2)",
        "message_cast_wait_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"오브젝트1\\\"이 \\\"숨바꼭질하자!\\\"라고 2초 동안 말하고 \\\"신호\\\"를 보낸 후 기다립니다. \\\"오브젝트2\\\"가 \\\"신호\\\"를 받으면 \\\"그래!\\\"를 2초 동안 말합니다. \\\"오브젝트1\\\"이 그 후에 모양을 숨깁니다.",
        "when_scene_start_desc": "장면이 시작되면 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_scene_start_exampleCode": "#\\\"장면 1\\\"의 파이선 코드\ndef when_start():\n    Entry.print_for_sec(\\\"다른 곳으로 가볼까?\\\", 2)\n    Entry.start_scene(\\\"장면 2\\\")\n\n#\\\"장면 2\\\"의 파이선 코드\ndef when_start_scene():\n    Entry.print(\\\"여기가 어디지?\\\")",
        "when_scene_start_exampleDesc": "\\\"장면 1\\\"에서 [시작하기]버튼을 클릭하면 \\\"다른 곳으로 가볼까?\\\"라고 2초간 말하고, \\\"장면 2\\\"가 시작됩니다. \\\"장면 2\\\"가 시작되면 오브젝트가 \\\"여기가 어디지?\\\"라고 말합니다.",
        "start_scene_desc": "A 장면을 시작합니다.",
        "start_scene_elements": "A-- \\\"장면 이름\\\"",
        "start_scene_exampleCode": "#\\\"장면 1\\\"의 파이선 코드\ndef when_click_object_on():\n    Entry.start_scene(\\\"장면 2\\\")",
        "start_scene_exampleDesc": "\\\"장면 1\\\"에서 해당 오브젝트를 클릭하면 \\\"장면 2\\\"가 시작됩니다.",
        "start_neighbor_scene_desc": "A에 입력한 다음 또는 이전 장면을 시작합니다.",
        "start_neighbor_scene_elements": "A-- 아래 선택지 중 하나\n① 다음 장면: \\\"next\\\" 또는 \\\"다음\\\"\n② 이전 장면: \\\"prev\\\" 또는 \\\"이전\\\"",
        "start_neighbor_scene_exampleCode": "#\\\"장면 1\\\"의 파이선 코드\ndef when_press_key(\\\"right\\\"):\n    Entry.start_scene_of(\\\"next\\\")\n\n#\\\"장면 2\\\"의 파이선 코드\ndef when_press_key(\\\"left\\\"):\n    Entry.start_scene_of(\\\"prev\\\")",
        "start_neighbor_scene_exampleDesc": "\\\"장면 1\\\"에서 오른쪽화살표키를 누르면 다음 장면이, \\\"장면 2\\\"에서 왼쪽화살표키를 누르면 이전 장면이 시작됩니다.",
        "wait_second_desc": "A초만큼 기다린 후 다음 블록을 실행합니다.",
        "wait_second_elements": "A-- 초에 해당하는 수 입력",
        "wait_second_exampleCode": "def when_start():\n    Entry.add_effect(\\\"color\\\", 10)\n    Entry.wait_for_sec(2)\n    Entry.add_size(10)",
        "wait_second_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트에 색깔효과를 10만큼 주고, 2초동안 기다린 다음 크기를 10만큼 커지게 합니다.",
        "repeat_basic_desc": "아래 명령어들을 A번 반복하여 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "repeat_basic_elements": "A-- 반복할 횟수 입력",
        "repeat_basic_exampleCode": "def when_start():\n    for i in range(10):\n        Entry.move_to_direction(10)\n        Entry.stamp()",
        "repeat_basic_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 이동방향으로 10만큼 이동하고, 도장찍는 행동을 10번 반복합니다.",
        "repeat_inf_desc": "A 판단이 True인 동안 아래 명령어들을 반복 실행합니다. A에 True를 입력하면 계속 반복됩니다. \n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "repeat_inf_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "repeat_inf_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        Entry.bounce_on_edge()",
        "repeat_inf_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 계속해서 이동방향으로 10만큼 이동하고, 벽에 닿으면 튕깁니다.",
        "repeat_while_true_desc": "A 판단이 True가 될 때까지 아래 명령어들을 반복 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "repeat_while_true_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "repeat_while_true_exampleCode": "def when_start():\n    while not Entry.is_key_pressed(\\\"space\\\"):\n        Entry.add_rotation(90)",
        "repeat_while_true_exampleDesc": "[시작하기]버튼을 클릭하면 스페이스키를 누를때까지 오브젝트가 90도 만큼 회전합니다.",
        "stop_repeat_desc": "Stops the closest block that encloses this block.\n         It works with various C-shaped blocks like 'repeat' block.",
        "stop_repeat_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        if Entry.is_key_pressed(\\\"enter\\\"):\n            break",
        "stop_repeat_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 이동방향으로 10만큼 계속 이동합니다. 엔터키를 누르면 반복이 중단됩니다.",
        "_if_desc": "A 부분의 판단이 True이면 if A:아래 명령어들을 실행하고, False이면 실행하지 않습니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "_if_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "_if_exampleCode": "def when_click_mouse_on():\n    if (Entry.value_of_mouse_pointer(\\\"x\\\") > 0):\n        Entry.print_for_sec(\\\"오른쪽!\\\", 0.5)",
        "_if_exampleDesc": "마우스를 클릭했을 때 마우스 x좌표가 0보다 크면 오브젝트가 \\\"오른쪽!\\\"이라고 0.5초 동안 말합니다.",
        "if_else_desc": "A 부분의 판단이 True이면 if A: 아래 명령어들을 실행하고, False이면 else: 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "if_else_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "if_else_exampleCode": "def when_click_mouse_on():\n    if Entry.is_touched(\\\"mouse_pointer\\\"):\n        Entry.print(\\\"닿았다!\\\")\n    else:\n        Entry.print(\\\"안 닿았다!\\\")",
        "if_else_exampleDesc": "마우스를 클릭했을 때 마우스포인터가 오브젝트에 닿았으면 \\\"닿았다!\\\"를 그렇지 않으면 \\\"안 닿았다!\\\"를 말합니다.",
        "wait_until_true_desc": "A 부분의 판단이 True가 될 때까지 코드의 실행을 멈추고 기다립니다.",
        "wait_until_true_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "wait_until_true_exampleCode": "def when_start():\n    Entry.print(\\\"엔터를 눌러봐!\\\")\n    Entry.wait_until(Entry.is_key_pressed(\\\"enter\\\"))\n    Entry.print(\\\"잘했어!\\\")",
        "wait_until_true_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"엔터를 눌러봐!\\\"라 말하고, 엔터키를 누를 때까지 기다립니다. 엔터키를 누르면 \\\"잘했어!\\\"라 말합니다.",
        "stop_object_desc": "A코드의 실행을 중지합니다.",
        "stop_object_elements": "A-- 아래 선택지 중 하나\n① \\\"all\\\":  모든 오브젝트의 모든 코드\n② \\\"self\\\" : 해당 오브젝트의 모든 코드\n③ \\\"this\\\": 이 명령어가 포함된 코드\n④ \\\"others\\\" : 해당 오브젝트의 코드 중 이 명령어가 포함된 코드를 제외한 모든 코드<br/>⑤ \\\"ohter_objects\\\" : 이 오브젝트를 제외한 다른 모든 오브젝트의 코드",
        "stop_object_exampleCode": "def when_start():\n    while True:\n        Entry.move_to(\\\"mouse_pointer\\\")\n\ndef when_press_key(\\\"space\\\"):\n    Entry.stop_code(\\\"all\\\")\n",
        "stop_object_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 계속해서 마우스포인터 위치로  이동합니다. 스페이스키를 누르면 모든 코드의 실행이 중지됩니다.",
        "restart_project_desc": "작품을 처음부터 다시 실행합니다.",
        "restart_project_exampleCode": "def when_start():\n    while True:\n        Entry.add_size(10)\n\ndef when_press_key(\\\"enter\\\"):\n    Entry.start_again()",
        "restart_project_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 오브젝트의 크기가 커집니다. 엔터키를 누르면 작품을 처음부터 다시 실행합니다.",
        "when_clone_start_desc": "해당 오브젝트의 복제본이 새로 생성되었을 때 아래 명령어들을 실행합니다.\n아래 명령어는 [Tab]키를 통해 들여쓰기합니다.",
        "when_clone_start_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\\\"self\\\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))",
        "when_clone_start_exampleDesc": "[시작하기]버튼을 클릭하면 자신의 복제본 5개를 만듭니다. 복제본이 새로 생성되었을때 복제본의 x좌표를 -200에서 200사이의 무작위수로 정합니다.",
        "create_clone_desc": "A 오브젝트의 복제본을 생성합니다.",
        "create_clone_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"self\\\" 또는 \\\"자신\\\"",
        "create_clone_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\\\"self\\\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))",
        "create_clone_exampleDesc": "[시작하기]버튼을 클릭하면 자신의 복제본 5개를 만듭니다. 복제본이 새로 생성되었을때 복제본의 x좌표를 -200에서 200사이의 무작위수로 정합니다.",
        "delete_clone_desc": "Entry.make_clone_of(A) 명령에 의해 생성된 복제본을 삭제합니다.",
        "delete_clone_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\\\"자신\\\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))\n\ndef when_click_object_on():\n    Entry.remove_this_clone()",
        "delete_clone_exampleDesc": "[시작하기]버튼을 클릭하면 자신의 복제본 5개를 만듭니다. 복제본이 새로 생성되었을때 복제본의 x좌표를 -200에서 200사이의 무작위수로 정합니다. 복제본을 클릭하면 클릭된 복제본을 삭제합니다.",
        "remove_all_clones_desc": "해당 오브젝트의 모든 복제본을 삭제합니다.",
        "remove_all_clones_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\\\"자신\\\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))\n\ndef when_press_key(\\\"space\\\"):\n    Entry.remove_all_clone()",
        "remove_all_clones_exampleDesc": "[시작하기]버튼을 클릭하면 자신의 복제본 5개를 만듭니다. 복제본이 새로 생성되었을때 복제본의 x좌표를 -200에서 200사이의 무작위수로 정합니다. 스페이스 키를 누르면 모든 복제본을 삭제합니다.",
        "move_direction_desc": "A만큼 오브젝트의 이동방향 화살표가 가리키는 방향으로 움직입니다.",
        "move_direction_elements": "A-- 이동할 거리에 해당하는 수",
        "move_direction_exampleCode": "def when_start():\n    Entry.move_to_direction(10)",
        "move_direction_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 이동방향으로 10만큼 이동합니다.",
        "bounce_wall_desc": "오브젝트가 화면 끝에 닿으면 튕겨져 나옵니다.",
        "bounce_wall_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        Entry.bounce_on_edge()",
        "bounce_wall_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 계속해서 이동방향으로 10만큼 이동하고, 벽에 닿으면 튕깁니다.",
        "move_x_desc": "오브젝트의 x좌표를 A만큼 바꿉니다.",
        "move_x_elements": "A-- x좌표의 변화 값\n① 양수: 오브젝트가 오른쪽으로 이동합니다.\n② 음수: 오브젝트가 왼쪽으로 이동합니다.",
        "move_x_exampleCode": "def when_start():\n    Entry.add_x(10)\n    Entry.wait_for_sec(2)\n    Entry.add_x(-10)",
        "move_x_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오른쪽으로 10만큼 이동하고 2초 동안 기다린 후 왼쪽으로 10만큼 이동합니다.",
        "move_y_desc": "오브젝트의 y좌표를 A만큼 바꿉니다.",
        "move_y_elements": "A-- y좌표의 변화 값\n① 양수: 오브젝트가 위쪽으로 이동합니다.\n② 음수: 오브젝트가 아래쪽으로 이동합니다.",
        "move_y_exampleCode": "def when_start():\n    Entry.add_y(10)\n    Entry.wait_for_sec(2)\n    Entry.add_y(-10)",
        "move_y_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 위쪽으로 10만큼 이동하고 2초 동안 기다린 후 아래쪽으로 10만큼 이동합니다.",
        "move_xy_time_desc": "오브젝트가 x와 y좌표를 각각 A와 B만큼 C초에 걸쳐 서서히 바꿉니다.",
        "move_xy_time_elements": "A-- x좌표의 변화 값\n① 양수: 오브젝트가 오른쪽으로 이동합니다.\n② 음수: 오브젝트가 왼쪽으로 이동합니다.%nextB-- y좌표의 변화 값\n① 양수: 오브젝트가 위쪽으로 이동합니다.\n② 음수: 오브젝트가 아래쪽으로 이동합니다.%nextC-- 이동하는 시간(초)",
        "move_xy_time_exampleCode": "def when_start():\n    Entry.add_xy_for_sec(100, 100, 2)\n    Entry.add_xy_for_sec(-100, -100, 2)",
        "move_xy_time_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오른쪽 위로 100만큼 2초 동안 이동한 후 왼쪽 아래로 100만큼 2초 동안 이동합니다.",
        "locate_x_desc": "오브젝트의 x좌표를 A로 정합니다. (오브젝트의 중심점이 기준이 됩니다.)",
        "locate_x_elements": "A-- 이동할 x좌표",
        "locate_x_exampleCode": "def when_press_key(\\\"right\\\"):\n    Entry.set_x(100)\n\ndef when_press_key(\\\"left\\\"):\n    Entry.set_x(-100)\n",
        "locate_x_exampleDesc": "오른쪽화살표키를 누르면 오브젝트의 x좌표를 100으로 정하고, 왼쪽화살표키를 누르면 오브젝트의 x좌표를 -100으로 정합니다.",
        "locate_y_desc": "오브젝트의 y좌표를 A로 정합니다. (오브젝트의 중심점이 기준이 됩니다.)",
        "locate_y_elements": "B-- 이동할 y좌표",
        "locate_y_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.set_y(100)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.set_y(-100)",
        "locate_y_exampleDesc": "위쪽화살표키를 누르면 오브젝트의 y좌표를 100으로 정하고, 아래쪽화살표키를 누르면 오브젝트의 y좌표를 -100으로 정합니다.",
        "locate_xy_desc": "오브젝트가 좌표(A, B)로 이동합니다. (오브젝트의 중심점이 기준이 됩니다.)",
        "locate_xy_elements": "A-- 이동할 x좌표%nextB-- 이동할 y좌표",
        "locate_xy_exampleCode": "def when_click_mouse_on():\n    Entry.set_xy(0, 0)\n\ndef when_press_key(\\\"right\\\"):\n    Entry.add_x(10)\n\ndef when_press_key(\\\"up\\\"):\n    Entry.add_y(10)",
        "locate_xy_exampleDesc": "오른쪽화살표키를 누르면 오브젝트의 x좌표를 10만큼 바꾸고, 위쪽화살표키를 누르면 오브젝트의 y좌표를 10만큼 바꿉니다. 마우스를 클릭하면 오브젝트의 x, y좌표를 0으로 정합니다.",
        "locate_xy_time_desc": "오브젝트가 좌표(A, B)로 C초에 걸쳐 서서히 이동합니다.(오브젝트의 중심점이 기준이 됩니다.)",
        "locate_xy_time_elements": "A-- 이동할 x좌표%nextB-- 이동할 y좌표%nextC-- 이동하는 시간",
        "locate_xy_time_exampleCode": "def when_click_mouse_on():\n    Entry.set_xy_for_sec(0, 0, 2)\n\ndef when_press_key(\\\"right\\\"):\n    Entry.add_x(10)\n\ndef when_press_key(\\\"up\\\"):\n    Entry.add_y(10)",
        "locate_xy_time_exampleDesc": "오른쪽화살표키를 누르면 오브젝트의 x좌표를 10만큼 바꾸고, 위쪽화살표키를 누르면 오브젝트의 y좌표를 10만큼 바꿉니다. 마우스를 클릭하면 2초 동안 오브젝트를 x,y 좌표 0으로 이동시킵니다.",
        "locate_desc": "오브젝트가 A의 위치로 이동합니다. (오브젝트의 중심점이 기준이 됩니다.)",
        "locate_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"mouse_pointer\\\" 또는 \\\"마우스포인터\\\"",
        "locate_exampleCode": "def when_click_mouse_on():\n    Entry.move_to(\\\"mouse_pointer\\\")\n\ndef when_press_key(\\\"space\\\"):\n    Entry.move_to(\\\"오브젝트\\\")",
        "locate_exampleDesc": "마우스를 클릭하면 오브젝트가 마우스포인터 위치로 이동합니다.\n스페이스키를 누르면 오브젝트가 \\\"오브젝트\\\" 위치로 이동합니다.",
        "locate_object_time_desc": "오브젝트가 A의 위치로 B초에 걸쳐 서서히 이동합니다. (오브젝트의 중심점이 기준이 됩니다.)",
        "locate_object_time_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"mouse_pointer\\\" 또는 \\\"마우스포인터\\\" %nextB-- 이동하는 시간(초)",
        "locate_object_time_exampleCode": "def when_click_mouse_on():\n    Entry.move_to_for_sec(\\\"mouse_pointer\\\", 2)",
        "locate_object_time_exampleDesc": "마우스를 클릭하면 오브젝트가 2초 동안 서서히 마우스포인터 위치로 이동합니다.",
        "rotate_relative_desc": "오브젝트의 방향을 A도만큼 시계방향으로 회전합니다. (오브젝트의 중심점을 기준으로 회전합니다.)",
        "rotate_relative_elements": "A-- 회전할 각도",
        "rotate_relative_exampleCode": "def when_click_object_on():\n    Entry.add_rotation(90)\n\ndef when_click_object_off():\n    Entry.add_rotation(-90)",
        "rotate_relative_exampleDesc": "오브젝트를 클릭하면 오브젝트가 90도 만큼 회전하고, 오브젝트 클릭을 해제하면 오브젝트가 -90도 만큼 회전합니다.",
        "direction_relative_desc": "오브젝트의 이동 방향을 A도만큼 회전합니다.",
        "direction_relative_elements": "A-- 회전할 각도",
        "direction_relative_exampleCode": "def when_start():\n    Entry.move_to_direction(50)\n    Entry.wait_for_sec(0.5)\n    Entry.add_direction(90)\n    Entry.wait_for_sec(0.5)\n    Entry.move_to_direction(50)",
        "direction_relative_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 이동방향으로 50만큼 이동한 다음 0.5초간 기다립니다. 그 후 이동방향을 90도 만큼 회전하고 0.5초간 기다린 후 이동방향으로 50만큼 이동합니다.",
        "rotate_by_time_desc": "오브젝트의 방향을 시계방향으로 A도만큼 B초에 걸쳐  회전합니다. (오브젝트의 중심점을 기준으로 회전합니다.)",
        "rotate_by_time_elements": "A-- 회전할 각도%nextB-- 회전할 시간(초)",
        "rotate_by_time_exampleCode": "def when_start():\n    Entry.add_rotation_for_sec(90, 2)\n    Entry.add_rotation_for_sec(-90, 2)",
        "rotate_by_time_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 2초 동안 90도 만큼 회전하고, 다시 2초 동안 -90도 만큼 회전합니다.",
        "direction_relative_duration_desc": "오브젝트의 이동방향을 시계방향으로 A도만큼 B초에 걸쳐  회전합니다. (오브젝트의 중심점을 기준으로 회전합니다.)",
        "direction_relative_duration_elements": "A-- 회전할 각도%nextB-- 회전할 시간(초)",
        "direction_relative_duration_exampleCode": "def when_start():\n    Entry.add_direction_for_sec(90, 2)\n\ndef when_start():\n    while True:\n        Entry.move_to_direction(1)",
        "direction_relative_duration_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트의 이동방향을 2초 동안 90도만큼 회전시킵니다. 동시에 오브젝트는 이동방향으로 1만큼 계속 이동합니다.",
        "rotate_absolute_desc": "오브젝트의 방향을 A로 정합니다.",
        "rotate_absolute_elements": "A-- 설정할 방향",
        "rotate_absolute_exampleCode": "def when_press_key(\\\"right\\\"):\n    Entry.set_rotation(90)\n\ndef when_press_key(\\\"left\\\"):\n    Entry.set_rotation(270)",
        "rotate_absolute_exampleDesc": "오른쪽화살표키를 누르면 오브젝트의 방향을 90으로 정하고, 왼쪽화살표키를 누르면 오브젝트의 방향을 270으로 정합니다.",
        "direction_absolute_desc": "오브젝트의 이동방향을 A로 정합니다.",
        "direction_absolute_elements": "A-- 설정할 이동방향",
        "direction_absolute_exampleCode": "def when_press_key(\\\"right\\\"):\n    Entry.set_direction(90)\n    Entry.move_to_direction(10)\n\ndef when_press_key(\\\"left\\\"):\n    Entry.set_direction(270)\n    Entry.move_to_direction(10)",
        "direction_absolute_exampleDesc": "오른쪽화살표키를 누르면 오브젝트의 이동방향을 90으로 정한 후 해당 쪽으로 10만큼 이동하고, 왼쪽화살표키를 누르면 오브젝트의 이동방향을 270으로 정하고 해당쪽으로 10만큼 이동합니다.",
        "see_angle_object_desc": "오브젝트가 A쪽을 바라봅니다. (이동방향이 A를 향하도록 오브젝트의 방향을 회전해줍니다.)",
        "see_angle_object_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"mouse_pointer\\\" 또는 \\\"마우스포인터\\\"",
        "see_angle_object_exampleCode": "def when_click_mouse_on():\n    Entry.look_at(\\\"mouse_pointer\\\")\n\ndef when_press_key(\\\"space\\\"):\n    Entry.look_at(\\\"오브젝트\\\")",
        "see_angle_object_exampleDesc": "마우스를 클릭하면 오브젝트가 마우스포인터쪽을 바라보고, 스페이스키를 누르면 \\\"오브젝트\\\"쪽을 바라봅니다.",
        "move_to_angle_desc": "오브젝트가 A만큼 B방향으로 움직입니다.",
        "move_to_angle_elements": "A-- 이동할 거리에 해당하는 수%nextB-- 이동할 방향(12시 방향이 0도, 시계방향으로 증가)",
        "move_to_angle_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.move_to_degree(10, 0)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.move_to_degree(10, 180)",
        "move_to_angle_exampleDesc": "위쪽화살표키를 누르면 오브젝트가 0도방향으로 10만큼 이동하고, 아래쪽화살표키를 누르면 오브젝트가 180도방향으로 10만큼 이동합니다.",
        "show_desc": "오브젝트를 화면에 나타냅니다.",
        "show_exampleCode": "def when_start():\n    Entry.wait_for_sec(1)\n    Entry.hide()\n    Entry.wait_for_sec(1)\n    Entry.show()",
        "show_exampleDesc": "[시작하기]버튼을 클릭하면 1초 뒤에 오브젝트 모양이 숨겨지고, 다음 1초 뒤에 오브젝트 모양이 나타납니다.",
        "hide_desc": "오브젝트를 화면에서 보이지 않게 합니다.",
        "hide_exampleCode": "def when_start():\n    Entry.wait_for_sec(1)\n    Entry.hide()\n    Entry.wait_for_sec(1)\n    Entry.show()",
        "hide_exampleDesc": "[시작하기]버튼을 클릭하면 1초 뒤에 오브젝트 모양이 숨겨지고, 다음 1초 뒤에 오브젝트 모양이 나타납니다.",
        "dialog_time_desc": "오브젝트가 A를 B초 동안 말풍선으로 말한 후 다음 명령어가 실행됩니다. 콘솔창에서도 실행 결과를 볼 수 있습니다.",
        "dialog_time_elements": "A-- 말할 내용\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등%nextB-- 말하는 시간(초)",
        "dialog_time_exampleCode": "def when_start():\n    Entry.print_for_sec(\\\"안녕! 나는\\\", 2)\n    Entry.print_for_sec(16, 2)\n    Entry.print_for_sec(\\\"살이야\\\", 2)",
        "dialog_time_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"안녕! 나는\\\", 16, \\\"살이야\\\"를 각각 2초 동안 차례대로 말합니다.",
        "dialog_desc": "오브젝트가 A를 말풍선으로 말합니다. 콘솔창에서도 실행 결과를 볼 수 있습니다.",
        "dialog_elements": "A-- 말할 내용\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "dialog_exampleCode": "def when_start():\n    Entry.print(\\\"키보드로 숫자 1,2 를 누르면 숫자를 말해볼게\\\")\n\ndef when_press_key(1):\n    Entry.print(1)\n\ndef when_press_key(2):\n    Entry.print(2)\n",
        "dialog_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"키보드로 숫자 1,2 를 누르면 숫자를 말해볼게\\\"를 말하고, 키보드로 1, 2를 누르면 각각 1, 2라 말합니다.",
        "remove_dialog_desc": "오브젝트가 말하고 있는 말풍선을 지웁니다.",
        "remove_dialog_exampleCode": "def when_start():\n    Entry.print(\\\"말풍선을 지우려면 엔터를 눌러!\\\")\n\ndef when_press_key(\\\"enter\\\"):\n    Entry.clear_print()",
        "remove_dialog_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"말풍선을 지우려면 엔터를 눌러!\\\"라 말하고, 엔터키를 누르면 말풍선이 사라집니다.",
        "change_to_some_shape_desc": "오브젝트를 A 모양으로 바꿉니다.",
        "change_to_some_shape_elements": "A-- 아래 선택지 중 하나\n① 모양 이름 : [속성] 탭의 \\\"모양 이름\\\"을 적음\n② 모양 번호 : [속성] 탭의 모양 번호를 적음",
        "change_to_some_shape_exampleCode": "def when_start():\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape(\\\"오브젝트모양\\\")\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape(\\\"오브젝트모양\\\")",
        "change_to_some_shape_exampleDesc": "[시작하기]버튼을 클릭하면 0.3초간 기다린 다음 \\\"오브젝트모양\\\"으로 모양을 바꾸고 0.3초간 기다린 다음 \\\"오브젝트모양\\\"모양으로 모양을 바꿉니다.",
        "change_to_next_shape_desc": "오브젝트의 모양을 다음 또는 이전 모양으로 바꿉니다.",
        "change_to_next_shape_elements": "A-- 아래 선택지 중 하나\n① 다음 모양 : \\\"next\\\" 또는 \\\"다음\\\" \n② 이전 모양 : \\\"pre\\\" 또는 \\\"이전\\\"",
        "change_to_next_shape_exampleCode": "def when_start():\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape_to(\\\"next\\\")\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape_to(\\\"pre\\\")",
        "change_to_next_shape_exampleDesc": "[시작하기]버튼을 클릭하면 0.3초간 기다린 다음 모양으로 오브젝트 모양을 바꾸고 0.3초간 기다린 다음 이전 모양으로 오브젝트 모양을 바꿉니다.",
        "add_effect_amount_desc": "오브젝트에 A 효과를 B만큼 줍니다.",
        "add_effect_amount_elements": "A -- 아래 선택지 중 하나\n① “color” 또는 “색깔“                 \n② “brightness” 또는 “밝기”                \n③ “transparency” 또는 “투명도”%nextB-- 효과의 변화 정도",
        "add_effect_amount_exampleCode": "def when_click_mouse_on():\n    Entry.add_effect(\\\"color\\\", 50)\n    Entry.wait_for_sec(1)\n    Entry.add_effect(\\\"brightness\\\", -50)\n    Entry.wait_for_sec(1)\n    Entry.add_effect(\\\"transparency\\\", 50)",
        "add_effect_amount_exampleDesc": "마우스를 클릭하면 오브젝트에 색깔 효과를 50만큼 주고 1초간 기다리고, 밝기 효과를 -50만큼 주고 1초간 기다립니다. 그 후 투명도 효과를 50만큼 줍니다.",
        "change_effect_amount_desc": "오브젝트의 A 효과를 B로 정합니다.",
        "change_effect_amount_elements": "A-- 아래 선택지 중 하나\n① “color” 또는 “색깔“                 \n② “brightness” 또는 “밝기”                \n③ “transparency” 또는 “투명도”%nextB-- 효과의 값\n① color: 0~100 범위의 수, 100을 주기로 반복됨\n② brightness: -100~100 사이 범위의 수, -100이하는 -100 으로 100 이상은 100 으로 처리 됨\n③ transparency: 0~100 사이 범위의 수, 0 이하는 0으로, 100이상은 100으로 처리 됨",
        "change_effect_amount_exampleCode": "def when_click_mouse_on():\n    Entry.set_effect(\\\"color\\\", 50)\n    Entry.set_effect(\\\"brightness\\\", 50)\n    Entry.set_effect(\\\"transparency\\\", 50)\n\ndef when_click_mouse_off():\n    Entry.set_effect(\\\"color\\\", 0)\n    Entry.set_effect(\\\"brightness\\\", 0)\n    Entry.set_effect(\\\"transparency\\\", 0)",
        "change_effect_amount_exampleDesc": "마우스를 클릭하면 오브젝트에 색깔, 밝기, 투명도 효과를 50으로 정하고, 마우스 클릭을 해제하면 각 효과를 0으로 정합니다.",
        "erase_all_effects_desc": "오브젝트에 적용된 효과를 모두 지웁니다.",
        "erase_all_effects_exampleCode": "def when_click_mouse_on():\n    Entry.set_effect(\\\"color\\\", 50)\n    Entry.set_effect(\\\"brightness\\\", 50)\n    Entry.set_effect(\\\"transparency\\\", 50)\n\ndef when_click_mouse_off():\n    Entry.clear_effect()\n",
        "erase_all_effects_exampleDesc": "마우스를 클릭하면 오브젝트에 색깔, 밝기, 투명도 효과를 50으로 정하고, 마우스 클릭을 해제하면 오브젝트에 적용된 모든 효과를 지웁니다.",
        "change_scale_size_desc": "오브젝트의 크기를 A만큼 바꿉니다.",
        "change_scale_size_elements": "A-- 크기 변화 값",
        "change_scale_size_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.add_size(10)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.add_size(-10)\n\ndef when_press_key(\\\"space\\\"):\n    Entry.set_size(100)",
        "change_scale_size_exampleDesc": "위쪽화살표키를 누르면 오브젝트의 크기가 10만큼 커지고, 아래쪽화살표키를 누르면 오브젝트의 크기가 10만큼 작아집니다. 스페이스키를 누르면 오브젝트의 크기를 100으로 정합니다.",
        "set_scale_size_desc": "오브젝트의 크기를 A로 정합니다.",
        "set_scale_size_elements": "A-- 크기값",
        "set_scale_size_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.add_size(10)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.add_size(-10)\n\ndef when_press_key(\\\"space\\\"):\n    Entry.set_size(100)",
        "set_scale_size_exampleDesc": "위쪽화살표키를 누르면 오브젝트의 크기가 10만큼 커지고, 아래쪽화살표키를 누르면 오브젝트의 크기가 10만큼 작아집니다. 스페이스키를 누르면 오브젝트의 크기를 100으로 정합니다.",
        "flip_x_desc": "오브젝트의 상하 모양을 뒤집습니다.",
        "flip_x_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.flip_horizontal()\n\ndef when_press_key(\\\"right\\\"):\n    Entry.flip_vertical()",
        "flip_x_exampleDesc": "위쪽화살표키를 누르면 오브젝트의 상하 모양을 뒤집고, 오른쪽화살표키를 누르면 오브젝트의 좌우 모양을 뒤집습니다.",
        "flip_y_desc": "오브젝트의 좌우 모양을 뒤집습니다.",
        "flip_y_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.flip_horizontal()\n\ndef when_press_key(\\\"right\\\"):\n    Entry.flip_vertical()",
        "flip_y_exampleDesc": "위쪽화살표키를 누르면 오브젝트의 상하 모양을 뒤집고, 오른쪽화살표키를 누르면 오브젝트의 좌우 모양을 뒤집습니다.",
        "change_object_index_desc": "오브젝트의 레이어를 A로 가져옵니다.",
        "change_object_index_elements": "A-- 아래 선택지 중 하나\n① “front\\\" 또는 “맨 앞“                 \n② “forward” 또는 “앞”                \n③ “backward” 또는 “뒤”\n④ “back” 또는 “맨 뒤”",
        "change_object_index_exampleCode": "def when_start():\n    Entry.send_layer_to(\\\"front\\\")\n    Entry.wait_for_sec(2)\n    Entry.send_layer_to(\\\"backward\\\")",
        "change_object_index_exampleDesc": "오브젝트가 여러개가 겹쳐 있을 경우 [시작하기]버튼을 클릭하면  해당 오브젝트의 레이어를 가장 앞으로 가져와서 보여줍니다.",
        "brush_stamp_desc": "오브젝트의 모양을 도장처럼 실행화면 위에 찍습니다.",
        "brush_stamp_exampleCode": "def when_start():\n    for i in range(10):\n        Entry.move_to_direction(10)\n        Entry.stamp()",
        "brush_stamp_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 이동방향으로 10만큼 이동하고, 도장찍는 행동을 10번 반복합니다.",
        "start_drawing_desc": "오브젝트가 이동하는 경로를 따라 선이 그려지기 시작합니다. (오브젝트의 중심점이 기준)",
        "start_drawing_exampleCode": "def when_start():\n    Entry.start_drawing()\n    for i in range(10):\n        Entry.move_to_direction(10)",
        "start_drawing_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고, 오브젝트가 이동방향으로 10만큼 10번 이동할 때 오브젝트의 이동경로를 따라 선이 그려집니다.",
        "stop_drawing_desc": "오브젝트가 선을 그리는 것을 멈춥니다.",
        "stop_drawing_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(1)\n\ndef when_click_mouse_on():\n    Entry.stop_drawing()",
        "stop_drawing_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고 계속해서 오브젝트가 이동방향으로 10만큼 이동합니다. 마우스를 클릭하면 그리는것을 멈춥니다.",
        "set_color_desc": "오브젝트가 그리는 선의 색을 A로 정합니다.",
        "set_color_elements": "A-- 아래 선택지 중 하나\n① 색상 코드 : \\\"#FF0000\\\", \\\"#FFCC00\\\", \\\"#3333FF\\\", \\\"#000000\\\" 등\n② 색깔명 : \\\"red\\\", \\\"orange\\\", \\\"yellow\\\", \\\"green\\\", \\\"blue\\\", \\\"navy\\\", \\\"purple\\\", \\\"black\\\", \\\"white\\\", \\\"brown\\\"",
        "set_color_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_color_to(\\\"#000099\\\")\n    while True:\n        Entry.move_to_direction(1)",
        "set_color_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고, 선의 색을 \\\"#000099\\\"로 정합니다. 오브젝트는 계속해서 이동방향으로 1만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다.",
        "set_random_color_desc": "오브젝트가 그리는 선의 색을 무작위로 정합니다.",
        "set_random_color_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(1)\n        Entry.set_brush_color_to_random()",
        "set_random_color_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작됩니다. 오브젝트는 계속해서 이동방향으로 1만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다. 선의 색깔은 계속해서 무작위로 정해집니다.",
        "change_thickness_desc": "오브젝트가 그리는 선의 굵기를 A만큼 바꿉니다.",
        "change_thickness_elements": "A-- 굵기 변화 값",
        "change_thickness_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.add_brush_size(1)\n        Entry.move_to_direction(10)",
        "change_thickness_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작됩니다. 오브젝트는 계속해서 이동방향으로 10만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다. 선의 굵기는 계속해서 1씩 커집니다.",
        "set_thickness_desc": "오브젝트가 그리는 선의 굵기를 A로 정합니다.",
        "set_thickness_elements": "A-- 굵기값(1이상의 수)",
        "set_thickness_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    while True:\n        Entry.move_to_direction(10)",
        "set_thickness_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고, 선의 굵기를 10으로 정합니다. 오브젝트는 계속해서 이동방향으로 10만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다.",
        "change_brush_transparency_desc": "오브젝트가 그리는 선의 투명도를 A만큼 바꿉니다.",
        "change_brush_transparency_elements": "A-- 투명도 변화 값",
        "change_brush_transparency_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    while True:\n        Entry.move_to_direction(10)\n        Entry.add_brush_transparency(5)",
        "change_brush_transparency_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고, 선의 굵기를 10으로 정합니다. 오브젝트는 계속해서 이동방향으로 10만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다. 선의 투명도는 계속해서 5만큼 바꿉니다.",
        "set_brush_tranparency_desc": "오브젝트가 그리는 선의 투명도를 A로 정합니다.",
        "set_brush_tranparency_elements": "A-- 투명도값(0~100 의 범위)",
        "set_brush_tranparency_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    Entry.set_brush_transparency(50)\n    while True:\n        Entry.move_to_direction(10)",
        "set_brush_tranparency_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작되고, 선의 굵기를 10으로, 선의 투명도를 50으로 정합니다. 오브젝트는 계속해서 이동방향으로 10만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다.",
        "brush_erase_all_desc": "오브젝트가 그린 선과 도장을 모두 지웁니다.",
        "brush_erase_all_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(10)\n\ndef when_click_mouse_on():\n    Entry.clear_drawing()",
        "brush_erase_all_exampleDesc": "[시작하기]버튼을 클릭하면 그리기가 시작됩니다. 오브젝트는 계속해서 이동방향으로 10만큼 움직이고, 오브젝트의 이동경로를 따라 선이 그려집니다. 마우스를 클릭하면 오브젝트가 그린 선을 모두 지웁니다.",
        "text_read_desc": "글상자 A의 내용입니다.<br />(내용 안에 개행이 있는 경우, 띄어쓰기하여 반환됩니다.)",
        "text_read_elements": "A-- 아래 선택지 중 하나<br />① \\\"오브젝트(글상자) 이름\\\" <br />② 자기 자신",
        "text_read_exampleCode": "def when_start():\n    Entry.print(Entry.contents_of_textbox(\\\"A\\\"))",
        "text_read_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 글상자 \\\"A\\\"의 내용을 말합니다.​",
        "text_write_desc": "글상자의 내용을 A로 고쳐씁니다.",
        "text_write_elements": "A-- 글상자의 내용\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "text_write_exampleCode": "def when_start():\n    Entry.write_text(\\\"엔트리\\\")",
        "text_write_exampleDesc": "[시작하기]버튼을 클릭하면 글상자의 내용을 \\\"엔트리\\\"로 바꿉니다.",
        "text_append_desc": "글상자의 내용 뒤에 A를 추가합니다.",
        "text_append_elements": "A-- 글상자의 내용\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "text_append_exampleCode": "def when_start():\n    Entry.write_text(\\\"안녕?\\\")\n    Entry.wait_for_sec(1)\n    Entry.append_text(\\\"엔트리!\\\")",
        "text_append_exampleDesc": "[시작하기]버튼을 클릭하면 글상자의 내용이 \\\"안녕?\\\"이 되었다가 1초 뒤에 \\\"엔트리!\\\"가 추가되어 \\\"안녕?엔트리!\\\"가 됩니다.",
        "text_prepend_desc": "글상자의 내용 앞에 A를 추가합니다.",
        "text_prepend_elements": "A-- 글상자의 내용\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "text_prepend_exampleCode": "def when_start():\n    Entry.write_text(\\\"반가워!\\\")\n    Entry.wait_for_sec(1)\n    Entry.prepend_text(\\\"엔트리!\\\")",
        "text_prepend_exampleDesc": "[시작하기]버튼을 클릭하면 글상자의 내용이 \\\"반가워!\\\"가 되었다가 1초 뒤에 \\\"엔트리!\\\"가 앞에 추가되어 \\\"엔트리!반가워!\\\"가 됩니다.",
        "text_flush_desc": "글상자에 저장된 값을 모두 지웁니다.",
        "text_flush_exampleCode": "def when_start():\n    Entry.write_text(\\\"엔트리\\\")\n    Entry.wait_for_sec(1)\n    Entry.clear_text()",
        "text_flush_exampleDesc": "[시작하기]버튼을 클릭하면 글상자의 내용이 \\\"엔트리\\\"가 되었다가 1초 뒤에 모든 내용이 사라집니다.",
        "sound_something_with_block_desc": "오브젝트가 A 소리를 재생합니다.",
        "sound_something_with_block_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_something_with_block_exampleCode": "def when_start():\n    Entry.play_sound(\\\"소리\\\")\n    Entry.add_size(50)",
        "sound_something_with_block_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 재생하면서 오브젝트의 크기가 50만큼 커집니다.",
        "sound_something_second_with_block_desc": "오브젝트가 A소리를 B초 만큼 재생합니다.",
        "sound_something_second_with_block_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_something_second_with_block_exampleCode": "def when_start():\n    Entry.play_sound_for_sec(\\\"소리\\\", 1)\n    Entry.add_size(50)",
        "sound_something_second_with_block_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 1초 동안 재생하면서, 오브젝트의 크기가 50만큼 커집니다.",
        "sound_from_to_desc": "오브젝트가 A소리를 B초부터 C초까지 재생합니다.",
        "sound_from_to_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_from_to_exampleCode": "def when_start():\n    Entry.play_sound_from_to(\\\"소리\\\", 0.5, 1)\n    Entry.add_size(50)",
        "sound_from_to_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 0.5초부터 1초 구간까지만 재생하면서, 오브젝트의 크기가 50만큼 커집니다.",
        "sound_something_wait_with_block_desc": "오브젝트가 A 소리를 재생하고, 재생이 끝나면 다음 명령을 실행합니다.",
        "sound_something_wait_with_block_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_something_wait_with_block_exampleCode": "def when_start():\n    Entry.play_sound_and_wait(\\\"소리\\\")\n    Entry.add_size(50)",
        "sound_something_wait_with_block_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 재생하고, 재생이 끝나면 오브젝트의 크기가 50만큼 커집니다.",
        "sound_something_second_wait_with_block_desc": "오브젝트가 A소리를 B초 만큼 재생하고, 재생이 끝나면 다음 명령을 실행합니다.",
        "sound_something_second_wait_with_block_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_something_second_wait_with_block_exampleCode": "def when_start():\n    Entry.play_sound_for_sec_and_wait(\\\"소리\\\", 1)\n    Entry.add_size(50)",
        "sound_something_second_wait_with_block_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 1초 동안 재생하고, 재생이 끝나면 오브젝트의 크기가 50만큼 커집니다.",
        "sound_from_to_and_wait_desc": "오브젝트가 A소리를 B초부터 C초까지 재생하고, 재생이 끝나면 다음 명령을 실행합니다.",
        "sound_from_to_and_wait_elements": "A-- 아래 선택지 중 하나\n① 소리 이름 : [속성] 탭의 \\\"소리 이름\\\"을 적음\n② 소리 번호: [속성] 탭의 소리 번호를 적음",
        "sound_from_to_and_wait_exampleCode": "def when_start():\n    Entry.play_sound_from_to_and_wait(\\\"소리\\\", 0.5, 1)\n    Entry.add_size(50)",
        "sound_from_to_and_wait_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 0.5초부터 1초 구간까지만 재생하고, 재생이 끝나면 오브젝트의 크기가 50만큼 커집니다.",
        "sound_volume_change_desc": "작품에서 재생되는 모든 소리의 크기를 A퍼센트만큼 바꿉니다.",
        "sound_volume_change_elements": "A-- 소리 크기 변화 값",
        "sound_volume_change_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.add_sound_volume(10)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.add_sound_volume(-10)\n\ndef when_start():\n    while True:\n        Entry.play_sound_and_wait(\\\"소리\\\")",
        "sound_volume_change_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 계속 재생합니다. 위쪽화살표키를 누르면 소리의 크기가 10\\\" 커지고, 아래쪽화살표키를 누르면 소리의 크기가 10\\\"작아집니다.",
        "sound_volume_set_desc": "작품에서 재생되는 모든 소리의 크기를 A퍼센트로 정합니다.",
        "sound_volume_set_elements": "A-- 소리 크기값",
        "sound_volume_set_exampleCode": "def when_press_key(\\\"up\\\"):\n    Entry.add_sound_volume(10)\n\ndef when_press_key(\\\"down\\\"):\n    Entry.add_sound_volume(-10)\n\ndef when_press_key(\\\"enter\\\"):\n    Entry.set_sound_volume(100)\n\ndef when_start():\n    while True:\n        Entry.play_sound_and_wait(\\\"소리\\\")",
        "sound_volume_set_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 계속 재생합니다. 위쪽화살표키를 누르면 소리의 크기가 10\\\" 커지고, 아래쪽화살표키를 누르면 소리의 크기가 10\\\"작아집니다. 엔터키를 누르면 소리의 크기를 100\\\"로 정합니다.",
        "sound_silent_all_desc": "현재 재생 중인 모든 소리를 멈춥니다.",
        "sound_silent_all_exampleCode": "def when_start():\n    while True:\n        Entry.play_sound_and_wait(\\\"소리\\\")\n\ndef when_press_key(\\\"enter\\\"):\n    Entry.stop_sound()",
        "sound_silent_all_exampleDesc": "[시작하기]버튼을 클릭하면 \\\"소리\\\"를 계속 재생합니다. 엔터키를 누르면 현재 재생 중인 소리를 멈춥니다.",
        "is_clicked_desc": "마우스를 클릭한 경우 True로 판단합니다.",
        "is_clicked_exampleCode": "def when_start():\n    while True:\n        if Entry.is_mouse_clicked():\n            Entry.print_for_sec(\\\"반가워!\\\", 0.5)",
        "is_clicked_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 마우스를 클릭했는지 확인합니다. 만약 마우스를 클릭하면 오브젝트가 \\\"반가워!\\\"라고 0.5초간 말합니다.",
        "is_press_some_key_desc": "A 키가 눌려져 있는 경우 True로 판단합니다.",
        "is_press_some_key_elements": "A-- 아래 선택지 중 하나\n① 알파벳 : \\\"A\\\", \\\"B\\\" ~ \\\"Z\\\" 등(소문자 가능)\n② 숫자: 1, 2, 3, 4 ~ 9, 0\n③ 특수키: \\\"space\\\", \\\"enter\\\"\n④ 방향키 : \\\"up\\\", \\\"down\\\", \\\"right\\\", \\\"left\\\"",
        "is_press_some_key_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\\\"space\\\"):\n            Entry.move_to_direction(10)",
        "is_press_some_key_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 선택한 키를 눌렀는지 확인합니다. 만약 스페이스 키를 누르면 오브젝트가 이동방향으로 10만큼 이동합니다.",
        "reach_something_desc": "오브젝트가 A와 닿은 경우 True으로 판단합니다.",
        "reach_something_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"mouse_pointer\\\" 또는 \\\"마우스포인터\\\"\n③ \\\"edge\\\", \\\"edge_up\\\", \\\"edge_down\\\", \\\"edge_right\\\", \\\"edge_left\\\"",
        "reach_something_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        if Entry.is_touched(\\\"edge\\\"):\n            Entry.add_rotation(150)",
        "reach_something_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 오브젝트가 이동방향으로 10만큼 이동합니다. 만약 오브젝트가 벽에 닿으면 150만큼 회전하게 됩니다.",
        "boolean_basic_operator_desc": "A와 B를 비교하여 True 또는 False로 판단합니다.",
        "boolean_basic_operator_elements": "A, B 비교하고자 하는 숫자값\n① == : A와 B의 값이 같으면 True, 아니면 False\n② != : A와 B의 값이 다르면 True, 아니면 False\n③ > : A의 값이 B의 값보다 크면 true, 아니면 False\n④ < : A의 값이 B의 값보다 작으면 true, 아니면 False\n⑤ >= : A의 값이 B의 값보다 크거나 같으면 true, 아니면 False\n⑥ <= : A의 값이 B의 값보다 작거나 같으면 true, 아니면 False",
        "boolean_basic_operator_exampleCode": "def when_start():\n    while True:\n        Entry.add_x(10)\n        if Entry.value_of_object(\\\"오브젝트\\\", \\\"x\\\") > 240:\n            Entry.set_x(0)",
        "boolean_basic_operator_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 오브젝트 x좌표를 10만큼 바꿉니다. 만약 오브젝트 x좌표가 240보다 크면 오브젝트 x좌표를 0으로 정합니다.",
        "boolean_and_desc": "A와 B의 판단이 모두 True인 경우 True, 아닌 경우 False로 판단합니다.",
        "boolean_and_elements": "A, B-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "boolean_and_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\\\"a\\\") and Entry.is_key_pressed(\\\"s\\\"):\n            Entry.add_effect(\\\"color\\\", 10)",
        "boolean_and_exampleDesc": "[시작하기]버튼을 클릭하고 키보드의 \\\"a\\\" 와 \\\"s\\\"키를 동시에 눌렀을 때, 색깔 효과를 10만큼 줍니다.",
        "boolean_or_desc": "A와 B의 판단 중 하나라도 True인 경우 True, 아닌 경우 False로 판단합니다.",
        "boolean_or_elements": "A, B-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "boolean_or_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\\\"a\\\") or Entry.is_key_pressed(\\\"s\\\"):\n            Entry.add_effect(\\\"color\\\", 10)",
        "boolean_or_exampleDesc": "[시작하기]버튼을 클릭하면 키보드의 \\\"a\\\"나 \\\"s\\\"키 중 무엇이든 하나를 누르면 오브젝트에 색깔 효과를 10만큼 줍니다.",
        "boolean_not_desc": "A 판단이 True이면 False, False이면 True로 판단합니다.",
        "boolean_not_elements": "A-- True 또는 False로 판단할 수 있는 명령어 입력(판단 카테고리의 명령어)\n① True, False\n② 10 == 10 , 10 > 10 , 10 <= 10 등\n③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\\\"Q\\\") 등",
        "boolean_not_exampleCode": "def when_start():\n    while True:\n        if not Entry.is_mouse_clicked():\n            Entry.add_size(1)",
        "boolean_not_exampleDesc": "[시작하기]버튼을 클릭하면 마우스를 클릭하지 않은 동안 크기가 1씩 커집니다.",
        "calc_basic_desc": "A와 B의 연산값입니다.",
        "calc_basic_elements": "A, B-- 연산하고자 하는 숫자값\n① + : A와 B를 더한 값\n② - : A와 B를 뺀 값\n③ x : A와 B를 곱한 값\n④ / : A와 B를 나눈 값",
        "calc_basic_exampleCode": "def when_start():\n    Entry.print_for_sec(10 + 10, 2)\n    Entry.print_for_sec(10 - 10, 2)\n    Entry.print_for_sec(10 * 10, 2)\n    Entry.print_for_sec(10 / 10, 2)",
        "calc_basic_exampleDesc": "[시작하기]버튼을 클릭하면 10과 10을 더한값, 뺀값, 곱한값, 나눈값을 각 2초간 말합니다.",
        "calc_rand_desc": "A와 B 사이에서 선택된 무작위 수의 값입니다. (두 수 모두 정수를 입력한 경우 정수로,두 수 중 하나라도 소수를 입력한 경우 소수로 무작위 수가 선택됩니다.)",
        "calc_rand_elements": "A, B-- 무작위 수를 추출할 범위\n① random.randint(A, B) : A, B를 정수로 입력하면 정수 범위에서 무작위 수를 추출\n② random.uniform(A, B) : A, B를 실수로 입력하면 실수 범위에서 무작위 수를 추출",
        "calc_rand_exampleCode": "def when_start():\n    Entry.print_for_sec(random.randint(1, 10), 2)\n    Entry.print_for_sec(random.uniform(0.1, 2), 2)",
        "calc_rand_exampleDesc": "[시작하기]버튼을 클릭하면 1부터 10사이의 정수중 무작위 수를 뽑아 2초간 말합니다. 그 후 0.1부터 2사이의 실수중 무작위 수를 뽑아 2초간 말합니다.",
        "coordinate_mouse_desc": "마우스 포인터의 A 좌표 값을 의미합니다.",
        "coordinate_mouse_elements": "A-- 아래 선택지 중 하나\n① \\\"x\\\" 또는 \\\"X\\\"\n② \\\"y\\\" 또는 \\\"Y\\\"",
        "coordinate_mouse_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_mouse_pointer(\\\"x\\\"))",
        "coordinate_mouse_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 마우스 포인터의 x좌표를 계속해서 말합니다.",
        "coordinate_object_desc": "A에 대한 B정보값입니다.",
        "coordinate_object_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"self\\\" 또는 \\\"자신\\\"%nextB-- 아래 선택지 중 하나\n① \\\"x\\\" 또는 \\\"X\\\"\n② \\\"y\\\" 또는 \\\"Y\\\"\n③ \\\"rotation\\\" 또는 \\\"방향\\\"\n④ \\\"direction\\\" 또는 \\\"이동 방향\\\"\n⑤ \\\"size\\\"  또는 \\\"크기\\\"\n⑥ \\\"shape_number\\\" 또는 \\\"모양 번호\\\"\n⑦ \\\"shape_name\\\" 또는 \\\"모양 이름\\\"",
        "coordinate_object_exampleCode": "def when_start():\n    while True:\n        Entry.add_x(1)\n        Entry.print(Entry.value_of_object(\\\"오브젝트\\\", \\\"x\\\"))\n",
        "coordinate_object_exampleDesc": "[시작하기]버튼을 클릭하면 계속해서 오브젝트의 x좌표가 1씩 증가하며, \\\"오브젝트\\\"의 x좌표를 말합니다.",
        "get_sound_volume_desc": "현재 작품에 설정된 소리의 크기값입니다.",
        "get_sound_volume_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_sound_volume())",
        "get_sound_volume_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 소리의 크기값을 계속해서 말합니다.",
        "quotient_and_mod_desc": "A와 B의 연산값입니다.",
        "quotient_and_mod_elements": "A, B-- 연산하고자 하는 숫자값\n① // : A / B의 몫에 해당하는 값\n② % : A / B의 나머지에 해당하는 값",
        "quotient_and_mod_exampleCode": "def when_start():\n    Entry.print_for_sec(10 // 3, 2)\n    Entry.print_for_sec(10 % 3, 2)",
        "quotient_and_mod_exampleDesc": "[시작하기]버튼을 클릭하면 10 / 3의 몫인 3을 2초 동안 말하고, 나머지인 1을 2초 동안 말합니다.",
        "calc_operation_desc": "A의 연산값입니다.",
        "calc_operation_elements": "A, B-- 연산하고자 하는 숫자값\n① A ** 2 : A를 제곱한 값\n② math.sqrt(A): A의 루트값\n③ math.sin(A): A의 사인값\n④ math.cos(A): A의 코사인 값\n⑤ math.tan(A):  A의 탄젠트값 \n⑥ math.asin(A): A의 아크사인값\n⑦ math.acos(A): A의 아크코사인값\n⑧ math.atan(): A의 아크탄젠트값\n⑨ math.log10(A): A의 로그값\n⑩ math.log(A): A의 자연로그값\n⑪ A - math.floor(A): A의 소수점 부분\n⑫ math.floor(A): A의 소수점 버림값\n⑬ math.ceil(A): A의 소수점 올림값\n⑭ math.round(A): A의 소수점 반올림값\n⑮ math.factorial(A): A의 팩토리얼 값\n⑯ math.fabs(A): A의 절댓값",
        "calc_operation_exampleCode": "def when_start():\n    Entry.print_for_sec(10 ** 2, 2)\n    Entry.print_for_sec(math.sqrt(9), 2)\n    Entry.print_for_sec(math.sin(90), 2)\n    Entry.print_for_sec(math.fabs(-10), 2)",
        "calc_operation_exampleDesc": "[시작하기]버튼을 클릭하면 10의 제곱, 9의 루트값, 90의 사인값, -10의 절댓값을 각 2초 동안 말합니다.",
        "get_project_timer_value_desc": "이 명령이 실행되는 순간 초시계에 저장된 값입니다.",
        "get_project_timer_value_exampleCode": "def when_start():\n    Entry.timer(\\\"start\\\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\\\"stop\\\")\n    Entry.timer_view(\\\"hide\\\")\n    Entry.print(Entry.value_of_timer())",
        "get_project_timer_value_exampleDesc": "[시작하기]버튼을 클릭하면 초시계를 시작합니다. 3초 뒤에는 초시계를 정지하고 초시계창을 숨깁니다. 그 후 초시계값을 말합니다.",
        "choose_project_timer_action_desc": "초시계의 동작을 A로 정합니다.\n(이 명령어를 사용하면 실행화면에 ‘초시계 창’이 생성됩니다.)",
        "choose_project_timer_action_elements": "A-- 아래 선택지 중 하나\n① \\\"start\\\" : 초시계를 시작\n② \\\"stop\\\" : 초시계를 정지\n③ \\\"reset\\\" : 초시계를 초기화",
        "choose_project_timer_action_exampleCode": "def when_start():\n    Entry.timer(\\\"start\\\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\\\"stop\\\")\n    Entry.timer_view(\\\"hide\\\")\n    Entry.print(Entry.value_of_timer())",
        "choose_project_timer_action_exampleDesc": "[시작하기]버튼을 클릭하면 초시계를 시작합니다. 3초 뒤에는 초시계를 정지하고 초시계창을 숨깁니다. 그 후 초시계값을 말합니다.",
        "set_visible_project_timer_desc": "실행화면의 초시계 창을 A로 설정합니다.",
        "set_visible_project_timer_elements": "A-- 아래 선택지 중 하나\n① \\\"hide\\\" : 초시계창을 숨김\n② \\\"show\\\" : 초시계창을 보임",
        "set_visible_project_timer_exampleCode": "def when_start():\n    Entry.timer(\\\"start\\\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\\\"stop\\\")\n    Entry.timer_view(\\\"hide\\\")\n    Entry.print(Entry.value_of_timer())",
        "set_visible_project_timer_exampleDesc": "[시작하기]버튼을 클릭하면 초시계를 시작합니다. 3초 뒤에는 초시계를 정지하고 초시계창을 숨깁니다. 그 후 초시계값을 말합니다.",
        "get_date_desc": "현재 A에 대한 값입니다.",
        "get_date_elements": "A-- 아래 선택지 중 하나\n① \\\"year\\\" : 현재 연도 값\n② \\\"month\\\" : 현재 월 값\n③ \\\"day\\\" : 현재 일 값\n④ \\\"hour\\\" : 현재 시간 값\n⑤ \\\"minute\\\" : 현재 분 값\n⑥ \\\"second\\\" : 현재 초 값",
        "get_date_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_current_time(\\\"year\\\") + \\\"년\\\" + Entry.value_of_current_time(\\\"month\\\") + \\\"월\\\")",
        "get_date_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 현재년도와 월을 말합니다.",
        "distance_something_desc": "자신과 A까지의 거리 값입니다.",
        "distance_something_elements": "A-- 아래 선택지 중 하나\n① \\\"오브젝트 이름\\\"\n② \\\"mouse_pointer\\\" 또는 \\\"마우스포인터\\\"",
        "distance_something_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_distance_to(\\\"mouse_pointer\\\"))",
        "distance_something_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 마우스포인터와의 거리를 계속해서 말합니다.",
        "get_sound_duration_desc": "소리 A의 길이(초)값입니다.",
        "get_sound_duration_elements": "A-- \\\"소리 이름\\\"",
        "get_sound_duration_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_sound_length_of(\\\"소리\\\"))",
        "get_sound_duration_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"소리\\\"의 길이를 말합니다.",
        "get_user_name_desc": "작품을 실행하고 있는 사용자의 이름 값입니다.",
        "get_user_name_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_username())",
        "get_user_name_exampleDesc": "[시작하기]버튼을 클릭하면 작품을 실행하고 있는 사용자의 이름 값을 말합니다.",
        "length_of_string_desc": "입력한 문자값의 공백을 포함한 글자 수입니다.",
        "length_of_string_elements": "A-- \\\"문자열\\\"",
        "length_of_string_exampleCode": "def when_start():\n    Entry.print_for_sec(len(\\\"안녕\\\"), 2)\n    Entry.print_for_sec(len(\\\"엔트리\\\"), 2)",
        "length_of_string_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕\\\"과 \\\"엔트리\\\"의 글자 수를 각각 2초 동안 말합니다.",
        "combine_something_desc": "A 문자열과 B 문자열을 결합한 값입니다. (A, B 중 하나가 숫자면 문자열로 바꾸어 처리되고, 둘 다 숫자면 덧셈 연산으로 처리됩니다.)",
        "combine_something_elements": "A, B-- \\\"문자열\\\"",
        "combine_something_exampleCode": "def when_start():\n    Entry.print(\\\"안녕! \\\" + \\\"엔트리\\\")",
        "combine_something_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕!\\\"과 \\\"엔트리\\\"를 결합한 \\\"안녕! 엔트리\\\"를 말합니다.",
        "char_at_desc": "A 문자열의 B번째의 글자 값입니다. (첫 번째 글자의 위치는 0부터 시작합니다.)",
        "char_at_elements": "A-- \\\"문자열\\\"%nextB-- 찾고자 하는 문자열의 위치",
        "char_at_exampleCode": "def when_start():\n    Entry.print(\\\"안녕 엔트리!\\\"[0])",
        "char_at_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕 엔트리!\\\"의 0번째 글자인 \\\"안\\\"을 말합니다.",
        "substring_desc": "A 문자열의 B위치부터 C-1위치까지의 값입니다. (첫 번째 글자의 위치는 0부터 시작합니다.)",
        "substring_elements": "A-- \\\"문자열\\\"%nextB-- 포함할 문자열의 시작 위치\n첫 번째 글자는 0부터 시작%nextC-- 문자열을 포함하지 않는 위치",
        "substring_exampleCode": "def when_start():\n    Entry.print(\\\"안녕 엔트리!\\\"[1:5])",
        "substring_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕 엔트리!\\\"의 1에서 4번째 글자인 \\\"녕 엔트\\\"를 말합니다.",
        "index_of_string_desc": "A문자열에서 B문자열이 처음으로 등장하는 위치의 값입니다. (첫 번째 글자의 위치는 0부터 시작합니다.)",
        "index_of_string_elements": "A, B-- \\\"문자열\\\"",
        "index_of_string_exampleCode": "def when_start():\n    Entry.print(\\\"안녕 엔트리!\\\".find(\\\"엔트리\\\"))",
        "index_of_string_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕 엔트리!\\\"에서 \\\"엔트리\\\"가 처음으로 등장하는 위치인 3을 말합니다.",
        "replace_string_desc": "A 문자열에서 B문자열을 모두 찾아 C문자열로 바꾼 값입니다.\n(영문 입력시 대소문자를 구분합니다.)",
        "replace_string_elements": "A, B, C-- \\\"문자열\\\"",
        "replace_string_exampleCode": "def when_start():\n    Entry.print(\\\"안녕 엔트리!\\\".replace( \\\"안녕\\\", \\\"반가워\\\"))",
        "replace_string_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"안녕 엔트리!\\\"에서 \\\"안녕\\\"을 \\\"반가워\\\"로 바꾼 \\\"반가워 엔트리!\\\"를 말합니다.",
        "change_string_case_desc": "A의 모든 알파벳을 대문자 또는 소문자로 바꾼 문자값입니다.",
        "change_string_case_elements": "A-- \\\"문자열\\\"\n① A.upper(): A의 모든 알파벳을 대문자로 바꾼 값\n② A.lower() : A의 모든 알파벳을 소문자로 바꾼 값",
        "change_string_case_exampleCode": "def when_start():\n    Entry.print_for_sec(\\\"Hello Entry!\\\".upper(), 2)\n    Entry.print_for_sec(\\\"Hello Entry!\\\".lower(), 2)",
        "change_string_case_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"Hello Entry!\\\"를 모두 대문자로 바꾼 \\\"HELLO ENTRY!\\\"를 2초간 말한 다음 모두 소문자로 바꾼 \\\"hello entry!\\\"를 2초간 말합니다.",
        "ask_and_wait_desc": "오브젝트가 A 내용을 말풍선으로 묻고, 대답을 입력받습니다. 대답은 실행화면 또는 콘솔창에서 입력할 수 있으며 입력된 값은 'Entry.answer()'에 저장됩니다. \n(이 명령어를 사용하면 실행화면에 ‘대답 창’이 생성됩니다.)",
        "ask_and_wait_elements": "A-- \\\"문자열\\\"",
        "ask_and_wait_exampleCode": "def when_start():\n    Entry.input(\\\"이름을 입력해보세요.\\\")\n    Entry.print(Entry.answer() + \\\" 반가워!\\\")",
        "ask_and_wait_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"이름을 입력해보세요.\\\"라고 말풍선으로 묻습니다. 이름을 입력하면 \\\"(입력한 이름) 반가워!\\\"라 말합니다.",
        "get_canvas_input_value_desc": "Entry.input(A) 명령에 의해 실행화면 또는 콘솔에서 입력받은 값입니다.",
        "get_canvas_input_value_exampleCode": "def when_start():\n    Entry.input(\\\"이름을 입력해보세요.\\\")\n    Entry.print(Entry.answer() + \\\" 반가워!\\\")",
        "get_canvas_input_value_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 \\\"이름을 입력해보세요.\\\"라고 말풍선으로 묻습니다. 이름을 입력하면 \\\"(입력한 이름) 반가워!\\\"라 말합니다.",
        "set_visible_answer_desc": "실행화면의 대답 창을 A로 설정합니다.",
        "set_visible_answer_elements": "A-- 아래 선택지 중 하나\n① \\\"hide\\\" : 대답 창을 숨김\n② \\\"show\\\" : 대답 창을 보임",
        "set_visible_answer_exampleCode": "def when_start():\n    Entry.answer_view(\\\"hide\\\")\n    Entry.input(\\\"나이를 입력하세요.\\\")\n    Entry.print(Entry.answer())",
        "set_visible_answer_exampleDesc": "[시작하기]버튼을 클릭하면 대답창이 숨겨지고, 오브젝트가 \\\"나이를 입력하세요.\\\"라고 말풍선으로 묻습니다. 나이를 입력하면 오브젝트가 입력한 나이를 말합니다.",
        "get_variable_desc": "A 변수에 저장된 값입니다.",
        "get_variable_elements": "A-- 변수명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A",
        "get_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print(age)",
        "get_variable_exampleDesc": "age라는 변수를 만들고 그 값을 16으로 정합니다. [시작하기]버튼을 클릭하면 오브젝트가 age 변수에 들어 가 있는 값인 \\\"16\\\"을 말합니다.",
        "change_variable_desc": "A 변수에 B만큼 더합니다.",
        "change_variable_elements": "A-- 변수명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 숫자값",
        "change_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print_for_sec(age, 2)\n    age += 2\n    Entry.print_for_sec(age, 2)",
        "change_variable_exampleDesc": "age라는 변수를 만들고 그 값을 16으로 정합니다. [시작하기]버튼을 클릭하면 오브젝트가 age 변수에 들어 가 있는 값인 \\\"16\\\"을 2초 동안 말합니다. 그 후 age변수에 2를 더하고 더한값인 \\\"18\\\"을 2초 동안 말합니다.",
        "set_variable_desc": "A 변수의 값을 B로 정합니다. 만약 A 변수가 없으면  [속성] 탭에 A 변수가 자동 생성됩니다.",
        "set_variable_elements": "A-- 변수명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 변수에 넣을 값\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "set_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print(age)",
        "set_variable_exampleDesc": "age라는 변수를 만들고 그 값을 16으로 정합니다. [시작하기]버튼을 클릭하면 오브젝트가 age 변수에 들어 가 있는 값인 \\\"16\\\"을 말합니다.",
        "show_variable_desc": "A 변수 창을 실행화면에 보이게 합니다.",
        "show_variable_elements": "A-- \\\"변수명\\\"\n① 모든 오브젝트에서 사용: \\\"A\\\"\n② 이 오브젝트에서 사용: \\\"self.A\\\"",
        "show_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.hide_variable(\\\"age\\\")\n    Entry.wait_for_sec(2)\n    age = 20\n    Entry.show_variable(\\\"age\\\")",
        "show_variable_exampleDesc": "age라는 변수를 만들고 그 값을 16으로 정합니다. [시작하기]버튼을 클릭하면 age변수창을 실행화면에서 숨깁니다. 2초 후 변수값을 17로 바꾸고 age변수창을 실행화면에 보이게 합니다.",
        "hide_variable_desc": "A 변수 창을 실행화면에서 숨깁니다.",
        "hide_variable_elements": "A-- \\\"변수명\\\"\n① 모든 오브젝트에서 사용: \\\"A\\\"\n② 이 오브젝트에서 사용: \\\"self.A\\\"",
        "hide_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.hide_variable(\\\"age\\\")\n    Entry.print_for_sec(age, 2)",
        "hide_variable_exampleDesc": "age라는 변수를 만들고 그 값을 16으로 정합니다. [시작하기]버튼을 클릭하면 age변수창을 실행화면에서 숨기고, 오브젝트가 age 변수에 들어 가 있는 값인 \\\"16\\\"을 2초 동안 말합니다.",
        "value_of_index_from_list_desc": "A 리스트에서 B위치의 항목 값을 의미합니다. \n(첫 번째 항목의 위치는 0부터 시작합니다.)",
        "value_of_index_from_list_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 리스트 항목의 위치",
        "value_of_index_from_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    Entry.print(basket[1])\n",
        "value_of_index_from_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 오브젝트가 basket 리스트의 1번째 항목인 orange를 말합니다.",
        "add_value_to_list_desc": "A 리스트의 마지막 항목으로 B값이 추가됩니다.",
        "add_value_to_list_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 리스트에 넣을 항목 값\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "add_value_to_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    basket.append(\\\"juice\\\")\n    Entry.print(basket[4])",
        "add_value_to_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 \\\"juice\\\"를 basket의 마지막 항목으로 추가합니다. 오브젝트는 basket의 4번째 항목인 \\\"juice\\\"를 말합니다.",
        "remove_value_from_list_desc": "A 리스트의 B위치에 있는 항목을 삭제합니다.\n(첫 번째 항목의 위치는 0부터 시작합니다.)",
        "remove_value_from_list_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 리스트 항목의 위치값",
        "remove_value_from_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\ndef when_start():\n    basket.pop(0)\n    Entry.print(basket[0])",
        "remove_value_from_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket의 0번째 항목인 apple을 삭제합니다. 오브젝트는 새롭게 basket의 0번째 항목이 된 \\\"orange\\\"를 말합니다.",
        "insert_value_to_list_desc": "A 리스트의 B위치에 C항목을 끼워 넣습니다. \n(첫 번째 항목의 위치는 0부터 시작합니다. B위치보다 뒤에 있는 항목들은 순서가 하나씩 밀려납니다.)",
        "insert_value_to_list_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 리스트 항목의 위치%nextC-- 리스트에 넣을 항목 값\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "insert_value_to_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    basket.insert(1, \\\"juice\\\")\n    Entry.print(basket[2])",
        "insert_value_to_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket의 1번째 위치에 항목 \\\"juice\\\"를 끼워 넣습니다. 오브젝트는 새롭게 basket의 2번째 항목이 된 \\\"orange\\\"를 말합니다.",
        "change_value_list_index_desc": "A 리스트에서 B위치에 있는 항목의 값을 C 값으로 바꿉니다.\n(첫 번째 항목의 위치는 0부터 시작합니다.)",
        "change_value_list_index_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A%nextB-- 리스트 항목의 위치%nextC-- 리스트에 넣을 항목 값\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등",
        "change_value_list_index_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    basket[0] = \\\"juice\\\"\n    Entry.print(basket[0])",
        "change_value_list_index_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket의 0번째 위치의 항목 \\\"apple\\\"을 \\\"juice\\\"로 바꿉니다. 오브젝트는 바뀐 basket의 0번째 항목 \\\"juice\\\"를 말합니다.",
        "length_of_list_desc": "A 리스트가 보유한 항목 개수 값입니다.",
        "length_of_list_elements": "A-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A",
        "length_of_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    Entry.print(len(basket))",
        "length_of_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 오브젝트는  basket의 항목 개수인 4를 말합니다.",
        "is_included_in_list_desc": "A값을 가진 항목이 B리스트에 포함되어 있는지 확인합니다.",
        "is_included_in_list_elements": "A-- 리스트의 항목 값\n① 문자 : \\\"안녕!\\\", \\\"엔트리\\\" 등 \n② 숫자 : 0, 10, 35 등%nextB-- 리스트명\n① 모든 오브젝트에서 사용: A\n② 이 오브젝트에서 사용: self.A",
        "is_included_in_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    if \\\"apple\\\" in basket:\n        Entry.print(\\\"사과가 있어!\\\")",
        "is_included_in_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket 리스트에 \\\"apple\\\"항목이 있는지 확인합니다. \\\"apple\\\"항목이 있기 때문에 오브젝트는 \\\"사과가 있어!\\\"라 말합니다.",
        "show_list_desc": "선택한 리스트 창을 실행화면에 보이게 합니다.",
        "show_list_elements": "A-- \\\"리스트명\\\"\n① 모든 오브젝트에서 사용: \\\"A\\\"\n② 이 오브젝트에서 사용: \\\"self.A\\\"",
        "show_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    Entry.hide_list(\\\"basket\\\")\n    Entry.wait_for_sec(2)\n    Entry.show_list(\\\"basket\\\")",
        "show_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket 리스트를 2초간 숨긴 다음 보여줍니다.",
        "hide_list_desc": "선택한 리스트 창을 실행화면에서 숨깁니다.",
        "hide_list_elements": "A-- \\\"리스트명\\\"\n① 모든 오브젝트에서 사용: \\\"A\\\"\n② 이 오브젝트에서 사용: \\\"self.A\\\"",
        "hide_list_exampleCode": "basket = [\\\"apple\\\", \\\"orange\\\", \\\"pear\\\", \\\"grape\\\"]\n\ndef when_start():\n    Entry.hide_list(\\\"basket\\\")\n    Entry.wait_for_sec(2)\n    Entry.show_list(\\\"basket\\\")",
        "hide_list_exampleDesc": "basket이라는 리스트를 만들고 4개의 항목을 넣습니다. [시작하기]버튼을 클릭하면 basket 리스트를 2초간 숨긴 다음 보여줍니다.",
        "boolean_and_or_desc": "A와 B의 판단값을 확인하여 True 또는 False로 판단합니다.",
        "boolean_and_or_elements": "② or : A와 B의 판단 중 하나라도 True인 경우 True, 아닌 경우 False",
        "boolean_and_or_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\\\"a\\\") and Entry.is_key_pressed(\\\"s\\\"):\n            Entry.add_effect(\\\"color\\\", 10)",
        "boolean_and_or_exampleDesc": "[시작하기]버튼을 클릭하고 키보드의 \\\"a\\\" 와 \\\"s\\\"키를 동시에 눌렀을 때, 색깔 효과를 10만큼 줍니다.",
        "check_weather_desc": "B날짜에 C지역의 날씨가 A인 경우 True로 판단합니다.",
        "check_weather_elements": "A-- 아래 선택지 중 하나\n①    \\\"sunny\\\" : 맑음\n②    \\\"partly cloudy\\\" : 구름조금\n③    \\\"mostly cloudy\\\" : 구름많음\n④    \\\"cloudy\\\" : 흐림\n⑤    \\\"rainy\\\" : 비\n⑥    \\\"sleet\\\" : 진눈깨비\n⑦    \\\"snowy\\\" : 눈%nextB-- 아래 선택지 중 하나\n①    \\\"yesterday\\\" : 어제\n②    \\\"today\\\" : 오늘\n③    \\\"tomorrow\\\" : 내일\n④    \\\"After 2 days\\\" : 모레\n⑤    \\\"After 3 days\\\" : 3일 후\n⑥    \\\"After 4 days\\\" : 4일 후\n⑦    \\\"After 5 days\\\" : 5일 후\n⑧    \\\"After 6 days\\\" : 6일 후%nextC-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "check_weather_exampleCode": "def when_start():\n    if Weather.is_condition_sunny(\\\"today\\\", \\\"Seoul\\\"):\n        Entry.print(\\\"오늘 서울의 날씨는 맑습니다.\\\")",
        "check_weather_exampleDesc": "[시작하기]버튼을 클릭하면 오늘 서울의 날씨가 맑은지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 \\\"오늘 서울의 날씨는 맑습니다.\\\"라고 말합니다.​",
        "check_finedust_desc": "선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.",
        "check_finedust_elements": "A-- 아래 선택지 중 하나\n①    \\\"good\\\" : 좋음\n②    \\\"normal\\\" : 보통\n③    \\\"bad\\\" : 나쁨\n④    \\\"very bad\\\" : 매우나쁨%nextB-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "check_finedust_exampleCode": "def when_start():\n    if Weather.is_current_finedust_grade_good(\\\"Seoul\\\"):\n        Entry.print(\\\"현재 서울의 미세먼지 등급은 좋음입니다.\\\")",
        "check_finedust_exampleDesc": "[시작하기]버튼을 클릭하면 현재 서울의 미세먼지 등급이 좋음인지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 “오늘 서울의 미세먼지 등급은 좋음입니다.”라고 말합니다.​",
        "get_weather_data_desc": "선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.",
        "get_weather_data_elements": "A-- 아래 선택지 중 하나\n①    \\\"the lowest temperature\\\" : 최저기온\n②    \\\"the highest temperature\\\" : 최고기온\n③    \\\"humidity\\\" : 습도\n④    \\\"precipitation\\\" : 강수량\n⑤    \\\"precipitation probability\\\" : 강수확률\n⑥    \\\"wind speed\\\" : 풍속%nextB-- 아래 선택지 중 하나\n①    \\\"yesterday\\\" : 어제\n②    \\\"today\\\" : 오늘\n③    \\\"tomorrow\\\" : 내일\n④    \\\"After 2 days\\\" : 모레\n⑤    \\\"After 3 days\\\" : 3일 후\n⑥    \\\"After 4 days\\\" : 4일 후\n⑦    \\\"After 5 days\\\" : 5일 후\n⑧    \\\"After 6 days\\\" : 6일 후%nextC-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "get_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_lowest_temperature(\\\"today\\\", \\\"Seoul\\\"))",
        "get_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 최저기온을 말합니다.​",
        "get_current_weather_data_desc": "현재 B지역의 A 날씨 정보값을 의미합니다.",
        "get_current_weather_data_elements": "A-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북%nextB-- 아래 선택지 중 하나\n①    \\\"temperature\\\" : 기온\n②    \\\"concentration of fine dust\\\" : 미세먼지농도",
        "get_current_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_current_temperature(\\\"Seoul\\\"))",
        "get_current_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 현재 서울의 기온을 말합니다.",
        "get_today_temperature_desc": "오늘 A지역의 B 시간대 기온 정보값을 의미합니다.",
        "get_today_temperature_elements": "A-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북%nextB-- 아래 선택지 중 하나\n①    \\\"00\\\" : 당일 00시 측정된 기온값\n②    \\\"03\\\" : 당일 03시 측정된 기온값\n③    \\\"06\\\" : 당일 06시 측정된 기온값\n④    \\\"09\\\" : 당일 09시 측정된 기온값\n⑤    \\\"12\\\" : 당일 12시 측정된 기온값\n⑥    \\\"15\\\" : 당일 15시 측정된 기온값\n⑦    \\\"18\\\" : 당일 18시 측정된 기온값\n⑧    \\\"21\\\" : 당일 21시 측정된 기온값",
        "get_today_temperature_exampleCode": "def when_start():\n    Entry.print(Weather.get_today_temperature(\\\"Seoul\\\", 00))",
        "get_today_temperature_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 00시 기온을 말합니다.​",
        "check_city_weather_desc": "B날짜에 C지역의 날씨가 A인 경우 True로 판단합니다.",
        "check_city_weather_elements": "A-- 아래 선택지 중 하나\n①    \\\"sunny\\\" : 맑음\n②    \\\"partly cloudy\\\" : 구름조금\n③    \\\"mostly cloudy\\\" : 구름많음\n④    \\\"cloudy\\\" : 흐림\n⑤    \\\"rainy\\\" : 비\n⑥    \\\"sleet\\\" : 진눈깨비\n⑦    \\\"snowy\\\" : 눈%nextB-- 아래 선택지 중 하나\n①    \\\"yesterday\\\" : 어제\n②    \\\"today\\\" : 오늘\n③    \\\"tomorrow\\\" : 내일\n④    \\\"After 2 days\\\" : 모레\n⑤    \\\"After 3 days\\\" : 3일 후\n⑥    \\\"After 4 days\\\" : 4일 후\n⑦    \\\"After 5 days\\\" : 5일 후\n⑧    \\\"After 6 days\\\" : 6일 후%nextC-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "check_city_weather_exampleCode": "def when_start():\n    if Weather.is_condition_sunny(\\\"today\\\", \\\"Seoul\\\"):\n        Entry.print(\\\"오늘 서울의 날씨는 맑습니다.\\\")",
        "check_city_weather_exampleDesc": "[시작하기]버튼을 클릭하면 오늘 서울의 날씨가 맑은지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 \\\"오늘 서울의 날씨는 맑습니다.\\\"라고 말합니다.​",
        "check_city_finedust_desc": "선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.",
        "check_city_finedust_elements": "A-- 아래 선택지 중 하나\n①    \\\"good\\\" : 좋음\n②    \\\"normal\\\" : 보통\n③    \\\"bad\\\" : 나쁨\n④    \\\"very bad\\\" : 매우나쁨%nextB-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "check_city_finedust_exampleCode": "def when_start():\n    if Weather.is_current_finedust_grade_good(\\\"Seoul\\\"):\n        Entry.print(\\\"현재 서울의 미세먼지 등급은 좋음입니다.\\\")",
        "check_city_finedust_exampleDesc": "[시작하기]버튼을 클릭하면 현재 서울의 미세먼지 등급이 좋음인지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 “오늘 서울의 미세먼지 등급은 좋음입니다.”라고 말합니다.​",
        "get_city_weather_data_desc": "선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.",
        "get_city_weather_data_elements": "A-- 아래 선택지 중 하나\n①    \\\"the lowest temperature\\\" : 최저기온\n②    \\\"the highest temperature\\\" : 최고기온\n③    \\\"humidity\\\" : 습도\n④    \\\"precipitation\\\" : 강수량\n⑤    \\\"precipitation probability\\\" : 강수확률\n⑥    \\\"wind speed\\\" : 풍속%nextB-- 아래 선택지 중 하나\n①    \\\"yesterday\\\" : 어제\n②    \\\"today\\\" : 오늘\n③    \\\"tomorrow\\\" : 내일\n④    \\\"After 2 days\\\" : 모레\n⑤    \\\"After 3 days\\\" : 3일 후\n⑥    \\\"After 4 days\\\" : 4일 후\n⑦    \\\"After 5 days\\\" : 5일 후\n⑧    \\\"After 6 days\\\" : 6일 후%nextC-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북",
        "get_city_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_lowest_temperature(\\\"today\\\", \\\"Seoul\\\"))",
        "get_city_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 최저기온을 말합니다.​",
        "get_current_city_weather_data_desc": "현재 B지역의 A 날씨 정보값을 의미합니다.",
        "get_current_city_weather_data_elements": "A-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북%nextB-- 아래 선택지 중 하나\n①    \\\"temperature\\\" : 기온\n②    \\\"concentration of fine dust\\\" : 미세먼지농도",
        "get_current_city_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_current_temperature(\\\"Seoul\\\"))",
        "get_current_city_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 현재 서울의 기온을 말합니다.",
        "get_today_city_temperature_desc": "오늘 A지역의 B 시간대 기온 정보값을 의미합니다.",
        "get_today_city_temperature_elements": "A-- 아래 선택지 중 하나\n①    \\\"Seoul\\\" : 서울\n②    \\\"Gangwon-do\\\" : 강원\n③    \\\"Gyeonggi-do\\\" : 경기\n④    \\\"Gyeongsangnam-do\\\" : 경남\n⑤    \\\"Gyeongsangbuk-do\\\" : 경북\n⑥    \\\"Gwangju\\\" : 광주\n⑦    \\\"Daegu\\\" : 대구\n⑧    \\\"Daejeon\\\" : 대전\n⑨    \\\"Busan\\\" : 부산\n⑩    \\\"Sejong\\\" : 세종\n⑪    \\\"Ulsan\\\" : 울산\n⑫    \\\"Incheon\\\" : 인천\n⑬    \\\"Jeollanam-do\\\" : 전남\n⑭    \\\"Jeollabuk-do\\\" : 전북\n⑮    \\\"Jeju\\\" : 제주\nⒶ \\\"Chungcheongnam-do\\\" : 충남\nⒷ \\\"Chungcheongbuk-do\\\": 충북%nextB-- 아래 선택지 중 하나\n①    \\\"00\\\" : 당일 00시 측정된 기온값\n②    \\\"03\\\" : 당일 03시 측정된 기온값\n③    \\\"06\\\" : 당일 06시 측정된 기온값\n④    \\\"09\\\" : 당일 09시 측정된 기온값\n⑤    \\\"12\\\" : 당일 12시 측정된 기온값\n⑥    \\\"15\\\" : 당일 15시 측정된 기온값\n⑦    \\\"18\\\" : 당일 18시 측정된 기온값\n⑧    \\\"21\\\" : 당일 21시 측정된 기온값",
        "get_today_city_temperature_exampleCode": "def when_start():\n    Entry.print(Weather.get_today_city_temperature(\\\"Seoul\\\", 00))",
        "get_today_city_temperature_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 00시 기온을 말합니다.​"
    },
    "Painter": {
        "select_cut": "You can cut with a square dotted line.",
        "thickness_of_eraser": "Thickness of eraser",
        "font": "Font",
        "font_color": "Font color",
        "outline_color": "Outline color",
        "outline_thickness": "Outline thickness",
        "fill_color": "Fill",
        "inversion": "Inversion",
        "font_size": "Font size",
        "font_family": "Font family",
        "fullscreen": "Full screen",
        "exit_fullscreen": "Exit full screen",
        "picture_import": "Import a picture",
        "edit_way": "Edit way",
        "line": "Line",
        "vertex": "Vertex",
        "bitmap": "Bitmap",
        "vector": "Vector",
        "forward": "forward",
        "backward": "backward",
        "front": "front",
        "back": "back",
        "group": "group",
        "ungroup": "ungroup",
        "copy_picture": "copy",
        "delete_picture": "delete",
        "cut_picture": "cut",
        "paste_picture": "paste",
        "remove_all": "clear",
        "new_picture": "New Picture",
        "edit": "Edit",
        "picture_size": "Size",
        "picture_rotation": "Rotation",
        "thickness": "thickness",
        "font_fill": "Fill",
        "painter_file_save": "Save",
        "painter_file_saveas": "Save as a new picture",
        "file": "File",
        "Pencil": "Pen",
        "Line": "Line",
        "Path": "Path",
        "Pan": "Move",
        "Select": "Select",
        "Rectangle": "Rectangle",
        "Ellipse": "Ellipse",
        "Text": "Text Box",
        "Fill": "Fill",
        "Eraser": "Eraser",
        "get_file": "get",
        "copy_file": "copy"
    },
    "DataAnalytics": {
        "data_analysis": "Data Analysis",
        "create_table": "Add Table",
        "data": "Data Analysis",
        "add_table": "Add Table",
        "show_chart": "Show Chart",
        "show_table": "Show Table",
        "legend": "Legend",
        "value": "Value",
        "summary": "Summary",
        "column_name": "Column Name",
        "total": "Total",
        "dashboard": "Dashboard",
        "table": "Table",
        "chart": "Chart",
        "attribute": "Column",
        "row": "Row",
        "average": "Average",
        "standard_deviation": "Standard Deviation",
        "maximum": "Maximum",
        "minimum": "Minimum",
        "median": "Median",
        "average_explain": "The result that add all values of that property and divide the total by number of the property.",
        "standard_deviation_explain": "A value that tells how spread out the data are from the average.\nCloser to zero means that the values are concentrated near the average.",
        "maximum_minimum_explain": "Largest and Smallest values for the property",
        "median_explain": "The value located at the center of the whole when all the values of the property are arranged in size order.",
        "add_row_above": "Add row above",
        "add_row_below": "Add row below",
        "delete_row": "Delete Row",
        "add_property_left": "Add Property to left",
        "add_property_right": "Add Property to right",
        "delete_attribute": "Delete Attribute",
        "data_alert": "You can only see counts for attributes that contain non-numeric values.",
        "save": "Save",
        "cancel": "Cancel",
        "confirm": "OK",
        "attribute_count": ".",
        "row_count": "row",
        "cell_count": "cell",
        "count": "count",
        "add_chart_alert": "No chart in table.\nAdd table.",
        "enter_attribute_name": "Please enter a column name(with less than 10 characters).",
        "placeholder_attribute_name": "Column name",
        "new_attribute": "New column",
        "chart_title": "Chart title",
        "remove_chart": "Delete chart",
        "add_chart_first": "No chart in table. \nAdd table.",
        "bar": "Bar",
        "line": "Line",
        "pie": "Pie",
        "scatter": "Dot",
        "bar_sub": "Bar graph",
        "line_sub": "Line graph",
        "pie_sub": "Pie chart",
        "scatter_sub": "Scatter plot",
        "histogram": "Histogram",
        "select_x_axis": "Select the x-axis.",
        "x_axis": "x-axis",
        "y_axis": "y-axis",
        "select_y_axis": "Select the y-axis.",
        "select_y_axis_or_legend": "Select the y-axis or legends.",
        "select_legend": "Select the legends.",
        "cell": "Cell",
        "unable_to_express_chart": "This cannot be expressed in charts.",
        "edit_attribute_name": "Change name",
        "duplicate_attribute_name_title": "Failed to change column name.",
        "duplicate_attribute_name_content": "A column with the same name exists.",
        "fail_save_table": "Failed to save table.",
        "duplicate_table_name_content": "A table with the same name exists.",
        "saved_table_title": "Saved successfully.",
        "saved_table_content": "The information of table and charts was successfully saved.",
        "empty_table_name_content": "Table's name can't be space.",
        "do_not_delete_row": "The row cannot be deleted.",
        "rows_cannot_less_one": "Tables must have at least one row.",
        "and": "and",
        "other": "other(s)",
        "stop": "Project Stop",
        "restart": "Project Resume",
        "pause": "Project Pause",
        "max_row_count_error_title": "Table is too large",
        "max_row_count_error": "If the table has more than 30,000 cells,\nyou can upload the table but can't edit.\nPlease use a separate program to edit large tables.",
        "attributes_text": "%1 and %2 other(s)",
        "duplicate": "Duplicate",
        "copy": "Copy",
        "delete": "Delete",
        "paste": "Paste",
        "cut": "Cut",
        "download": "Download to PC",
        "download_table": "Download Table to Excel File",
        "confirm_content": "Save the changed tables and charts?",
        "please_add_table": "Please add the table first.",
        "load_data_analytics": "Load table",
        "summary_table_description": "Basic statistics based on columns in the table.",
        "not_exist_chart": "No charts have been added.",
        "please_add_chart": "Please add the chart first.",
        "chart_name": "Chart name",
        "remove_confirm_content": "Are you sure you want to delete the table?",
        "not_editable_content": "Tables with more than 30,000 cells <br />cannot be edited in Entry.",
        "limit_cell_count_title": "Limits on number of rows/columns",
        "limit_cell_count_content": "No more rows or columns can be added.\nYon can only edit tables\nup to 30,000 cells in Entry",
        "number_of_bins": "Number of bins",
        "bin_width": "Bin width",
        "bin_boundary": "Bin boundary",
        "left_closed": "Left-closed",
        "right_closed": "Right-closed",
        "ascending": "Ascending",
        "default": "Default",
        "quantity": "Quantity",
        "in_order": "In order",
        "not_distinguished": "Not distinguished",
        "select_table": "Click [Add Table] to add table.",
        "select_table_title": "How to add table",
        "select_table_des1": "1. On the 'Select table' tab, select the default table provided by the Entry.",
        "select_table_des2": "2. On the 'Upload files' tab, upload the CSV, XLS(X) file directly.",
        "select_table_des3": "3. On the 'New table' tab, add an empty table and enter the data directly.",
        "statistic": "Representative value",
        "provider": "Source",
        "description": "Description",
        "field_info": "Field Info",
        "show_all_points": "Show All Points",
        "coefficient": "Coefficient",
        "scatter_matrix": "Scatter plot matrix"
    },
    "AiLearning": {
        "equation": "equation",
        "predict": "Prediction",
        "cluster_number": "Cluster",
        "centriod": "Centriod",
        "class": "Class",
        "show": "Show",
        "hide": "Hide",
        "open": "Open",
        "close": "Close",
        "probability": "Confidence",
        "neighbor_count": "Number of neighbors",
        "cluster_option_centroids_kmpp": "Farthest",
        "cluster_option_centroids_random": "Random",
        "model_attr_str": "Feature",
        "model_status_0": "Status: Ready",
        "model_status_1": "Status: Training",
        "model_status_2": "Status: Trained",
        "model_status_3": "Status: Unavailable",
        "train_param_learningRate": "Learning rate",
        "train_param_epochs": "Epoch",
        "train_param_validationRate": "Test data rate",
        "chart_title": "Model chart"
    },
    "pose_list": {
        "nose": "nose",
        "left_eye_inner": "left eye (inner)",
        "left_eye": "left eye",
        "left_eye_outer": "left eye (outer)",
        "right_eye_inner": "right eye (inner)",
        "right_eye": "right eye",
        "right_eye_outer": "right eye (outer)",
        "left_ear": "left ear",
        "right_ear": "right ear",
        "mouth_left": "mouth (left)",
        "mouth_right": "mouth (right)",
        "left_shoulder": "left shoulder",
        "right_shoulder": "right shoulder",
        "left_elbow": "left elbow",
        "right_elbow": "right elbow",
        "left_wrist": "left wrist",
        "right_wrist": "right wrist",
        "left_pinky": "left pinky",
        "right_pinky": "right pinky",
        "left_index": "left index",
        "right_index": "right index",
        "left_thumb": "left thumb",
        "right_thumb": "right thumb",
        "left_hip": "left hip",
        "right_hip": "right hip",
        "left_knee": "left knee",
        "right_knee": "right knee",
        "left_ankle": "left ankle",
        "right_ankle": "right ankle",
        "left_heel": "left heel",
        "right_heel": "right heel",
        "left_foot_index": "left foot index",
        "right_foot_index": "right foot index"
    },

    "gesture_list": {
        "closed_fist": "Closed Fist",
        "open_palm": "Open Palm",
        "pointing_up": "Pointing Up",
        "thumb_down": "Thumb Down",
        "thumb_up": "Thumb Up",
        "victory": "Victory",
        "iloveyou": "I Love You",
        "none": "Unknown"
    },
    "SharePolicy": { "title": "Entry Project/Post share Guide" }
}
